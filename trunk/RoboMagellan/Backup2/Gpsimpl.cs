//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.Ccr.Core;
using Microsoft.Dss.Core;
using Microsoft.Dss.Core.Attributes;
using Microsoft.Dss.ServiceModel.Dssp;
using Microsoft.Dss.ServiceModel.DsspServiceBase;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Xml;
using W3C.Soap;
using robomagellan = RoboMagellan;


namespace RoboMagellan
{
    
    
    /// <summary>
    /// Implementation class for Gpsimpl
    /// </summary>
    [DisplayName("Gpsimpl")]
    [Description("The Gpsimpl Service")]
    [Contract(Contract.Identifier)]
    public class GpsimplService : DsspServiceBase
    {
        
        /// <summary>
        /// _state
        /// </summary>
        private GpsimplState _state = new GpsimplState();
        
        /// <summary>
        /// _main Port
        /// </summary>
        [ServicePort("/gpsimpl", AllowMultipleInstances=false)]
        private GpsimplOperations _mainPort = new GpsimplOperations();
        
        /// <summary>
        /// Default Service Constructor
        /// </summary>
        public GpsimplService(DsspServiceCreationPort creationPort) : 
                base(creationPort)
        {
        }
        
        /// <summary>
        /// Service Start
        /// </summary>
        protected override void Start()
        {
			base.Start();
			// Add service specific initialization here.
        }
        
        /// <summary>
        /// Get Handler
        /// </summary>
        /// <param name="get"></param>
        /// <returns></returns>
        [ServiceHandler(ServiceHandlerBehavior.Concurrent)]
        public virtual IEnumerator<ITask> GetHandler(Get get)
        {
            get.ResponsePort.Post(_state);
            yield break;
        }
    }
}
