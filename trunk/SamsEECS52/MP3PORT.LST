8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  20:19:39  05/10/:8  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE MP3PORT
OBJECT MODULE PLACED IN MP3PORT.OBJ
ASSEMBLER INVOKED BY:  C:\ASMSTU~1\ASM86.EXE MP3PORT.ASM M1 DB EP


LOC  OBJ                  LINE     SOURCE

                             1            NAME  mp3port
                             2     
                             3     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             4     ;                                                                            ;
                             5     ;                                    MP3Port                         ;
                             6     ;                           MP3Port Event Handler                ;
                             7     ;                                                                            ;
                             8     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             9     
                            10     ; Description:      This program an event handler (interrupt service routine).
                            11     ;                   It handles sending data to the mp3 board.
                            12     ;
                            13     ; Input:            None.
                            14     ; Output:           MP3 board
                            15     ; User Interface:   None.
                            16     ; Error Handling:   None.
                            17     ;
                            18     ; Algorithms:       None.
                            19     ; Data Structures:  None.
                            20     ;
                            21     ; Revision History:
                            22     
                            23     ;     5/5/08  Samuel Yang     
                            24     ;     5/9/08 update() added
                            25     
                            26     ; local include files
                            27 +1  $INCLUDE(mp3port.INC)
                      =1    28     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    29     ;                                                                            ;
                      =1    30     ;                                  mp3port.INC                              ;
                      =1    31     ;                              MP3Port Event Handler                         ;
                      =1    32     ;                                 Include File                               ;
                      =1    33     ;                                                                            ;
                      =1    34     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    35     
                      =1    36     ; This file contains the definitions for the MP3Port Event Handler
                      =1    37     ; program (mp3port.ASM).
                      =1    38     ;
                      =1    39     ; Revision History:
                      =1    40     
                      =1    41     ;     5/5/2008 Samuel Yang     
                      =1    42     
                      =1    43     
  0000                =1    44     mp3Loc   EQU     00000H           ;location of mp3 file
  2000                =1    45     mp3testbufflength EQU 8192
  0000                =1    46     mp3portAddress EQU 0000H          ;location of mp3 port, uses PCS0
                      =1    47     
  0000                =1    48     mp3buff0 EQU 0
  0001                =1    49     mp3buff1 EQU 1
  00FE                =1    50     mp3buffRequiredMask EQU 0FEh
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  20:19:39  05/10/:8  PAGE    2


LOC  OBJ                  LINE     SOURCE

  0000                =1    51     lengthZero EQU 0
                      =1    52     
                            53 +1  $INCLUDE(boolean.INC)
                      =1    54     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    55     ;                                                                            ;
                      =1    56     ;                                  boolean.INC                               ;
                      =1    57     ;                             Boolean Definitions                            ;
                      =1    58     ;                                 Include File                               ;
                      =1    59     ;                                                                            ;
                      =1    60     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    61     
                      =1    62     ; This file contains the boolean definitions for the 80188 MP3 Player.
                      =1    63     ;
                      =1    64     ; Revision History:
                      =1    65     
                      =1    66     ;     5/2/2008 Samuel Yang     
                      =1    67     
                      =1    68     
  0001                =1    69     TRUE EQU 1h
  0000                =1    70     FALSE EQU 0h
                            71 +1  $INCLUDE(regAddrs.INC)
                      =1    72     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    73     ;                                                                            ;
                      =1    74     ;                                  regAddrs.INC                              ;
                      =1    75     ;                              Register Addresses and Values                 ;
                      =1    76     ;                                 Include File                               ;
                      =1    77     ;                                                                            ;
                      =1    78     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    79     
                      =1    80     ; This file contains the definitions for the 801C88 MP3 Player.
                      =1    81     ;
                      =1    82     ;
                      =1    83     ; Revision History:
                      =1    84     
                      =1    85     ;     5/2/2008 Samuel Yang     
                      =1    86     
                      =1    87     
                      =1    88     
                      =1    89     
                      =1    90     
                      =1    91     ; Interrupt Vectors
  000C                =1    92     Int0Vec         EQU     12               ;interrupt vector for INT 0
  000D                =1    93     Int1Vec         EQU     13               ;interrupt vector for INT 1
                      =1    94     
                      =1    95     
                      =1    96     ; Interrupt Controller Definitions
                      =1    97     
                      =1    98     ; Addresses
  FF38                =1    99     INT0Ctrlr        EQU    0FF38H           ;address of interrupt 0 controller
  FF3A                =1   100     INT1Ctrlr        EQU    0FF3AH           ;address of interrupt 1 controller
  FF32                =1   101     INTCtrlrCtrl    EQU     0FF32H          ;address of interrupt controller for timer
  FF22                =1   102     INTCtrlrEOI     EQU     0FF22H          ;address of interrupt controller EOI register
                      =1   103     
                      =1   104     ; Register Values
  0001                =1   105     INTCtrlrCVal    EQU     00001H          ;set priority for timers to 1 and enable
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  20:19:39  05/10/:8  PAGE    3


LOC  OBJ                  LINE     SOURCE

                      =1   106                                             ;000000000000----  reserved
                      =1   107                                             ;------------0---  enable timer interrupt
                      =1   108                                             ;-------------001  timer priority
  0011                =1   109     INT0CtrlrVal    EQU             00011H                  ;set to level triggering, pri
                                   ority 2, enable
                      =1   110                                             ;000000000-------  reserved
                      =1   111                                             ;---------0------  disable fully nested mode
                      =1   112                                             ;----------0-----  disable cascade mode
                      =1   113                                                                                     ;----
                                   -------1----  level triggering
                      =1   114                                             ;------------0---  enable interrupt
                      =1   115                                             ;-------------010  int priority         
                                                                      
  0012                =1   116     INT1CtrlrVal    EQU             00012H                  ;set to level triggering, pri
                                   ority 2, enable
                      =1   117                                             ;000000000-------  reserved
                      =1   118                                             ;---------0------  disable fully nested mode
                      =1   119                                             ;----------0-----  disable cascade mode
                      =1   120                                                                                     ;----
                                   -------1----  level triggering
                      =1   121                                             ;------------0---  enable interrupt
                      =1   122                                             ;-------------010  int priority         
                                                                                      
  001A                =1   123     INT1CtrlrValDisable EQU 0001AH                  ;set to level triggering, priority 2,
                                    disable
                      =1   124                                             ;000000000-------  reserved
                      =1   125                                             ;---------0------  disable fully nested mode
                      =1   126                                             ;----------0-----  disable cascade mode
                      =1   127                                                                                     ;----
                                   -------1----  level triggering
                      =1   128                                             ;------------1---  disable interrupt
                      =1   129                                             ;-------------010  int priority 
                      =1   130                                                                                     
  0008                =1   131     TimerEOI        EQU     00008H          ;Timer EOI command (samNone for all timers)
  8000                =1   132     NonSpecEOI      EQU     08000H          ;Non-specific EOI command
                      =1   133     
                      =1   134     
                      =1   135     ; Chip Select Unit Definitions
                      =1   136     
                      =1   137     ; Addresses
  FFA4                =1   138     PACSreg         EQU     0FFA4H          ;address of PACS register
  FFA8                =1   139     MPCSreg         EQU     0FFA8H          ;address of MPCS register
                      =1   140     
                      =1   141     
                      =1   142     ; Control Register Values
  0000                =1   143     PACSval         EQU     00000H          ;PCS base at 0, 3 wait states
                      =1   144                                             ;0000000000------  starts at address 0
                      =1   145                                             ;----------000---  reserved
                      =1   146                                             ;-------------0--  wait for RDY inputs
                      =1   147                                             ;--------------11  3 wait states
  4003                =1   148     MPCSval         EQU     04003H          ;PCS in I/O space, use PCS5/6, 3 wait states
                      =1   149                                             ;0---------000---  reserved
                      =1   150                                             ;-1000000--------  MCS is 512KB
                      =1   151                                             ;--------0-------  output PCS5/PCS6
                      =1   152                                             ;---------0------  PCS in I/O space
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  20:19:39  05/10/:8  PAGE    4


LOC  OBJ                  LINE     SOURCE

                      =1   153                                             ;-------------0--  wait for RDY inputs
                      =1   154                                             ;--------------11  3 wait states
                      =1   155     
                      =1   156     ; Timing Definitions
                      =1   157     
                      =1   158     
                      =1   159     
                      =1   160     ; General Definitions
                      =1   161     
  0001                =1   162     FIRST_RESERVED_VEC      EQU     1       ;reserve vectors 1-3
  0003                =1   163     LAST_RESERVED_VEC       EQU     3
  0100                =1   164     NUM_IRQ_VECTORS         EQU     256     ;number of interrupt vectors
                      =1   165     
                           166     
                           167     CGROUP GROUP CODE
                           168     DGROUP GROUP DATA
                           169     
                           170     
----                       171     CODE SEGMENT PUBLIC 'CODE'
                           172     
                           173             ASSUME  CS:CGROUP, DS:DGROUP
                           174     
                           175     
                           176     ; audio_halt
                           177     ;
                           178     ; Description:       Immediately halts audio play
                           179     ;
                           180     ; Operation:         Disables mp3 board interrupt
                           181     ;
                           182     ; Arguments:         None.
                           183     ; Return Value:      None.
                           184     ;
                           185     ; Local Variables:   None.
                           186     ; Shared Variables:  None.
                           187     ; Input:            None.
                           188     ; Output:            None.
                           189     ;
                           190     ; Error Handling:    None.
                           191     ;
                           192     ; Algorithms:        None.
                           193     ; Data Structures:   None.
                           194     ;
                           195     ; Registers Changed: None
                           196     ; Stack Depth:       2 words
                           197     ;
                           198     ; Last Modified:     5-9-2008
                           199     
0000                       200     audio_halt       PROC    NEAR
                           201                                             PUBLIC audio_halt
0000 50                    202                     PUSH AX
0001 52                    203                     PUSH DX
                           204                     
0002 BA3AFF                205                     MOV DX, INT1Ctrlr                       ;disable mp3 board interrupt
0005 B81A00                206                     MOV AX, INT1CtrlrValDisable
0008 EE                    207                     OUT DX, AL
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  20:19:39  05/10/:8  PAGE    5


LOC  OBJ                  LINE     SOURCE

                           208                     
0009 5A                    209                     POP DX
000A 58                    210                     POP AX
000B C3                    211                     RET
                           212     
                           213     audio_halt       ENDP
                           214     
                           215     ; audio_play
                           216     ;
                           217     ; Description:       Begins playing audio from passed buffer
                           218     ;
                           219     ; Operation:         Copies buffer information, enables interrupts
                           220     ;
                           221     ; Arguments:         None.
                           222     ; Return Value:      None.
                           223     ;
                           224     ; Local Variables:   None.
                           225     ; Shared Variables:  None.
                           226     ; Input:            None.
                           227     ; Output:            None.
                           228     ;
                           229     ; Error Handling:    None.
                           230     ;
                           231     ; Algorithms:        None.
                           232     ; Data Structures:   None.
                           233     ;
                           234     ; Registers Changed: None
                           235     ; Stack Depth:       2 words
                           236     ;
                           237     ; Last Modified:     5-9-2008
                           238     
000C                       239     audio_play       PROC    NEAR
                           240                                             PUBLIC audio_play
000C 55                    241                     PUSH BP
000D 8BEC                  242                     MOV BP, SP
000F 56                    243                     PUSH SI
0010 57                    244                     PUSH DI
0011 50                    245                     PUSH AX
0012 53                    246                     PUSH BX
0013 8B5E04                247                     MOV BX, [BP+4]
0016 8B7606                248                     MOV SI, [BP+6]
0019 8E4608                249                     MOV ES, [BP+8]
                           250     
                           251             
001C 8C060200       R      252                     MOV mp3buffsegment[mp3buff0], ES        ;store buffer information
0020 89360600       R      253                     MOV mp3buffindex[mp3buff0], SI
0024 891E0A00       R      254                     MOV mp3bufflength[mp3buff0], BX
                           255     
                           256     
0028 C6060E000190   R      257                     MOV bufferRequired, TRUE                        ;flag buffer1 require
                                   d
002E C7060F000000   R      258                     MOV bufferInUse, mp3buff0
                           259             
0034 BA3AFF                260                     MOV DX, INT1Ctrlr                                       ;enable mp3 b
                                   oard interrupt
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  20:19:39  05/10/:8  PAGE    6


LOC  OBJ                  LINE     SOURCE

0037 B81200                261                     MOV AX, INT1CtrlrVal
003A EE                    262                     OUT DX, AL
                           263                     
003B 5B                    264                     POP BX
003C 58                    265                     POP AX
003D 5F                    266                     POP DI
003E 5E                    267                     POP SI
003F 5D                    268                     POP BP
                           269     
0040 C3                    270                     RET
                           271                     
                           272                     
                           273                     
                           274             
                           275     
                           276     audio_play       ENDP
                           277     
                           278     ; update
                           279     ;
                           280     ; Description:       This procedure updates the mp3 bvffers if necessary.
                           281     ;
                           282     ; Operation:         Reads data in, updates status of pressed key.
                           283     ;
                           284     ; Arguments:         address of new buffer in ES:SI, length in BX
                           285     ; Return Value:      True if the new buffer was used, False otherwise
                           286     ;
                           287     ; Local Variables:   None.
                           288     ; Shared Variables:  mp3buff1segment
                           289     ;                           mp3buff2segment
                           290     ;                           mp3buff1index
                           291     ;                           mp3buff2index
                           292     ;                           mp3buff1length
                           293     ;                           mp3buff2length
                           294     ; Input:            None.
                           295     ; Output:            None.
                           296     ;
                           297     ; Error Handling:    None.
                           298     ;
                           299     ; Algorithms:        None.
                           300     ; Data Structures:   None.
                           301     ;
                           302     ; Registers Changed: None
                           303     ; Stack Depth:       5 words
                           304     ;
                           305     ; Last Modified:     5-9-2008
                           306     
0041                       307     update       PROC    NEAR
                           308                                             PUBLIC update
0041 55                    309                     PUSH BP
0042 8BEC                  310                     MOV BP, SP
0044 56                    311                     PUSH SI
0045 57                    312                     PUSH DI
0046 50                    313                     PUSH AX
0047 53                    314                     PUSH BX
0048 8B5E04                315                     MOV BX, [BP+4]
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  20:19:39  05/10/:8  PAGE    7


LOC  OBJ                  LINE     SOURCE

004B 8B7606                316                     MOV SI, [BP+6]
004E 8E4608                317                     MOV ES, [BP+8]
                           318     
                           319                     
0051 803E0E0001     R      320                     CMP bufferRequired, TRUE
0056 752E                  321                     JNE endUpdateFalse
                           322                     
0058 C6060E000090   R      323                     MOV bufferRequired, FALSE       ;reset bufferRequired flag
                           324                     
005E 833E0F0000     R      325                     CMP bufferInUse, mp3buff0       ;save location and length of new buff
                                   er
0063 750F                  326                     JNE replaceBuff1
0065                       327     replaceBuff0:   
0065 8C060200       R      328                     MOV mp3buffsegment[mp3buff0], ES
0069 89360600       R      329                     MOV mp3buffindex[mp3buff0], SI
006D 891E0A00       R      330                     MOV mp3bufflength[mp3buff0], BX
0071 EB0D90                331                     JMP endUpdateTrue
0074                       332     replaceBuff1:
0074 8C060300       R      333                     MOV mp3buffsegment[mp3buff1], ES
0078 89360700       R      334                     MOV mp3buffindex[mp3buff1], SI
007C 891E0B00       R      335                     MOV mp3bufflength[mp3buff1], BX
                           336                     ;JMP endUpdateTrue
0080                       337     endUpdateTrue:  
0080 B80100                338                     MOV AX, TRUE
0083 EB0490                339                     JMP endUpdate
0086                       340     endUpdateFalse:
0086 B80000                341                     MOV AX, FALSE
0089                       342     endUpdate:      
0089 5B                    343                     POP BX
008A 58                    344                     POP AX
008B 5F                    345                     POP DI
008C 5E                    346                     POP SI
008D 5D                    347                     POP BP
                           348     
008E C3                    349                     RET
                           350     
                           351     update       ENDP
                           352     
                           353     ; Int1EventHandler
                           354     ;
                           355     ; Description:       This procedure is the event handler for when the
                           356     ;                       keypad debouncing chip signals a pressed key.
                           357     ;
                           358     ; Operation:         Reads data in, updates status of pressed key.
                           359     ;
                           360     ; Arguments:         None.
                           361     ; Return Value:      None.
                           362     ;
                           363     ; Local Variables:   None.
                           364     ; Shared Variables:  keyCode, keyReady
                           365     
                           366     ; Input:            From keypad debouncing chip.
                           367     ; Output:            None.
                           368     ;
                           369     ; Error Handling:    None.
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  20:19:39  05/10/:8  PAGE    8


LOC  OBJ                  LINE     SOURCE

                           370     ;
                           371     ; Algorithms:        None.
                           372     ; Data Structures:   None.
                           373     ;
                           374     ; Registers Changed: None
                           375     ; Stack Depth:       3 words
                           376     ;
                           377     ; Last Modified:     5-5-2008
                           378     
008F                       379     Int1EventHandler       PROC    NEAR
                           380                                             PUBLIC Int1EventHandler
008F 50                    381                     PUSH AX                         ;save register values
0090 53                    382                     PUSH BX
0091 51                    383                     PUSH CX
0092 52                    384                     PUSH DX
                           385                     
0093 8B1E0000       R      386                     MOV BX, mp3index
0097 43                    387                     INC BX
                           388                     ;do wrap here
0098 81E3FF1F              389                     AND BX, mp3testbufflength-1
009C 891E0000       R      390                     MOV mp3index, BX
00A0 8A871100       R      391                     MOV AL, mp3buff[BX]
00A4                       392     dataReady:
00A4 BA0000                393                     MOV DX, mp3portAddress
00A7 D0C0                  394                     ROL AL, 1
                           395                     
00A9                       396     outputBits:             
00A9 EE                    397                     OUT DX, AL
00AA D0C0                  398                     ROL AL, 1
00AC EE                    399                     OUT DX, AL
00AD D0C0                  400                     ROL AL, 1
00AF EE                    401                     OUT DX, AL
00B0 D0C0                  402                     ROL AL, 1
00B2 EE                    403                     OUT DX, AL
00B3 D0C0                  404                     ROL AL, 1
00B5 EE                    405                     OUT DX, AL
00B6 D0C0                  406                     ROL AL, 1
00B8 EE                    407                     OUT DX, AL
00B9 D0C0                  408                     ROL AL, 1
00BB EE                    409                     OUT DX, AL
00BC D0C0                  410                     ROL AL, 1
00BE EE                    411                     OUT DX, AL
00BF D0C0                  412                     ROL AL, 1
                           413                     
00C1 BA22FF                414                     MOV     DX, INTCtrlrEOI         ;send the EOI to the interrupt contro
                                   ller
00C4 B80D00                415             MOV     AX, Int1Vec
00C7 EE                    416             OUT     DX, AL
                           417                     
00C8 5A                    418                     POP DX                                                  ;restore regi
                                   ster values
00C9 59                    419                     POP CX
00CA 5B                    420                     POP BX
00CB 58                    421                     POP AX
00CC CF                    422             IRET                            ;and return (Event Handlers end with IRET not
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  20:19:39  05/10/:8  PAGE    9


LOC  OBJ                  LINE     SOURCE

                                    RET)
                           423     
                           424     
                           425     Int1EventHandler       ENDP
                           426     
00CD                       427     Int1EventHandlerREAL       PROC    NEAR
                           428                                             PUBLIC Int1EventHandlerREAL
00CD 50                    429                     PUSH AX                         ;save register values
00CE 53                    430                     PUSH BX
00CF 51                    431                     PUSH CX
00D0 52                    432                     PUSH DX
                           433                     
00D1 8B1E0F00       R      434                     MOV BX, bufferInUse                             ;get byte to output
00D5 8E870200       R      435                     MOV ES, mp3buffsegment[BX]
00D9 8BB70600       R      436                     MOV SI, mp3buffIndex[BX]                
00DD 268A04                437                     MOV AL, ES:[SI]
                           438                     
00E0 BA0000                439                     MOV DX, mp3portAddress
00E3 D0C0                  440                     ROL AL, 1
00E5 B90800                441                     MOV CX, 8
00E8                       442     outputBitsr:            
00E8 EE                    443                     OUT DX, AL
00E9 D0C0                  444                     ROL AL, 1
00EB E2FB                  445                     LOOP outputBitsr
                           446                     
                           447                     ;increment buffer index
00ED FF8F0A00       R      448                     DEC mp3bufflength[BX]
00F1 833E0A0000     R      449                     CMP mp3bufflength, lengthZero
00F6 7510                  450                     JNE doneInc
                           451                     ;JE switch buffers
00F8 C6060E000190   R      452                     MOV bufferRequired, TRUE                                ;new buffer r
                                   equired
00FE FF060F00       R      453                     INC bufferInUse                                                 ;swit
                                   ches buffers between 0 and 1
0102 81260F00FE00   R      454                     AND bufferInUse, mp3buffRequiredMask
                           455                     ;JMP doneInc
0108                       456     doneInc:                
0108 BA22FF                457                     MOV     DX, INTCtrlrEOI         ;send the EOI to the interrupt contro
                                   ller
010B B80D00                458             MOV     AX, Int1Vec
010E EE                    459             OUT     DX, AL
                           460                     
010F 5A                    461                     POP DX                                                  ;restore regi
                                   ster values
0110 59                    462                     POP CX
0111 5B                    463                     POP BX
0112 58                    464                     POP AX
0113 CF                    465             IRET                            ;and return (Event Handlers end with IRET not
                                    RET)
                           466     
                           467     
                           468     Int1EventHandlerREAL       ENDP
                           469     
                           470     ; InitMP3Port
                           471     ;
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  20:19:39  05/10/:8  PAGE   10


LOC  OBJ                  LINE     SOURCE

                           472     ; Description:       This procedure initializes everything for keypad
                           473     ;
                           474     ; Operation:        Initializes shared variables
                           475     ;
                           476     ; Arguments:         None.
                           477     ; Return Value:      None.
                           478     ;
                           479     ; Local Variables:   None.
                           480     ; Shared Variables:  keyCode, keyReady
                           481     
                           482     ; Input:            None.
                           483     ; Output:            None.
                           484     ;
                           485     ; Error Handling:    None.
                           486     ;
                           487     ; Algorithms:        None.
                           488     ; Data Structures:   None.
                           489     ;
                           490     ; Registers Changed: None
                           491     ; Stack Depth:       1 words
                           492     ;
                           493     ; Last Modified:     5-2-2008
0114                       494     InitMP3Port   PROC    NEAR
                           495                             PUBLIC InitMP3Port
                           496                     ;do nothing yet
0114 53                    497                     PUSH BX
0115 51                    498                     PUSH CX
0116 C70600000000   R      499                     MOV mp3index, 0
                           500                     
011C 59                    501                     POP CX
011D 5B                    502                     POP BX
011E C3                    503                     RET
                           504     InitMP3Port   ENDP
                           505     
                           506     
                           507     
                           508     
                           509     
                           510     
                           511     
                           512     
                           513     ; InstallHandlerInt1
                           514     ;
                           515     ; Description:       Install the event handler for the int1 interrupt.
                           516     ;
                           517     ; Operation:         Writes the address of the int 1 event handler to the
                           518     ;                    appropriate interrupt vector.
                           519     ;
                           520     ; Arguments:         None.
                           521     ; Return Value:      None.
                           522     ;
                           523     ; Local Variables:   None.
                           524     ; Shared Variables:  None.
                           525     ; Global Variables:  None.
                           526     ;
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  20:19:39  05/10/:8  PAGE   11


LOC  OBJ                  LINE     SOURCE

                           527     ; Input:             None.
                           528     ; Output:            None.
                           529     ;
                           530     ; Error Handling:    None.
                           531     ;
                           532     ; Algorithms:        None.
                           533     ; Data Structures:   None.
                           534     ;
                           535     ; Registers Changed: flags, AX, ES, DX
                           536     ; Stack Depth:       0 words
                           537     ;
                           538     ; Author:            Samuel Yang
                           539     ; Last Modified:     5-5-2008
                           540     
011F                       541     InstallHandlerInt1  PROC    NEAR
                           542                             PUBLIC InstallHandlerInt1
                           543     
                           544     
011F 33C0                  545             XOR     AX, AX          ;clear ES (interrupt vectors are in segment 0)
0121 8EC0                  546             MOV     ES, AX
                           547                                     ;store the vector
0123 26C70634008F00 R      548             MOV     ES: WORD PTR (4 * Int1Vec), OFFSET(Int1EventHandler)
012A 26C7063600---- R      549             MOV     ES: WORD PTR (4 * Int1Vec + 2), SEG(Int1EventHandler)
                           550     
0131 BA3AFF                551                     MOV DX, INT1Ctrlr
0134 B012                  552                     MOV AL, INT1CtrlrVal
0136 EE                    553                     OUT DX, AL
                           554                     
0137 BA22FF                555                     MOV     DX, INTCtrlrEOI         ;send the EOI to the interrupt contro
                                   ller
013A B80D00                556             MOV     AX, Int1Vec
013D EE                    557             OUT     DX, AL
                           558                     ;STI ;enable interrupts
                           559                     
013E C3                    560             RET                     ;all done, return
                           561     
                           562     
                           563     InstallHandlerInt1  ENDP
                           564     
                           565     
                           566     
                           567     
                           568     
----                       569     CODE ENDS
                           570     
                           571     ;the data segment
                           572     
----                       573     DATA    SEGMENT PUBLIC  'DATA'
0000 0000                  574     mp3index DW 0
                           575     
                           576     
0002 (2                    577     mp3buffsegment DW 2 DUP(?)
     ????
     )
0006 (2                    578     mp3buffindex  DW 2 DUP(?) 
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  20:19:39  05/10/:8  PAGE   12


LOC  OBJ                  LINE     SOURCE

     ????
     )
000A (2                    579     mp3bufflength DW 2 DUP(?)
     ????
     )
000E ??                    580     bufferRequired DB ?
000F ????                  581     bufferInUse    DW ?
                           582     
0011 (8192                 583     mp3buff DB (mp3testbufflength)  DUP(?)
     ??
     )
----                       584     DATA    ENDS
                           585     
                           586     
                           587     
                           588     
                           589             END     

ASSEMBLY COMPLETE, NO ERRORS FOUND
