8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  03:52:14  05/31/:8  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE MP3PORT
OBJECT MODULE PLACED IN MP3PORT.OBJ
ASSEMBLER INVOKED BY:  C:\ASMSTU~1\ASM86.EXE MP3PORT.ASM


LOC  OBJ                  LINE     SOURCE

                             1            NAME  mp3port
                             2     
                             3     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             4     ;                                                                            ;
                             5     ;                                    MP3Port                         ;
                             6     ;                           MP3Port Event Handler                ;
                             7     ;                                                                            ;
                             8     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             9     
                            10     ; Description:      This program an event handler (interrupt service routine).
                            11     ;                   It handles sending data to the mp3 board.
                            12     ;
                            13     ; Input:            None.
                            14     ; Output:           MP3 board
                            15     ; User Interface:   None.
                            16     ; Error Handling:   None.
                            17     ;
                            18     ; Algorithms:       None.
                            19     ; Data Structures:  None.
                            20     ;
                            21     ; Revision History:
                            22     
                            23     ;     5/5/08  Samuel Yang     
                            24     ;     5/9/08 update() added
                            25     
                            26     ; local include files
                            27 +1  $INCLUDE(mp3port.INC)
                      =1    28     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    29     ;                                                                            ;
                      =1    30     ;                                  mp3port.INC                              ;
                      =1    31     ;                              MP3Port Event Handler                         ;
                      =1    32     ;                                 Include File                               ;
                      =1    33     ;                                                                            ;
                      =1    34     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    35     
                      =1    36     ; This file contains the definitions for the MP3Port Event Handler
                      =1    37     ; program (mp3port.ASM).
                      =1    38     ;
                      =1    39     ; Revision History:
                      =1    40     
                      =1    41     ;     5/5/2008 Samuel Yang     
                      =1    42     
                      =1    43     
  0000                =1    44     mp3Loc   EQU     00000H           ;location of mp3 file
  2000                =1    45     mp3testbufflength EQU 8192
  0000                =1    46     mp3portAddress EQU 0000H          ;location of mp3 port, uses PCS0
                      =1    47     
  0000                =1    48     mp3buff0 EQU 0
  0001                =1    49     mp3buff1 EQU 1
  00FE                =1    50     mp3buffRequiredMask EQU 0FEh
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  03:52:14  05/31/:8  PAGE    2


LOC  OBJ                  LINE     SOURCE

  0000                =1    51     lengthZero EQU 0
                      =1    52     
                            53 +1  $INCLUDE(boolean.INC)
                      =1    54     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    55     ;                                                                            ;
                      =1    56     ;                                  boolean.INC                               ;
                      =1    57     ;                             Boolean Definitions                            ;
                      =1    58     ;                                 Include File                               ;
                      =1    59     ;                                                                            ;
                      =1    60     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    61     
                      =1    62     ; This file contains the boolean definitions for the 80188 MP3 Player.
                      =1    63     ;
                      =1    64     ; Revision History:
                      =1    65     
                      =1    66     ;     5/2/2008 Samuel Yang     
                      =1    67     
                      =1    68     
  0001                =1    69     TRUE EQU 1h
  0000                =1    70     FALSE EQU 0h
                            71 +1  $INCLUDE(regAddrs.INC)
                      =1    72     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    73     ;                                                                            ;
                      =1    74     ;                                  regAddrs.INC                              ;
                      =1    75     ;                              Register Addresses and Values                 ;
                      =1    76     ;                                 Include File                               ;
                      =1    77     ;                                                                            ;
                      =1    78     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    79     
                      =1    80     ; This file contains the definitions for the 801C88 MP3 Player.
                      =1    81     ;
                      =1    82     ;
                      =1    83     ; Revision History:
                      =1    84     
                      =1    85     ;     5/2/2008 Samuel Yang     
                      =1    86     
                      =1    87     
                      =1    88     
                      =1    89     
                      =1    90     
                      =1    91     ; Interrupt Vectors
  000C                =1    92     Int0Vec         EQU     12               ;interrupt vector for INT 0
  000D                =1    93     Int1Vec         EQU     13               ;interrupt vector for INT 1
                      =1    94     
                      =1    95     
                      =1    96     ; Interrupt Controller Definitions
                      =1    97     
                      =1    98     ; Addresses
  FF38                =1    99     INT0Ctrlr        EQU    0FF38H           ;address of interrupt 0 controller
  FF3A                =1   100     INT1Ctrlr        EQU    0FF3AH           ;address of interrupt 1 controller
  FF32                =1   101     INTCtrlrCtrl    EQU     0FF32H          ;address of interrupt controller for timer
  FF22                =1   102     INTCtrlrEOI     EQU     0FF22H          ;address of interrupt controller EOI register
                      =1   103     
                      =1   104     ; Register Values
  0001                =1   105     INTCtrlrCVal    EQU     00001H          ;set priority for timers to 1 and enable
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  03:52:14  05/31/:8  PAGE    3


LOC  OBJ                  LINE     SOURCE

                      =1   106                                             ;000000000000----  reserved
                      =1   107                                             ;------------0---  enable timer interrupt
                      =1   108                                             ;-------------001  timer priority
  0011                =1   109     INT0CtrlrVal    EQU             00011H                  ;set to level triggering, pri
                                   ority 2, enable
                      =1   110                                             ;000000000-------  reserved
                      =1   111                                             ;---------0------  disable fully nested mode
                      =1   112                                             ;----------0-----  disable cascade mode
                      =1   113                                                                                     ;----
                                   -------1----  level triggering
                      =1   114                                             ;------------0---  enable interrupt
                      =1   115                                             ;-------------010  int priority         
                                                                      
  0012                =1   116     INT1CtrlrVal    EQU             00012H                  ;set to level triggering, pri
                                   ority 2, enable
                      =1   117                                             ;000000000-------  reserved
                      =1   118                                             ;---------0------  disable fully nested mode
                      =1   119                                             ;----------0-----  disable cascade mode
                      =1   120                                                                                     ;----
                                   -------1----  level triggering
                      =1   121                                             ;------------0---  enable interrupt
                      =1   122                                             ;-------------010  int priority         
                                                                                      
  001A                =1   123     INT1CtrlrValDisable EQU 0001AH                  ;set to level triggering, priority 2,
                                    disable
                      =1   124                                             ;000000000-------  reserved
                      =1   125                                             ;---------0------  disable fully nested mode
                      =1   126                                             ;----------0-----  disable cascade mode
                      =1   127                                                                                     ;----
                                   -------1----  level triggering
                      =1   128                                             ;------------1---  disable interrupt
                      =1   129                                             ;-------------010  int priority 
                      =1   130                                                                                     
  0008                =1   131     TimerEOI        EQU     00008H          ;Timer EOI command (samNone for all timers)
  8000                =1   132     NonSpecEOI      EQU     08000H          ;Non-specific EOI command
                      =1   133     
                      =1   134     
                      =1   135     ; Chip Select Unit Definitions
                      =1   136     
                      =1   137     ; Addresses
  FFA4                =1   138     PACSreg         EQU     0FFA4H          ;address of PACS register
  FFA8                =1   139     MPCSreg         EQU     0FFA8H          ;address of MPCS register
                      =1   140     
                      =1   141     
                      =1   142     ; Control Register Values
  0000                =1   143     PACSval         EQU     00000H          ;PCS base at 0, 3 wait states
                      =1   144                                             ;0000000000------  starts at address 0
                      =1   145                                             ;----------000---  reserved
                      =1   146                                             ;-------------0--  wait for RDY inputs
                      =1   147                                             ;--------------11  3 wait states
  4003                =1   148     MPCSval         EQU     04003H          ;PCS in I/O space, use PCS5/6, 3 wait states
                      =1   149                                             ;0---------000---  reserved
                      =1   150                                             ;-1000000--------  MCS is 512KB
                      =1   151                                             ;--------0-------  output PCS5/PCS6
                      =1   152                                             ;---------0------  PCS in I/O space
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  03:52:14  05/31/:8  PAGE    4


LOC  OBJ                  LINE     SOURCE

                      =1   153                                             ;-------------0--  wait for RDY inputs
                      =1   154                                             ;--------------11  3 wait states
                      =1   155     
                      =1   156     ; Timing Definitions
                      =1   157     
                      =1   158     
                      =1   159     
                      =1   160     ; General Definitions
                      =1   161     
  0001                =1   162     FIRST_RESERVED_VEC      EQU     1       ;reserve vectors 1-3
  0003                =1   163     LAST_RESERVED_VEC       EQU     3
  0100                =1   164     NUM_IRQ_VECTORS         EQU     256     ;number of interrupt vectors
                      =1   165     
                           166     
                           167     CGROUP GROUP CODE
                           168     DGROUP GROUP DATA
                           169     
                           170     
----                       171     CODE SEGMENT PUBLIC 'CODE'
                           172     
                           173             ASSUME  CS:CGROUP, DS:DGROUP
                           174     
                           175     
                           176     ; audio_halt
                           177     ;
                           178     ; Description:       Immediately halts audio play
                           179     ;
                           180     ; Operation:         Disables mp3 board interrupt
                           181     ;
                           182     ; Arguments:         None.
                           183     ; Return Value:      None.
                           184     ;
                           185     ; Local Variables:   None.
                           186     ; Shared Variables:  None.
                           187     ; Input:            None.
                           188     ; Output:            None.
                           189     ;
                           190     ; Error Handling:    None.
                           191     ;
                           192     ; Algorithms:        None.
                           193     ; Data Structures:   None.
                           194     ;
                           195     ; Registers Changed: None
                           196     ; Stack Depth:       2 words
                           197     ;
                           198     ; Last Modified:     5-9-2008
                           199     
0000                       200     audio_halt       PROC    NEAR
                           201                                             PUBLIC audio_halt
0000 50                    202                     PUSH AX
0001 52                    203                     PUSH DX
                           204                     
0002 BA3AFF                205                     MOV DX, INT1Ctrlr                       ;disable mp3 board interrupt
0005 B81A00                206                     MOV AX, INT1CtrlrValDisable
0008 EE                    207                     OUT DX, AL
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  03:52:14  05/31/:8  PAGE    5


LOC  OBJ                  LINE     SOURCE

                           208                     
0009 5A                    209                     POP DX
000A 58                    210                     POP AX
000B C3                    211                     RET
                           212     
                           213     audio_halt       ENDP
                           214     
                           215     ; audio_play
                           216     ;
                           217     ; Description:       Begins playing audio from passed buffer
                           218     ;
                           219     ; Operation:         Copies buffer information, enables interrupts
                           220     ;
                           221     ; Arguments:         None.
                           222     ; Return Value:      None.
                           223     ;
                           224     ; Local Variables:   None.
                           225     ; Shared Variables:  None.
                           226     ; Input:            None.
                           227     ; Output:            None.
                           228     ;
                           229     ; Error Handling:    None.
                           230     ;
                           231     ; Algorithms:        None.
                           232     ; Data Structures:   None.
                           233     ;
                           234     ; Registers Changed: None
                           235     ; Stack Depth:       2 words
                           236     ;
                           237     ; Last Modified:     5-9-2008
                           238     
000C                       239     audio_play       PROC    NEAR
                           240                                             PUBLIC audio_play
000C 55                    241                     PUSH BP
000D 8BEC                  242                     MOV BP, SP
000F 56                    243                     PUSH SI
0010 57                    244                     PUSH DI
0011 50                    245                     PUSH AX
0012 53                    246                     PUSH BX
0013 8B5E04                247                     MOV BX, [BP+4]
0016 8B7606                248                     MOV SI, [BP+6]
0019 8E4608                249                     MOV ES, [BP+8]
                           250     
                           251             
001C 8C060200       R      252                     MOV mp3buffsegment[mp3buff0], ES        ;store buffer information
0020 89360600       R      253                     MOV mp3buffindex[mp3buff0], SI
0024 891E0A00       R      254                     MOV mp3bufflength[mp3buff0], BX
                           255     
                           256     
0028 C6060E000190   R      257                     MOV bufferRequired, TRUE                        ;flag buffer1 require
                                   d
002E C7060F000000   R      258                     MOV bufferInUse, mp3buff0
                           259             
0034 BA3AFF                260                     MOV DX, INT1Ctrlr                                       ;enable mp3 b
                                   oard interrupt
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  03:52:14  05/31/:8  PAGE    6


LOC  OBJ                  LINE     SOURCE

0037 B81200                261                     MOV AX, INT1CtrlrVal
003A EE                    262                     OUT DX, AL
                           263                     
003B 5B                    264                     POP BX
003C 58                    265                     POP AX
003D 5F                    266                     POP DI
003E 5E                    267                     POP SI
003F 5D                    268                     POP BP
                           269     
0040 C3                    270                     RET
                           271                     
                           272                     
                           273                     
                           274             
                           275     
                           276     audio_play       ENDP
                           277     
                           278     ; update
                           279     ;
                           280     ; Description:       This procedure updates the mp3 bvffers if necessary.
                           281     ;
                           282     ; Operation:         Reads data in, updates status of pressed key.
                           283     ;
                           284     ; Arguments:         address of new buffer in ES:SI, length in BX
                           285     ; Return Value:      True if the new buffer was used, False otherwise
                           286     ;
                           287     ; Local Variables:   None.
                           288     ; Shared Variables:  mp3buff1segment
                           289     ;                           mp3buff2segment
                           290     ;                           mp3buff1index
                           291     ;                           mp3buff2index
                           292     ;                           mp3buff1length
                           293     ;                           mp3buff2length
                           294     ; Input:            None.
                           295     ; Output:            None.
                           296     ;
                           297     ; Error Handling:    None.
                           298     ;
                           299     ; Algorithms:        None.
                           300     ; Data Structures:   None.
                           301     ;
                           302     ; Registers Changed: None
                           303     ; Stack Depth:       5 words
                           304     ;
                           305     ; Last Modified:     5-9-2008
                           306     
0041                       307     update       PROC    NEAR
                           308                                             PUBLIC update
0041 55                    309                     PUSH BP
0042 8BEC                  310                     MOV BP, SP
0044 56                    311                     PUSH SI
0045 57                    312                     PUSH DI
0046 50                    313                     PUSH AX
0047 53                    314                     PUSH BX
0048 8B5E04                315                     MOV BX, [BP+4]
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  03:52:14  05/31/:8  PAGE    7


LOC  OBJ                  LINE     SOURCE

004B 8B7606                316                     MOV SI, [BP+6]
004E 8E4608                317                     MOV ES, [BP+8]
                           318     
                           319                     
0051 803E0E0001     R      320                     CMP bufferRequired, TRUE
0056 752E                  321                     JNE endUpdateFalse
                           322                     
0058 C6060E000090   R      323                     MOV bufferRequired, FALSE       ;reset bufferRequired flag
                           324                     
005E 833E0F0000     R      325                     CMP bufferInUse, mp3buff0       ;save location and length of new buff
                                   er
0063 750F                  326                     JNE replaceBuff1
0065                       327     replaceBuff0:   
0065 8C060200       R      328                     MOV mp3buffsegment[mp3buff0], ES
0069 89360600       R      329                     MOV mp3buffindex[mp3buff0], SI
006D 891E0A00       R      330                     MOV mp3bufflength[mp3buff0], BX
0071 EB0D90                331                     JMP endUpdateTrue
0074                       332     replaceBuff1:
0074 8C060300       R      333                     MOV mp3buffsegment[mp3buff1], ES
0078 89360700       R      334                     MOV mp3buffindex[mp3buff1], SI
007C 891E0B00       R      335                     MOV mp3bufflength[mp3buff1], BX
                           336                     ;JMP endUpdateTrue
0080                       337     endUpdateTrue:  
0080 B80100                338                     MOV AX, TRUE
0083 EB0490                339                     JMP endUpdate
0086                       340     endUpdateFalse:
0086 B80000                341                     MOV AX, FALSE
0089                       342     endUpdate:      
0089 5B                    343                     POP BX
008A 58                    344                     POP AX
008B 5F                    345                     POP DI
008C 5E                    346                     POP SI
008D 5D                    347                     POP BP
                           348     
008E C3                    349                     RET
                           350     
                           351     update       ENDP
                           352     
                           353     
                           354     
                           355     ; Int1EventHandler
                           356     ;
                           357     ; Description:       This procedure is the event handler for when the
                           358     ;                       keypad debouncing chip signals a pressed key.
                           359     ;
                           360     ; Operation:         Reads data in, updates status of pressed key.
                           361     ;
                           362     ; Arguments:         None.
                           363     ; Return Value:      None.
                           364     ;
                           365     ; Local Variables:   None.
                           366     ; Shared Variables:  keyCode, keyReady
                           367     
                           368     ; Input:            From keypad debouncing chip.
                           369     ; Output:            None.
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  03:52:14  05/31/:8  PAGE    8


LOC  OBJ                  LINE     SOURCE

                           370     ;
                           371     ; Error Handling:    None.
                           372     ;
                           373     ; Algorithms:        None.
                           374     ; Data Structures:   None.
                           375     ;
                           376     ; Registers Changed: None
                           377     ; Stack Depth:       3 words
                           378     ;
                           379     ; Last Modified:     5-5-2008
                           380     
008F                       381     Int1EventHandler       PROC    NEAR
                           382                                             PUBLIC Int1EventHandler
008F 50                    383                     PUSH AX                         ;save register values
0090 53                    384                     PUSH BX
0091 51                    385                     PUSH CX
0092 52                    386                     PUSH DX
                           387                     
0093 8B1E0000       R      388                     MOV BX, mp3index
0097 43                    389                     INC BX
0098 43                    390                     INC BX
                           391                     ;do wrap here
0099 81E3FF1F              392                     AND BX, mp3testbufflength-1
009D 891E0000       R      393                     MOV mp3index, BX
00A1 8B871100       R      394                     MOV AX, mp3buff[BX]
                           395             
00A5                       396     dataReady:
00A5 BA0000                397                     MOV DX, mp3portAddress
00A8 D0C0                  398                     ROL AL, 1
00AA D0C4                  399                     ROL AH, 1
                           400                     
00AC                       401     outputBits:             
00AC EE                    402                     OUT DX, AL
00AD D0C0                  403                     ROL AL, 1
00AF EE                    404                     OUT DX, AL
00B0 D0C0                  405                     ROL AL, 1
00B2 EE                    406                     OUT DX, AL
00B3 D0C0                  407                     ROL AL, 1
00B5 EE                    408                     OUT DX, AL
00B6 D0C0                  409                     ROL AL, 1
00B8 EE                    410                     OUT DX, AL
00B9 D0C0                  411                     ROL AL, 1
00BB EE                    412                     OUT DX, AL
00BC D0C0                  413                     ROL AL, 1
00BE EE                    414                     OUT DX, AL
00BF D0C0                  415                     ROL AL, 1
00C1 EE                    416                     OUT DX, AL
00C2 D0C0                  417                     ROL AL, 1
00C4 86E0                  418                     XCHG AH, AL
00C6 EE                    419                     OUT DX, AL
00C7 D0C0                  420                     ROL AL, 1
00C9 EE                    421                     OUT DX, AL
00CA D0C0                  422                     ROL AL, 1
00CC EE                    423                     OUT DX, AL
00CD D0C0                  424                     ROL AL, 1
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  03:52:14  05/31/:8  PAGE    9


LOC  OBJ                  LINE     SOURCE

00CF EE                    425                     OUT DX, AL
00D0 D0C0                  426                     ROL AL, 1
00D2 EE                    427                     OUT DX, AL
00D3 D0C0                  428                     ROL AL, 1
00D5 EE                    429                     OUT DX, AL
00D6 D0C0                  430                     ROL AL, 1
00D8 EE                    431                     OUT DX, AL
00D9 D0C0                  432                     ROL AL, 1
00DB EE                    433                     OUT DX, AL
00DC D0C0                  434                     ROL AL, 1
                           435                     
00DE BA22FF                436                     MOV     DX, INTCtrlrEOI         ;send the EOI to the interrupt contro
                                   ller
00E1 B80D00                437             MOV     AX, Int1Vec
00E4 EE                    438             OUT     DX, AL
                           439                     
00E5 5A                    440                     POP DX                                                  ;restore regi
                                   ster values
00E6 59                    441                     POP CX
00E7 5B                    442                     POP BX
00E8 58                    443                     POP AX
00E9 CF                    444             IRET                            ;and return (Event Handlers end with IRET not
                                    RET)
                           445     
                           446     
                           447     Int1EventHandler       ENDP
                           448     
00EA                       449     Int1EventHandlerREAL       PROC    NEAR
                           450                                             PUBLIC Int1EventHandlerREAL
00EA 50                    451                     PUSH AX                         ;save register values
00EB 53                    452                     PUSH BX
00EC 51                    453                     PUSH CX
00ED 52                    454                     PUSH DX
                           455                     
00EE 8B1E0F00       R      456                     MOV BX, bufferInUse                             ;get byte to output
00F2 8E870200       R      457                     MOV ES, mp3buffsegment[BX]
00F6 8BB70600       R      458                     MOV SI, mp3buffIndex[BX]                
00FA 268A04                459                     MOV AL, ES:[SI]
                           460                     
00FD BA0000                461                     MOV DX, mp3portAddress
0100 D0C0                  462                     ROL AL, 1
0102 B90800                463                     MOV CX, 8
0105                       464     outputBitsr:            
0105 EE                    465                     OUT DX, AL
0106 D0C0                  466                     ROL AL, 1
0108 E2FB                  467                     LOOP outputBitsr
                           468                     
                           469                     ;increment buffer index
010A FF8F0A00       R      470                     DEC mp3bufflength[BX]
010E 833E0A0000     R      471                     CMP mp3bufflength, lengthZero
0113 7510                  472                     JNE doneInc
                           473                     ;JE switch buffers
0115 C6060E000190   R      474                     MOV bufferRequired, TRUE                                ;new buffer r
                                   equired
011B FF060F00       R      475                     INC bufferInUse                                                 ;swit
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  03:52:14  05/31/:8  PAGE   10


LOC  OBJ                  LINE     SOURCE

                                   ches buffers between 0 and 1
011F 81260F00FE00   R      476                     AND bufferInUse, mp3buffRequiredMask
                           477                     ;JMP doneInc
0125                       478     doneInc:                
0125 BA22FF                479                     MOV     DX, INTCtrlrEOI         ;send the EOI to the interrupt contro
                                   ller
0128 B80D00                480             MOV     AX, Int1Vec
012B EE                    481             OUT     DX, AL
                           482                     
012C 5A                    483                     POP DX                                                  ;restore regi
                                   ster values
012D 59                    484                     POP CX
012E 5B                    485                     POP BX
012F 58                    486                     POP AX
0130 CF                    487             IRET                            ;and return (Event Handlers end with IRET not
                                    RET)
                           488     
                           489     
                           490     Int1EventHandlerREAL       ENDP
                           491     
                           492     ; InitMP3Port
                           493     ;
                           494     ; Description:       This procedure initializes everything for keypad
                           495     ;
                           496     ; Operation:        Initializes shared variables
                           497     ;
                           498     ; Arguments:         None.
                           499     ; Return Value:      None.
                           500     ;
                           501     ; Local Variables:   None.
                           502     ; Shared Variables:  keyCode, keyReady
                           503     
                           504     ; Input:            None.
                           505     ; Output:            None.
                           506     ;
                           507     ; Error Handling:    None.
                           508     ;
                           509     ; Algorithms:        None.
                           510     ; Data Structures:   None.
                           511     ;
                           512     ; Registers Changed: None
                           513     ; Stack Depth:       1 words
                           514     ;
                           515     ; Last Modified:     5-2-2008
0131                       516     InitMP3Port   PROC    NEAR
                           517                             PUBLIC InitMP3Port
                           518                     ;do nothing yet
0131 53                    519                     PUSH BX
0132 51                    520                     PUSH CX
0133 C70600000000   R      521                     MOV mp3index, 0
                           522                     
0139 59                    523                     POP CX
013A 5B                    524                     POP BX
013B C3                    525                     RET
                           526     InitMP3Port   ENDP
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  03:52:14  05/31/:8  PAGE   11


LOC  OBJ                  LINE     SOURCE

                           527     
                           528     
                           529     
                           530     
                           531     
                           532     
                           533     
                           534     
                           535     ; InstallHandlerInt1
                           536     ;
                           537     ; Description:       Install the event handler for the int1 interrupt.
                           538     ;
                           539     ; Operation:         Writes the address of the int 1 event handler to the
                           540     ;                    appropriate interrupt vector.
                           541     ;
                           542     ; Arguments:         None.
                           543     ; Return Value:      None.
                           544     ;
                           545     ; Local Variables:   None.
                           546     ; Shared Variables:  None.
                           547     ; Global Variables:  None.
                           548     ;
                           549     ; Input:             None.
                           550     ; Output:            None.
                           551     ;
                           552     ; Error Handling:    None.
                           553     ;
                           554     ; Algorithms:        None.
                           555     ; Data Structures:   None.
                           556     ;
                           557     ; Registers Changed: flags, AX, ES, DX
                           558     ; Stack Depth:       0 words
                           559     ;
                           560     ; Author:            Samuel Yang
                           561     ; Last Modified:     5-5-2008
                           562     
013C                       563     InstallHandlerInt1  PROC    NEAR
                           564                             PUBLIC InstallHandlerInt1
                           565     
                           566     
013C 33C0                  567             XOR     AX, AX          ;clear ES (interrupt vectors are in segment 0)
013E 8EC0                  568             MOV     ES, AX
                           569                                     ;store the vector
0140 26C70634008F00 R      570             MOV     ES: WORD PTR (4 * Int1Vec), OFFSET(Int1EventHandler)
0147 26C7063600---- R      571             MOV     ES: WORD PTR (4 * Int1Vec + 2), SEG(Int1EventHandler)
                           572     
014E BA3AFF                573                     MOV DX, INT1Ctrlr
0151 B012                  574                     MOV AL, INT1CtrlrVal
0153 EE                    575                     OUT DX, AL
                           576                     
0154 BA22FF                577                     MOV     DX, INTCtrlrEOI         ;send the EOI to the interrupt contro
                                   ller
0157 B80D00                578             MOV     AX, Int1Vec
015A EE                    579             OUT     DX, AL
                           580                     ;STI ;enable interrupts
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  03:52:14  05/31/:8  PAGE   12


LOC  OBJ                  LINE     SOURCE

                           581                     
015B C3                    582             RET                     ;all done, return
                           583     
                           584     
                           585     InstallHandlerInt1  ENDP
                           586     
                           587     
                           588     
                           589     
                           590     
----                       591     CODE ENDS
                           592     
                           593     ;the data segment
                           594     
----                       595     DATA    SEGMENT PUBLIC  'DATA'
0000 0000                  596     mp3index DW 0
                           597     
                           598     
0002 (2                    599     mp3buffsegment DW 2 DUP(?)
     ????
     )
0006 (2                    600     mp3buffindex  DW 2 DUP(?) 
     ????
     )
000A (2                    601     mp3bufflength DW 2 DUP(?)
     ????
     )
000E ??                    602     bufferRequired DB ?
000F ????                  603     bufferInUse    DW ?
                           604     
0011 (4096                 605     mp3buff DW (mp3testbufflength/2)        DUP(?)
     ????
     )
----                       606     DATA    ENDS
                           607     
                           608     
                           609     
                           610     
                           611             END     

ASSEMBLY COMPLETE, NO ERRORS FOUND
