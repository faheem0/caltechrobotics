8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  00:50:22  06/12/:8  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE MP3PORT
OBJECT MODULE PLACED IN MP3PORT.OBJ
ASSEMBLER INVOKED BY:  C:\ASMSTU~1\ASM86.EXE MP3PORT.ASM M1 DB EP


LOC  OBJ                  LINE     SOURCE

                             1            NAME  mp3port
                             2     
                             3     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             4     ;                                                                            ;
                             5     ;                                    MP3Port                                    
                                       ;
                             6     ;                           MP3Port Event Handler                               
                                       ;
                             7     ;                                                                            ;
                             8     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             9     
                            10     ; Description:      This program an event handler (interrupt service routine).
                            11     ;                   It handles sending data to the mp3 board.
                            12     ;
                            13     ; Input:            None.
                            14     ; Output:           MP3 board
                            15     ; User Interface:   None.
                            16     ; Error Handling:   None.
                            17     ;
                            18     ; Algorithms:       None.
                            19     ; Data Structures:  None.
                            20     ;
                            21     ; Revision History:
                            22     
                            23     ;     5/5/08  Samuel Yang     
                            24     ;     5/9/08 update() added
                            25     ;         6/6/08  fixing the code, commenting, still untested
                            26     
                            27     ; local include files
                            28 +1  $INCLUDE(mp3port.INC)
                      =1    29     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    30     ;                                                                            ;
                      =1    31     ;                                  mp3port.INC                              ;
                      =1    32     ;                              MP3Port Event Handler                         ;
                      =1    33     ;                                 Include File                               ;
                      =1    34     ;                                                                            ;
                      =1    35     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    36     
                      =1    37     ; This file contains the definitions for the MP3Port Event Handler
                      =1    38     ; program (mp3port.ASM).
                      =1    39     ;
                      =1    40     ; Revision History:
                      =1    41     
                      =1    42     ;     5/5/2008 Samuel Yang     
                      =1    43     
                      =1    44     
  0000                =1    45     mp3Loc   EQU     00000H           ;location of mp3 file
  2000                =1    46     mp3testbufflength EQU 8192
  0000                =1    47     mp3portAddress EQU 0000H          ;location of mp3 port, uses PCS0
                      =1    48     
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  00:50:22  06/12/:8  PAGE    2


LOC  OBJ                  LINE     SOURCE

  0000                =1    49     mp3buff0 EQU 0
  0002                =1    50     mp3buff1 EQU 2
  0002                =1    51     mp3buffRequiredMask EQU 02h
  0000                =1    52     lengthZero EQU 0
                      =1    53     
                            54 +1  $INCLUDE(boolean.INC)
                      =1    55     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    56     ;                                                                            ;
                      =1    57     ;                                  boolean.INC                               ;
                      =1    58     ;                             Boolean Definitions                            ;
                      =1    59     ;                                 Include File                               ;
                      =1    60     ;                                                                            ;
                      =1    61     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    62     
                      =1    63     ; This file contains the boolean definitions for the 80188 MP3 Player.
                      =1    64     ;
                      =1    65     ; Revision History:
                      =1    66     
                      =1    67     ;     5/2/2008 Samuel Yang     
                      =1    68     
                      =1    69     
  0001                =1    70     TRUE EQU 1h
  0000                =1    71     FALSE EQU 0h
                            72 +1  $INCLUDE(regAddrs.INC)
                      =1    73     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    74     ;                                                                            ;
                      =1    75     ;                                  regAddrs.INC                              ;
                      =1    76     ;                              Register Addresses and Values                 ;
                      =1    77     ;                                 Include File                               ;
                      =1    78     ;                                                                            ;
                      =1    79     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    80     
                      =1    81     ; This file contains the definitions for the 801C88 MP3 Player.
                      =1    82     ;
                      =1    83     ;
                      =1    84     ; Revision History:
                      =1    85     
                      =1    86     ;     5/2/2008 Samuel Yang  
                      =1    87     ;         6/11/2008 Samuel Yang only 1 wait state on PACS   
                      =1    88     ;         6/11/2008 Samuel Yang touch key support added (INT2, PCS3)
                      =1    89     
                      =1    90     
                      =1    91     
                      =1    92     
                      =1    93     ; Interrupt Vectors
  000C                =1    94     Int0Vec         EQU     12               ;interrupt vector for INT 0
  000D                =1    95     Int1Vec         EQU     13               ;interrupt vector for INT 1
  000E                =1    96     Int2Vec         EQU     14               ;interrupt vector for INT 2
                      =1    97     
                      =1    98     ; Interrupt Controller Definitions
                      =1    99     
                      =1   100     ; Addresses
  FF38                =1   101     INT0Ctrlr        EQU    0FF38H           ;address of interrupt 0 controller
  FF3A                =1   102     INT1Ctrlr        EQU    0FF3AH           ;address of interrupt 1 controller
  FF3C                =1   103     INT2Ctrlr        EQU    0FF3CH           ;address of interrupt 2 controller
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  00:50:22  06/12/:8  PAGE    3


LOC  OBJ                  LINE     SOURCE

  FF32                =1   104     INTCtrlrCtrl    EQU     0FF32H          ;address of interrupt controller for timer
  FF22                =1   105     INTCtrlrEOI     EQU     0FF22H          ;address of interrupt controller EOI register
                      =1   106     
                      =1   107     ; Register Values
  0001                =1   108     INTCtrlrCVal    EQU     00001H          ;set priority for timers to 1 and enable
                      =1   109                                             ;000000000000----  reserved
                      =1   110                                             ;------------0---  enable timer interrupt
                      =1   111                                             ;-------------001  timer priority
  0011                =1   112     INT0CtrlrVal    EQU             00011H                  ;set to level triggering, pri
                                   ority 2, enable
                      =1   113                                             ;000000000-------  reserved
                      =1   114                                             ;---------0------  disable fully nested mode
                      =1   115                                             ;----------0-----  disable cascade mode
                      =1   116                                                                                     ;----
                                   -------1----  level triggering
                      =1   117                                             ;------------0---  enable interrupt
                      =1   118                                             ;-------------010  int priority         
                                                                      
  0011                =1   119     INT2CtrlrVal    EQU             00011H                  ;set to level triggering, pri
                                   ority 2, enable
                      =1   120                                             ;000000000-------  reserved
                      =1   121                                             ;---------0------  disable fully nested mode
                      =1   122                                             ;----------0-----  disable cascade mode
                      =1   123                                                                                     ;----
                                   -------1----  level triggering
                      =1   124                                             ;------------0---  enable interrupt
                      =1   125                                             ;-------------010  int priority         
                                                                      
                      =1   126     
  0012                =1   127     INT1CtrlrVal    EQU             00012H                  ;set to level triggering, pri
                                   ority 2, enable
                      =1   128                                             ;000000000-------  reserved
                      =1   129                                             ;---------0------  disable fully nested mode
                      =1   130                                             ;----------0-----  disable cascade mode
                      =1   131                                                                                     ;----
                                   -------1----  level triggering
                      =1   132                                             ;------------0---  enable interrupt
                      =1   133                                             ;-------------010  int priority         
                                                                                      
  001A                =1   134     INT1CtrlrValDisable EQU 0001AH                  ;set to level triggering, priority 2,
                                    disable
                      =1   135                                             ;000000000-------  reserved
                      =1   136                                             ;---------0------  disable fully nested mode
                      =1   137                                             ;----------0-----  disable cascade mode
                      =1   138                                                                                     ;----
                                   -------1----  level triggering
                      =1   139                                             ;------------1---  disable interrupt
                      =1   140                                             ;-------------010  int priority 
                      =1   141                                                                                     
  0008                =1   142     TimerEOI        EQU     00008H          ;Timer EOI command (samNone for all timers)
  8000                =1   143     NonSpecEOI      EQU     08000H          ;Non-specific EOI command
                      =1   144     
                      =1   145     
                      =1   146     ; Chip Select Unit Definitions
                      =1   147     
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  00:50:22  06/12/:8  PAGE    4


LOC  OBJ                  LINE     SOURCE

                      =1   148     ; Addresses
  FFA4                =1   149     PACSreg         EQU     0FFA4H          ;address of PACS register
  FFA8                =1   150     MPCSreg         EQU     0FFA8H          ;address of MPCS register
  FFA6                =1   151     MMCSaddr                EQU     0ffa6H                  ;address of MCS control regis
                                   ter
                      =1   152     
                      =1   153     ; Control Register Values
  8001                =1   154     MMCSvalue           EQU     8001H                       ;set to the following:
                      =1   155                                             ;1000000---------  start at 80000H
                      =1   156                                             ;-------000000---  reserved
                      =1   157                                             ;---------------1  1 wait state min
  0001                =1   158     PACSval         EQU     00001H          ;PCS base at 0, 3 wait states
                      =1   159                                             ;0000000000------  starts at address 0
                      =1   160                                             ;----------000---  reserved
                      =1   161                                             ;-------------0--  wait for RDY inputs
                      =1   162                                             ;--------------11  3 wait states
  4000                =1   163     MPCSval         EQU     04000H          ;copy pasted
                      =1   164                                             ;0---------000---  reserved
                      =1   165                                             ;-1000000--------  MCS is 512KB
                      =1   166                                             ;--------0-------  output PCS5/PCS6
                      =1   167                                             ;---------0------  PCS in I/O space
                      =1   168                                             ;-------------0--  wait for RDY inputs
                      =1   169                                             ;--------------11  3 wait states
                      =1   170     
                      =1   171     ; Timing Definitions
                      =1   172     
                      =1   173     
                      =1   174     
                      =1   175     ; General Definitions
                      =1   176     
  0001                =1   177     FIRST_RESERVED_VEC      EQU     1       ;reserve vectors 1-3
  0003                =1   178     LAST_RESERVED_VEC       EQU     3
  0100                =1   179     NUM_IRQ_VECTORS         EQU     256     ;number of interrupt vectors
                      =1   180     
                           181     
                           182     CGROUP GROUP CODE
                           183     DGROUP GROUP DATA
                           184     
                           185     
----                       186     CODE SEGMENT PUBLIC 'CODE'
                           187     
                           188             ASSUME  CS:CGROUP, DS:DGROUP
                           189     
                           190     
                           191     ; audio_halt
                           192     ;
                           193     ; Description:       Immediately halts audio play
                           194     ;
                           195     ; Operation:         Disables mp3 board interrupt
                           196     ;
                           197     ; Arguments:         None.
                           198     ; Return Value:      None.
                           199     ;
                           200     ; Local Variables:   None.
                           201     ; Shared Variables:  None.
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  00:50:22  06/12/:8  PAGE    5


LOC  OBJ                  LINE     SOURCE

                           202     ; Input:             None.
                           203     ; Output:            None.
                           204     ;
                           205     ; Error Handling:    None.
                           206     ;
                           207     ; Algorithms:        None.
                           208     ; Data Structures:   None.
                           209     ;
                           210     ; Registers Changed: None
                           211     ; Stack Depth:       2 words
                           212     ;
                           213     ; Last Modified:     5-9-2008
                           214     
0000                       215     audio_halt       PROC    NEAR
                           216                                             PUBLIC audio_halt
0000 50                    217                     PUSH AX
0001 52                    218                     PUSH DX
                           219                     
0002 BA3AFF                220                     MOV DX, INT1Ctrlr                       ;disable mp3 board interrupt
0005 B81A00                221                     MOV AX, INT1CtrlrValDisable
0008 EE                    222                     OUT DX, AL
                           223                     
0009 5A                    224                     POP DX
000A 58                    225                     POP AX
000B C3                    226                     RET
                           227     
                           228     audio_halt       ENDP
                           229     
                           230     ; audio_play
                           231     ;
                           232     ; Description:       Begins playing audio from passed buffer
                           233     ;
                           234     ; Operation:         Copies buffer information, enables interrupts
                           235     ;
                           236     ; Arguments:         None.
                           237     ; Return Value:      None.
                           238     ;
                           239     ; Local Variables:   None.
                           240     ; Shared Variables:  None.
                           241     ; Input:            None.
                           242     ; Output:            None.
                           243     ;
                           244     ; Error Handling:    None.
                           245     ;
                           246     ; Algorithms:        None.
                           247     ; Data Structures:   None.
                           248     ;
                           249     ; Registers Changed: None
                           250     ; Stack Depth:       2 words
                           251     ;
                           252     ; Last Modified:     5-9-2008
                           253     
000C                       254     audio_play       PROC    NEAR
                           255                                             PUBLIC audio_play
000C 55                    256                     PUSH BP
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  00:50:22  06/12/:8  PAGE    6


LOC  OBJ                  LINE     SOURCE

000D 8BEC                  257                     MOV BP, SP
000F 56                    258                     PUSH SI
0010 57                    259                     PUSH DI
0011 50                    260                     PUSH AX
0012 53                    261                     PUSH BX
0013 8B5E08                262                     MOV BX, [BP+8]
0016 8B7604                263                     MOV SI, [BP+4]
0019 8E4606                264                     MOV ES, [BP+6]
                           265     
                           266             
001C 8C060200       R      267                     MOV mp3buffsegment[mp3buff0], ES        ;store buffer information
0020 89360600       R      268                     MOV mp3buffindex[mp3buff0], SI
0024 891E0A00       R      269                     MOV mp3bufflength[mp3buff0], BX
                           270     
                           271     
0028 C6060E000190   R      272                     MOV bufferRequired, TRUE                        ;flag buffer1 require
                                   d
002E C7060F000000   R      273                     MOV bufferInUse, mp3buff0
                           274             
0034 BA3AFF                275                     MOV DX, INT1Ctrlr                                       ;enable mp3 b
                                   oard interrupt
0037 B81200                276                     MOV AX, INT1CtrlrVal
003A EE                    277                     OUT DX, AL
                           278                     
003B BA22FF                279                     MOV     DX, INTCtrlrEOI         ;send the EOI to the interrupt contro
                                   ller
003E B80D00                280             MOV     AX, Int1Vec                                     ; to kickstart
0041 EE                    281             OUT     DX, AL
                           282                     
0042 5B                    283                     POP BX
0043 58                    284                     POP AX
0044 5F                    285                     POP DI
0045 5E                    286                     POP SI
0046 5D                    287                     POP BP
                           288     
0047 C3                    289                     RET
                           290                     
                           291                     
                           292                     
                           293             
                           294     
                           295     audio_play       ENDP
                           296     
                           297     ; update
                           298     ;
                           299     ; Description:       This procedure updates the mp3 bvffers if necessary.
                           300     ;
                           301     ; Operation:         Reads data in, updates status of pressed key.
                           302     ;
                           303     ; Arguments:         address of new buffer in ES:SI, length in BX
                           304     ; Return Value:      True if the new buffer was used, False otherwise
                           305     ;
                           306     ; Local Variables:   None.
                           307     ; Shared Variables:  mp3buff1segment
                           308     ;                           mp3buff2segment
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  00:50:22  06/12/:8  PAGE    7


LOC  OBJ                  LINE     SOURCE

                           309     ;                           mp3buff1index
                           310     ;                           mp3buff2index
                           311     ;                           mp3buff1length
                           312     ;                           mp3buff2length
                           313     ; Input:            None.
                           314     ; Output:            None.
                           315     ;
                           316     ; Error Handling:    None.
                           317     ;
                           318     ; Algorithms:        None.
                           319     ; Data Structures:   None.
                           320     ;
                           321     ; Registers Changed: None
                           322     ; Stack Depth:       5 words
                           323     ;
                           324     ; Last Modified:     5-9-2008
                           325     
0048                       326     update       PROC    NEAR
                           327                                             PUBLIC update
0048 55                    328                     PUSH BP
0049 8BEC                  329                     MOV BP, SP
004B 56                    330                     PUSH SI
004C 57                    331                     PUSH DI
                           332                     ;PUSH AX
004D 53                    333                     PUSH BX
004E 8B5E08                334                     MOV BX, [BP+8]
0051 8B7604                335                     MOV SI, [BP+4]
0054 8E4606                336                     MOV ES, [BP+6]
                           337     
                           338                     
0057 803E0E0001     R      339                     CMP bufferRequired, TRUE
005C 752E                  340                     JNE endUpdateFalse
                           341                     
005E C6060E000090   R      342                     MOV bufferRequired, FALSE       ;reset bufferRequired flag
                           343                     
0064 833E0F0000     R      344                     CMP bufferInUse, mp3buff0       ;save location and length of new buff
                                   er
0069 740F                  345                     JE replaceBuff1
006B                       346     replaceBuff0:   
006B 8C060200       R      347                     MOV mp3buffsegment[mp3buff0], ES
006F 89360600       R      348                     MOV mp3buffindex[mp3buff0], SI
0073 891E0A00       R      349                     MOV mp3bufflength[mp3buff0], BX
0077 EB0D90                350                     JMP endUpdateTrue
007A                       351     replaceBuff1:
007A 8C060400       R      352                     MOV mp3buffsegment[mp3buff1], ES
007E 89360800       R      353                     MOV mp3buffindex[mp3buff1], SI
0082 891E0C00       R      354                     MOV mp3bufflength[mp3buff1], BX
                           355                     ;JMP endUpdateTrue
0086                       356     endUpdateTrue:  
0086 B80100                357                     MOV AX, TRUE
0089 EB0490                358                     JMP endUpdate
008C                       359     endUpdateFalse:
008C B80000                360                     MOV AX, FALSE
008F                       361     endUpdate:      
008F 5B                    362                     POP BX
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  00:50:22  06/12/:8  PAGE    8


LOC  OBJ                  LINE     SOURCE

                           363                     ;POP AX
0090 5F                    364                     POP DI
0091 5E                    365                     POP SI
0092 5D                    366                     POP BP
                           367     
0093 C3                    368                     RET
                           369     
                           370     update       ENDP
                           371     
                           372     
                           373     
                           374     ; Int1EventHandler
                           375     ;
                           376     ; Description:       This procedure is the event handler for the mp3 board
                           377     ;                                               interrupt.
                           378     ;
                           379     ; Operation:         Outputs data serially, switches source buffers if necessary.
                           380     ;
                           381     ; Arguments:         None.
                           382     ; Return Value:      None.
                           383     ;
                           384     ; Local Variables:   None.
                           385     ; Shared Variables:  bufferInUse, mp3buffsegment[], mp3buffindex[], bufferRequired
                           386     ;                                               buffInUse
                           387     
                           388     ; Input:            From keypad debouncing chip.
                           389     ; Output:            None.
                           390     ;
                           391     ; Error Handling:    None.
                           392     ;
                           393     ; Algorithms:        None.
                           394     ; Data Structures:   None.
                           395     ;
                           396     ; Registers Changed: None
                           397     ; Stack Depth:       8 words
                           398     ;
                           399     ; Last Modified:     6-6-2008
                           400     
0094                       401     Int1EventHandler       PROC    NEAR
                           402                                             PUBLIC Int1EventHandler
0094 50                    403                     PUSH AX                         ;save register values
0095 53                    404                     PUSH BX
0096 51                    405                     PUSH CX
0097 52                    406                     PUSH DX
0098 06                    407                     PUSH ES
0099 56                    408                     PUSH SI
                           409                     
009A 8B1E0F00       R      410                     MOV BX, bufferInUse                             ;get word to output
009E 8E870200       R      411                     MOV ES, mp3buffsegment[BX]
00A2 8BB70600       R      412                     MOV SI, mp3buffIndex[BX]                
00A6 268B04                413                     MOV AX, ES:[SI]
                           414                     
00A9 BA0000                415                     MOV DX, mp3portAddress                  ;prepare to output to address
00AC D0C0                  416                     ROL AL, 1
                           417                     ;MOV CX, 8
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  00:50:22  06/12/:8  PAGE    9


LOC  OBJ                  LINE     SOURCE

00AE                       418     preoutputbits:          
00AE                       419     outputBits:                                                             ;unrolled loo
                                   p, actually outputs data
00AE EE                    420                     OUT DX, AL
00AF D0C0                  421                     ROL AL, 1
00B1 EE                    422                     OUT DX, AL
00B2 D0C0                  423                     ROL AL, 1
00B4 EE                    424                     OUT DX, AL
00B5 D0C0                  425                     ROL AL, 1
00B7 EE                    426                     OUT DX, AL
00B8 D0C0                  427                     ROL AL, 1
00BA EE                    428                     OUT DX, AL
00BB D0C0                  429                     ROL AL, 1
00BD EE                    430                     OUT DX, AL
00BE D0C0                  431                     ROL AL, 1
00C0 EE                    432                     OUT DX, AL
00C1 D0C0                  433                     ROL AL, 1
00C3 EE                    434                     OUT DX, AL
00C4 86E0                  435                     XCHG AH, AL
00C6 D0C0                  436                     ROL AL, 1
00C8 EE                    437                     OUT DX, AL
00C9 D0C0                  438                     ROL AL, 1
00CB EE                    439                     OUT DX, AL
00CC D0C0                  440                     ROL AL, 1
00CE EE                    441                     OUT DX, AL
00CF D0C0                  442                     ROL AL, 1
00D1 EE                    443                     OUT DX, AL
00D2 D0C0                  444                     ROL AL, 1
00D4 EE                    445                     OUT DX, AL
00D5 D0C0                  446                     ROL AL, 1
00D7 EE                    447                     OUT DX, AL
00D8 D0C0                  448                     ROL AL, 1
00DA EE                    449                     OUT DX, AL
00DB D0C0                  450                     ROL AL, 1
00DD EE                    451                     OUT DX, AL
                           452                     
00DE FF8F0A00       R      453                     DEC mp3bufflength[BX]   
00E2 FF870600       R      454                     INC mp3buffindex[BX] ;increment buffer index
00E6 FF870600       R      455                     INC mp3buffindex[BX]
00EA 83BF0A0000     R      456                     CMP mp3bufflength[BX], lengthZero
00EF 7514                  457                     JNE doneInc
                           458                     ;JE switchBuffers
00F1                       459     switchBuffers:          
00F1 C6060E000190   R      460                     MOV bufferRequired, TRUE                                ;new buffer r
                                   equired
00F7 FF060F00       R      461                     INC bufferInUse                                                 ;swit
                                   ches buffers between 0 and 1
00FB FF060F00       R      462                     INC bufferInUse
00FF 81260F000200   R      463                     AND bufferInUse, mp3buffRequiredMask
                           464                     ;JMP doneInc
0105                       465     doneInc:                
0105 BA22FF                466                     MOV     DX, INTCtrlrEOI         ;send the EOI to the interrupt contro
                                   ller
0108 B80D00                467             MOV     AX, Int1Vec
010B EE                    468             OUT     DX, AL
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  00:50:22  06/12/:8  PAGE   10


LOC  OBJ                  LINE     SOURCE

                           469                     
010C 5E                    470                     POP SI
010D 07                    471                     POP ES
010E 5A                    472                     POP DX                                                  ;restore regi
                                   ster values
010F 59                    473                     POP CX
0110 5B                    474                     POP BX
0111 58                    475                     POP AX
0112 CF                    476             IRET                            ;and return (Event Handlers end with IRET not
                                    RET)
                           477     
                           478     
                           479     Int1EventHandler       ENDP
                           480     
                           481     ; InitMP3Port
                           482     ;
                           483     ; Description:       This procedure initializes everything for keypad
                           484     ;
                           485     ; Operation:        Initializes shared variables
                           486     ;
                           487     ; Arguments:         None.
                           488     ; Return Value:      None.
                           489     ;
                           490     ; Local Variables:   None.
                           491     ; Shared Variables:  bufferRequired, bufferInUse
                           492     
                           493     ; Input:            None.
                           494     ; Output:            None.
                           495     ;
                           496     ; Error Handling:    None.
                           497     ;
                           498     ; Algorithms:        None.
                           499     ; Data Structures:   None.
                           500     ;
                           501     ; Registers Changed: None
                           502     ; Stack Depth:       1 words
                           503     ;
                           504     ; Last Modified:     6-6-2008
0113                       505     InitMP3Port   PROC    NEAR
                           506                             PUBLIC InitMP3Port
0113 C6060E000190   R      507                     MOV bufferRequired, TRUE
0119 C7060F000000   R      508                     MOV bufferInUse, mp3buff0
011F C3                    509                     RET
                           510     InitMP3Port   ENDP
                           511     
                           512     
                           513     
                           514     
                           515     
                           516     
                           517     
                           518     
                           519     ; InstallHandlerInt1
                           520     ;
                           521     ; Description:       Install the event handler for the int1 interrupt.
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  00:50:22  06/12/:8  PAGE   11


LOC  OBJ                  LINE     SOURCE

                           522     ;
                           523     ; Operation:         Writes the address of the int 1 event handler to the
                           524     ;                    appropriate interrupt vector.
                           525     ;
                           526     ; Arguments:         None.
                           527     ; Return Value:      None.
                           528     ;
                           529     ; Local Variables:   None.
                           530     ; Shared Variables:  None.
                           531     ; Global Variables:  None.
                           532     ;
                           533     ; Input:             None.
                           534     ; Output:            None.
                           535     ;
                           536     ; Error Handling:    None.
                           537     ;
                           538     ; Algorithms:        None.
                           539     ; Data Structures:   None.
                           540     ;
                           541     ; Registers Changed: flags, AX, ES, DX
                           542     ; Stack Depth:       0 words
                           543     ;
                           544     ; Author:            Samuel Yang
                           545     ; Last Modified:     5-5-2008
                           546     
0120                       547     InstallHandlerInt1  PROC    NEAR
                           548                             PUBLIC InstallHandlerInt1
                           549     
                           550     
0120 33C0                  551             XOR     AX, AX          ;clear ES (interrupt vectors are in segment 0)
0122 8EC0                  552             MOV     ES, AX
                           553                                     ;store the vector
0124 26C70634009400 R      554             MOV     ES: WORD PTR (4 * Int1Vec), OFFSET(Int1EventHandler)
012B 26C7063600---- R      555             MOV     ES: WORD PTR (4 * Int1Vec + 2), SEG(Int1EventHandler)
                           556                     
0132 E8CBFE                557                     CALL audio_halt
                           558                     ;MOV DX, INT1Ctrlr
                           559             ;       MOV AL, INT1CtrlrVal
                           560     ;               OUT DX, AL
                           561                     
                           562                     ;MOV     DX, INTCtrlrEOI         ;send the EOI to the interrupt contr
                                   oller
                           563             ;MOV     AX, Int1Vec
                           564             ;OUT     DX, AL
                           565                     ;STI ;enable interrupts
                           566                     
0135 C3                    567             RET                     ;all done, return
                           568     
                           569     
                           570     InstallHandlerInt1  ENDP
                           571     
                           572     
                           573     
                           574     
                           575     
8086/87/88/186 MACRO ASSEMBLER    MP3PORT                                                  00:50:22  06/12/:8  PAGE   12


LOC  OBJ                  LINE     SOURCE

----                       576     CODE ENDS
                           577     
                           578     ;the data segment
                           579     
----                       580     DATA    SEGMENT PUBLIC  'DATA'
0000 0000                  581     mp3index DW 0
                           582     
                           583     
0002 (2                    584     mp3buffsegment DW 2 DUP(?)
     ????
     )
0006 (2                    585     mp3buffindex  DW 2 DUP(?) 
     ????
     )
000A (2                    586     mp3bufflength DW 2 DUP(?)
     ????
     )
000E ??                    587     bufferRequired DB ?
000F ????                  588     bufferInUse    DW ?
                           589     
----                       590     DATA    ENDS
                           591     
                           592     
                           593     
                           594     
                           595             END     

ASSEMBLY COMPLETE, NO ERRORS FOUND
