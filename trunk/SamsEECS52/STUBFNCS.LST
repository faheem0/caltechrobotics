iC-86  COMPILER   STUBFNCS                                                                   06/11/:8 20:54:01  PAGE   1


DOS 5.0 (038-N) iC-86 COMPILER V4.0, COMPILATION OF MODULE STUBFNCS
OBJECT MODULE PLACED IN STUBFNCS.OBJ
COMPILER INVOKED BY: C:\ASMSTU~1\IC86.EXE STUBFNCS.C DEBUG EXTEND MOD186 SMALL OPTIMIZE(0) ROM

 line level  incl 

    1             /****************************************************************************/
    2             /*                                                                          */
    3             /*                                STUBFNCS                                  */
    4             /*                          Audio Stub Functions                            */
    5             /*                           MP3 Jukebox Project                            */
    6             /*                                EE/CS 52                                  */
    7             /*                                                                          */
    8             /****************************************************************************/
    9             
   10             /*
   11                This file contains stub functions for the hardware interfacing code.  The
   12                file is meant to allow linking of the main code without necessarily having
   13                all the low-level functions.  The functions included are:
   14                   update         - check if ready for an update
   15                   elapsed_time   - get the time since the last call to this function
   16                   key_available  - check if a key is available
   17                   getkey         - get a key
   18                   display_time   - display the passed time
   19                   display_track  - display the passed track number
   20                   display_status - display the passed status
   21                   display_title  - display the passed track title
   22                   display_artist - display the passed track artist
   23                   get_blocks     - get data from the hard drive
   24                   audio_play     - start audio output
   25                   audio_halt     - halt audio input or output
   26             
   27                The local functions included are:
   28                   none
   29             
   30                The locally global variable definitions included are:
   31                   none
   32             
   33             
   34                Revision History
   35                   6/6/00   Glen George       Initial revision (from the 3/6/99 version of
   36                                              stubfncs.c for the Digital Audio Recorder
   37                                              Project).
   38                   6/2/02   Glen George       Removed ffrev_start() and ffrev_halt(), they
   39                                              are no longer part of the user-written code.
   40                   6/5/03   Glen George       Removed display_track(), is is no longer part
   41                                              of the user-written code.
   42                   4/29/06  Glen George       Updated definitions of get_blocks(),
   43                                              update(), and audio_play() to use words
   44                              instead of bytes.
   45             */
   46             
   47             
   48             
   49             /* library include files */
   50               /* none */
   51             
iC-86  COMPILER   STUBFNCS                                                                   06/11/:8 20:54:01  PAGE   2


   52             /* local include files */
   53             #include  "mp3defs.h"
   54             
   55             
   56             
   57             
   58             /* update function */
   59             
   60             unsigned char  update(unsigned short int far *p, int n)
   61             {
   62     1           return  FALSE;
   63     1       }
   64             
   65             
   66             
   67             /* timing function */
   68             
   69             int  elapsed_time()
   70             {
   71     1           return  0;
   72     1       }
   73             
   74             
   75             
   76             /* keypad functions */
   77             
   78             unsigned char  key_available()
   79             {
   80     1           return  FALSE;
   81     1       }
   82             
   83             int  getkey()
   84             {
   85     1           return  KEY_ILLEGAL;
   86     1       }
   87             
   88             
   89             
   90             /* display functions  */
   91             
   92             void  display_time(unsigned int t)
   93             {
   94     1           return;
   95     1       }
   96             
   97             void  display_status(unsigned int s)
   98             {
   99     1           return;
  100     1       }
  101             
  102             void  display_title(const char far *t)
  103             {
  104     1           return;
  105     1       }
  106             
  107             void  display_artist(const char far *a)
  108             {
iC-86  COMPILER   STUBFNCS                                                                   06/11/:8 20:54:01  PAGE   3


  109     1           return;
  110     1       }
  111             
  112             
  113             
  114             /* IDE interface function */
  115             
  116             int  get_blocks(unsigned long int b, int n, unsigned short int far *p)
  117             {
  118     1           return  n;
  119     1       }
  120             
  121             
  122             
  123             /* audio functions */
  124             
  125             void  audio_play(unsigned short int far *p, int n)
  126             {
  127     1           return;
  128     1       }
  129             
  130             void  audio_halt()
  131             {
  132     1           return;
  133     1       }
  134             



MODULE INFORMATION:

     CODE AREA SIZE               = 0077H    119D
     CONSTANT AREA SIZE           = 0000H      0D
     DATA AREA SIZE               = 0000H      0D
     MAXIMUM STACK SIZE           = 000CH     12D

iC-86 COMPILATION COMPLETE.      0 WARNINGS,     0 ERRORS
