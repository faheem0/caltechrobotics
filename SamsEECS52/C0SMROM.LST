8086/87/88/186 MACRO ASSEMBLER    STARTUP                                                  19:51:39  06/18/:8  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE STARTUP
OBJECT MODULE PLACED IN C0SMROM.OBJ
ASSEMBLER INVOKED BY:  C:\ASMSTU~1\ASM86.EXE C0SMROM.ASM M1 DB EP


LOC  OBJ                  LINE     SOURCE

                             1             NAME    STARTUP
                             2     
                             3     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             4     ;                                                                            ;
                             5     ;                                   STARTUP                                  ;
                             6     ;                               Startup code for mp3 player                  ;
                             7     ;                                                                            ;
                             8     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             9     
                            10     
                            11     ; Description:      This program contains the startup code for the 80188 mp3 
                            12     ;                               player.  It sets up the groups and segments, initiali
                                   zes all
                            13     ;                               of the peripherals, then calls the main() function (C
                                    code).
                            14     ;
                            15     ; Input:            None.
                            16     ; Output:           None.
                            17     ; User Interface:   None.
                            18     ; Error Handling:   None.
                            19     ; Algorithms:       None.
                            20     ; Data Structures:  None.
                            21     ;
                            22     ; Revision History:
                            23     ;   04/26/08 Samuel Yang            modified version of c0smrom.asm
                            24     ;   05/30/08 Samuel Yang            DRAM, IDE, elapsed_time added, unnested EXTRN's
                            25     ;   06/11/08 Samuel Yang            initialization of touchkey added
                            26     
                            27 +1  $INCLUDE(boolean.INC)
                      =1    28     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    29     ;                                                                            ;
                      =1    30     ;                                  boolean.INC                               ;
                      =1    31     ;                             Boolean Definitions                            ;
                      =1    32     ;                                 Include File                               ;
                      =1    33     ;                                                                            ;
                      =1    34     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    35     
                      =1    36     ; This file contains the boolean definitions for the 80188 MP3 Player.
                      =1    37     ;
                      =1    38     ; Revision History:
                      =1    39     
                      =1    40     ;     5/2/2008 Samuel Yang     
                      =1    41     
                      =1    42     
  0001                =1    43     TRUE EQU 1h
  0000                =1    44     FALSE EQU 0h
                            45 +1  $INCLUDE(regAddrs.INC)
                      =1    46     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    47     ;                                                                            ;
                      =1    48     ;                                  regAddrs.INC                              ;
8086/87/88/186 MACRO ASSEMBLER    STARTUP                                                  19:51:39  06/18/:8  PAGE    2


LOC  OBJ                  LINE     SOURCE

                      =1    49     ;                              Register Addresses and Values                 ;
                      =1    50     ;                                 Include File                               ;
                      =1    51     ;                                                                            ;
                      =1    52     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    53     
                      =1    54     ; This file contains the definitions for the 801C88 MP3 Player.
                      =1    55     ;
                      =1    56     ;
                      =1    57     ; Revision History:
                      =1    58     
                      =1    59     ;     5/2/2008 Samuel Yang  
                      =1    60     ;         6/11/2008 Samuel Yang only 1 wait state on PACS   
                      =1    61     ;         6/11/2008 Samuel Yang touch key support added (INT2, PCS3)
                      =1    62     
                      =1    63     
                      =1    64     
                      =1    65     
                      =1    66     ; Interrupt Vectors
  000C                =1    67     Int0Vec         EQU     12               ;interrupt vector for INT 0
  000D                =1    68     Int1Vec         EQU     13               ;interrupt vector for INT 1
  000E                =1    69     Int2Vec         EQU     14               ;interrupt vector for INT 2
                      =1    70     
                      =1    71     ; Interrupt Controller Definitions
                      =1    72     
                      =1    73     ; Addresses
  FF38                =1    74     INT0Ctrlr        EQU    0FF38H           ;address of interrupt 0 controller
  FF3A                =1    75     INT1Ctrlr        EQU    0FF3AH           ;address of interrupt 1 controller
  FF3C                =1    76     INT2Ctrlr        EQU    0FF3CH           ;address of interrupt 2 controller
  FF32                =1    77     INTCtrlrCtrl    EQU     0FF32H          ;address of interrupt controller for timer
  FF22                =1    78     INTCtrlrEOI     EQU     0FF22H          ;address of interrupt controller EOI register
                      =1    79     
                      =1    80     ; Register Values
  0001                =1    81     INTCtrlrCVal    EQU     00001H          ;set priority for timers to 1 and enable
                      =1    82                                             ;000000000000----  reserved
                      =1    83                                             ;------------0---  enable timer interrupt
                      =1    84                                             ;-------------001  timer priority
  0001                =1    85     INT0CtrlrVal    EQU             00001H                  ;set to level triggering, pri
                                   ority 2, enable
                      =1    86                                             ;000000000-------  reserved
                      =1    87                                             ;---------0------  disable fully nested mode
                      =1    88                                             ;----------0-----  disable cascade mode
                      =1    89                                                                                     ;----
                                   -------0----  edge triggering
                      =1    90                                             ;------------0---  enable interrupt
                      =1    91                                             ;-------------010  int priority         
                                                                      
  0011                =1    92     INT2CtrlrVal    EQU             00011H                  ;set to level triggering, pri
                                   ority 2, enable
                      =1    93                                             ;000000000-------  reserved
                      =1    94                                             ;---------0------  disable fully nested mode
                      =1    95                                             ;----------0-----  disable cascade mode
                      =1    96                                                                                     ;----
                                   -------1----  level triggering
                      =1    97                                             ;------------0---  enable interrupt
                      =1    98                                             ;-------------010  int priority         
8086/87/88/186 MACRO ASSEMBLER    STARTUP                                                  19:51:39  06/18/:8  PAGE    3


LOC  OBJ                  LINE     SOURCE

                                                                      
                      =1    99     
  0012                =1   100     INT1CtrlrVal    EQU             00012H                  ;set to level triggering, pri
                                   ority 2, enable
                      =1   101                                             ;000000000-------  reserved
                      =1   102                                             ;---------0------  disable fully nested mode
                      =1   103                                             ;----------0-----  disable cascade mode
                      =1   104                                                                                     ;----
                                   -------1----  level triggering
                      =1   105                                             ;------------0---  enable interrupt
                      =1   106                                             ;-------------010  int priority         
                                                                                      
  001A                =1   107     INT1CtrlrValDisable EQU 0001AH                  ;set to level triggering, priority 2,
                                    disable
                      =1   108                                             ;000000000-------  reserved
                      =1   109                                             ;---------0------  disable fully nested mode
                      =1   110                                             ;----------0-----  disable cascade mode
                      =1   111                                                                                     ;----
                                   -------1----  level triggering
                      =1   112                                             ;------------1---  disable interrupt
                      =1   113                                             ;-------------010  int priority 
                      =1   114                                                                                     
  0008                =1   115     TimerEOI        EQU     00008H          ;Timer EOI command (samNone for all timers)
  8000                =1   116     NonSpecEOI      EQU     08000H          ;Non-specific EOI command
                      =1   117     
                      =1   118     
                      =1   119     ; Chip Select Unit Definitions
                      =1   120     
                      =1   121     ; Addresses
  FFA4                =1   122     PACSreg         EQU     0FFA4H          ;address of PACS register
  FFA8                =1   123     MPCSreg         EQU     0FFA8H          ;address of MPCS register
  FFA6                =1   124     MMCSaddr                EQU     0ffa6H                  ;address of MCS control regis
                                   ter
                      =1   125     
                      =1   126     ; Control Register Values
  8001                =1   127     MMCSvalue           EQU     8001H                       ;set to the following:
                      =1   128                                             ;1000000---------  start at 80000H
                      =1   129                                             ;-------000000---  reserved
                      =1   130                                             ;---------------1  1 wait state min
  0001                =1   131     PACSval         EQU     00001H          ;PCS base at 0, 3 wait states
                      =1   132                                             ;0000000000------  starts at address 0
                      =1   133                                             ;----------000---  reserved
                      =1   134                                             ;-------------0--  wait for RDY inputs
                      =1   135                                             ;--------------11  3 wait states
  4000                =1   136     MPCSval         EQU     04000H          ;copy pasted
                      =1   137                                             ;0---------000---  reserved
                      =1   138                                             ;-1000000--------  MCS is 512KB
                      =1   139                                             ;--------0-------  output PCS5/PCS6
                      =1   140                                             ;---------0------  PCS in I/O space
                      =1   141                                             ;-------------0--  wait for RDY inputs
                      =1   142                                             ;--------------11  3 wait states
                      =1   143     
                      =1   144     ; Timing Definitions
                      =1   145     
                      =1   146     
8086/87/88/186 MACRO ASSEMBLER    STARTUP                                                  19:51:39  06/18/:8  PAGE    4


LOC  OBJ                  LINE     SOURCE

                      =1   147     
                      =1   148     ; General Definitions
                      =1   149     
  0001                =1   150     FIRST_RESERVED_VEC      EQU     1       ;reserve vectors 1-3
  0003                =1   151     LAST_RESERVED_VEC       EQU     3
  0100                =1   152     NUM_IRQ_VECTORS         EQU     256     ;number of interrupt vectors
                      =1   153     
                           154 +1  $INCLUDE(bootcode.INC)
                      =1   155     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1   156     ;                                                                            ;
                      =1   157     ;                                  bootcode.INC                              ;
                      =1   158     ;                              Boot Code Register Values                     ;
                      =1   159     ;                                 Include File                               ;
                      =1   160     ;                                                                            ;
                      =1   161     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1   162     
                      =1   163     ; This file contains the definitions for bootcode.asm
                      =1   164     ;
                      =1   165     ; Revision History:
                      =1   166     
                      =1   167     ;     4/26/2008 Samuel Yang     File started
                      =1   168     
  FFA0                =1   169     UCSCtrl equ 0FFA0h              ;address of UCMS
  3000                =1   170     UCSCtrlVal     EQU     3000H          ;value to write to UCS Ctrl Register
                      =1   171                                             ;--11000000------  starting address 0F0000h (
                                   64k)
                      =1   172                                             ;-------------0--  enable bus ready
                      =1   173                                             ;--------------00  0 wait states             
                                                              ;----000000------  reserved
  FFA2                =1   174     LCSCtrl equ 0FFA2h              ;address of LCMS                                     
                                      
  07C0                =1   175     LCSCtrlVal     EQU     07C0H          ;value to write to LCS Ctrl Register
                      =1   176                                             ;--00011111------  ending address 07FFFFh (32
                                   k)
                      =1   177                                             ;-------------0--  enable bus ready
                      =1   178                                             ;--------------00  0 wait states 
                           179     
                           180     ; setup code and data groups
                           181     CGROUP  GROUP   CODE
                           182     DGROUP  GROUP   DATA, STACK
                           183     
                           184     EXTRN InitCS:NEAR
                           185     EXTRN ClrIRQVectors:NEAR
                           186     EXTRN InstallHandlerInt0:NEAR
                           187     EXTRN InstallHandlerInt1:NEAR
                           188     EXTRN InitKeypad:NEAR
                           189     EXTRN InitMP3Port:NEAR
                           190     EXTRN InitDisplay:NEAR
                           191     EXTRN InitElapsedTimer:NEAR
                           192     EXTRN InitDMA:NEAR
                           193     EXTRN main:NEAR               ;declare the main function
                           194     
                           195     ; segment register assumptions
                           196     ASSUME  CS:CGROUP, DS:DGROUP, ES:NOTHING, SS:DGROUP
                           197     
8086/87/88/186 MACRO ASSEMBLER    STARTUP                                                  19:51:39  06/18/:8  PAGE    5


LOC  OBJ                  LINE     SOURCE

                           198     ; the data segment - used for static and global variables
----                       199     DATA    SEGMENT  WORD  PUBLIC  'DATA'
                           200     
                           201     
----                       202     DATA    ENDS
                           203     
                           204     
                           205     
                           206     
                           207     ; the stack segment - used for subroutine linkage, argument passing, and
                           208     ; local variables
----                       209     STACK   SEGMENT  WORD  STACK  'STACK'
                           210     
0000 (80                   211             DB      80 DUP ('Stack   ')             ;320 words
     537461636B2020
     20
     )
                           212     
0280                       213     TopOfStack      LABEL   WORD
                           214     
                           215     
----                       216     STACK   ENDS
                           217     
                           218     
                           219     
                           220     
                           221     ; the actual startup code - should be executed (jumped to) after reset
----                       222     CODE    SEGMENT   PUBLIC  'CODE'
                           223            
0000                       224     START LABEL FAR                         ;start the program
                           225     PUBLIC START                            ;public so can jump to from power on code
0000                       226     mainStart:                                  
                           227     
0000 BAA2FF                228                     MOV DX, LCSCtrl         ;need to setup LCS control register to match 
                                   RAM size
0003 B8C007                229                     MOV AX, LCSCtrlVal
0006 EE                    230                     OUT DX,AL               
                           231                     
0007 B8----         R      232             MOV     AX, DGROUP  ;initialize the stack pointer
000A 8ED0                  233             MOV     SS, AX
000C BC8002         R      234             MOV     SP, OFFSET(DGROUP:TopOfStack)
                           235     
000F B8----         R      236             MOV     AX, DGROUP  ;initialize the data segment
0012 8ED8                  237             MOV     DS, AX
                           238             
0014 E80000         E      239             CALL InitCS                     ;initialize chip selects, timers, interrupts,
                                    etc.
0017 E80000         E      240                     CALL ClrIRQVectors
001A E80000         E      241                     CALL InitKeypad
001D E80000         E      242                     CALL InitDisplay        
0020 E80000         E      243                     CALL InitMP3Port                
0023 E80000         E      244                     CALL InitElapsedTimer
0026 E80000         E      245                     CALL InitDMA
0029 E80000         E      246                     CALL InstallHandlerInt1         
002C E80000         E      247                     CALL InstallHandlerInt0         ;interrupts enabled here
8086/87/88/186 MACRO ASSEMBLER    STARTUP                                                  19:51:39  06/18/:8  PAGE    6


LOC  OBJ                  LINE     SOURCE

                           248                        
002F E80000         E      249                     CALL main                       ;run the main function (no arguments)
0032 EBCC                  250             JMP     mainStart   ;if return - reinitialize and try again
                           251     
----                       252     CODE    ENDS
                           253     
                           254     END

ASSEMBLY COMPLETE, NO ERRORS FOUND
