8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  21:13:40  06/18/:8  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE DISPLAY
OBJECT MODULE PLACED IN DISPLAY.OBJ
ASSEMBLER INVOKED BY:  C:\ASMSTU~1\ASM86.EXE DISPLAY.ASM M1 DB EP


LOC  OBJ                  LINE     SOURCE

                             1            NAME  display
                             2     
                             3     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             4     ;                                                                            ;
                             5     ;                                Display                                             
                                   ;
                             6     ;                           Display Functions                                    ;
                             7     ;                                                                            ;
                             8     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             9     
                            10     ; Description:      This program contains the functions for displaying information
                            11     ;                               to the 2x40 character LCD, as well as manipulating co
                                   ntrast.
                            12     ;
                            13     ; Input:            None.
                            14     ; Output:           2x40 character LCD
                            15     ; User Interface:   call functions:
                            16     ;                               display_time(word)
                            17     ;                               display_status(word)
                            18     ;                               display_title(byte)
                            19     ;                               display_artist(byte)
                            20     ;                               contrast_up()
                            21     ;                               contrast_up()
                            22     ; Error Handling:   None.
                            23     ;
                            24     ; Algorithms:       None.
                            25     ; Data Structures:  None.
                            26     ;
                            27     ; Revision History:
                            28     ;     5/2/08  Samuel Yang   file started
                            29     ;     5/3/08  Samuel Yang       functions tested, working, comments updated
                            30     ;         6/11/08 Samuel Yang   special characters, contrast control added
                            31     CGROUP GROUP CODE
                            32     DGROUP GROUP DATA
                            33     
                            34     ; local include files
                            35 +1  $INCLUDE(display.INC)
                      =1    36     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    37     ;                                                                            ;
                      =1    38     ;                                  display.INC                               ;
                      =1    39     ;                               Display Definitions                          ;
                      =1    40     ;                                 Include File                               ;
                      =1    41     ;                                                                            ;
                      =1    42     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    43     
                      =1    44     ; This file contains the definitions for the Display program (display.ASM).
                      =1    45     ;
                      =1    46     ; Revision History:
                      =1    47     
                      =1    48     ;     5/2/2008 Samuel Yang  
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  21:13:40  06/18/:8  PAGE    2


LOC  OBJ                  LINE     SOURCE

                      =1    49     ;         6/11/2008 Samuel Yang special characters added   
                      =1    50     ;         6/11/2008 Samuel Yang digipot added
                      =1    51     
  0100                =1    52     displayAddressCMD   EQU     00100H           ;display address for commands
  0101                =1    53     displayAddressDAT   EQU     00101H           ;display address for data
                      =1    54     
  0180                =1    55     digipotAddressUp        EQU     00180H                   ;address of digipot, contras
                                   t up
  0182                =1    56     digipotAddressDown      EQU     00182H                   ;address of digipot, contras
                                   t down
                      =1    57     
  0014                =1    58     numContrastSteps    EQU 20                                       ;number of steps to 
                                   increment contrast by
                      =1    59     
                      =1    60     ;LCD commands-send to displayAddressCMD
  003C                =1    61     functionSet          EQU 3CH                                    ;8 bit, 2 line, 5x7 d
                                   ots
  0001                =1    62     clearScreen                     EQU 01H                                         ;clea
                                   rs screen
  0006                =1    63     entryModeSet            EQU 06H                                         ;shift cursor
                                    right
  000C                =1    64     displayOnOffCtrl        EQU 0CH                                         ;display on, 
                                   cursor off
                      =1    65     
  0010                =1    66     cursorLeft                      EQU 10H                                         ;shif
                                   ts cursor left one
  0014                =1    67     cursorRight                     EQU 14H                                         ;shif
                                   ts cursor right one
  0002                =1    68     returnHome                      EQU 02H                                         ;retu
                                   rn cursor home
                      =1    69     
                      =1    70     
                      =1    71     ;display formatting constants
  0000                =1    72     statusOffset EQU 0
  0008                =1    73     statusLength EQU 8
  0009                =1    74     timeOffset EQU 9
  0008                =1    75     timeLength EQU 8
  0028                =1    76     titleOffset EQU 40
  0028                =1    77     titleLength EQU 40
  0012                =1    78     artistOffset EQU 18
  0016                =1    79     artistLength EQU 22
                      =1    80     
                      =1    81     
                      =1    82     
                      =1    83     ;time conversion constants
  0258                =1    84     tenthsOfSecPerMin EQU 600
  000A                =1    85     tenthsOfSecPerSec EQU 10
  000A                =1    86     ten EQU 10
  0030                =1    87     ASCIIDecCons EQU 48
  003A                =1    88     ASCIIcolon EQU 58
  002E                =1    89     ASCIIperiod EQU 46
  0000                =1    90     timeStringBufferMinutesOffset EQU 0
  0003                =1    91     timeStringBufferSecondsOffset EQU 3
  0000                =1    92     null EQU 0
  FFFF                =1    93     TIME_NONE EQU 65535 
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  21:13:40  06/18/:8  PAGE    3


LOC  OBJ                  LINE     SOURCE

                      =1    94     
                      =1    95     
                      =1    96     ;other display constants
  0028                =1    97     CHARSPERROW    EQU 40                                                   ;40 character
                                    display
  0000                =1    98     position0          EQU 0                                                        ;0 po
                                   sition on display
  0000                =1    99     STRINGNULL              EQU 0
  0080                =1   100     busyFlagMask    EQU 80h
  0080                =1   101     LCDbusy         EQU 80h
  0008                =1   102     statusStringLength EQU 8
  0020                =1   103     blankSpace EQU 32
                      =1   104     
                      =1   105     ;special character table
  0048                =1   106     LCDSpecialPlay   EQU 01000000b+00001000b                ;shift each by one since ASCI
                                   I 0 corresponds
  0050                =1   107     LCDSpecialFFW    EQU 01001000b+00001000b                        ;with string NULL
  0058                =1   108     LCDSpecialRWD    EQU 01010000b+00001000b
  0060                =1   109     LCDSpecialStop   EQU 01011000b+00001000b
  0068                =1   110     LCDSpecialPause  EQU 01100000b+00001000b
  0070                =1   111     LCDSpecialStop2 EQU 01101000b+00001000b
                      =1   112     
  0010                =1   113     LCDSpecialPlayLine0 EQU 00010000b                               ;pixel values for "pl
                                   ay"
  0018                =1   114     LCDSpecialPlayLine1 EQU 00011000b
  0014                =1   115     LCDSpecialPlayLine2 EQU 00010100b
  0012                =1   116     LCDSpecialPlayLine3 EQU 00010010b
  0011                =1   117     LCDSpecialPlayLine4 EQU 00010001b
  0012                =1   118     LCDSpecialPlayLine5 EQU 00010010b
  0014                =1   119     LCDSpecialPlayLine6 EQU 00010100b
  0018                =1   120     LCDSpecialPlayLine7 EQU 00011000b
                      =1   121     
  001F                =1   122     LCDSpecialStopLine0 EQU 00011111b                               ;pixel values for "st
                                   op1"
  0010                =1   123     LCDSpecialStopLine1 EQU 00010000b
  0010                =1   124     LCDSpecialStopLine2 EQU 00010000b
  0010                =1   125     LCDSpecialStopLine3 EQU 00010000b
  0010                =1   126     LCDSpecialStopLine4 EQU 00010000b
  0010                =1   127     LCDSpecialStopLine5 EQU 00010000b
  0010                =1   128     LCDSpecialStopLine6 EQU 00010000b
  001F                =1   129     LCDSpecialStopLine7 EQU 00011111b
                      =1   130     
  001F                =1   131     LCDSpecialStop2Line0 EQU 00011111b                              ;pixel values for "st
                                   op2"
  0001                =1   132     LCDSpecialStop2Line1 EQU 00000001b
  0001                =1   133     LCDSpecialStop2Line2 EQU 00000001b
  0001                =1   134     LCDSpecialStop2Line3 EQU 00000001b
  0001                =1   135     LCDSpecialStop2Line4 EQU 00000001b
  0001                =1   136     LCDSpecialStop2Line5 EQU 00000001b
  0001                =1   137     LCDSpecialStop2Line6 EQU 00000001b
  001F                =1   138     LCDSpecialStop2Line7 EQU 00011111b
                      =1   139     
  0000                =1   140     LCDSpecialFFWLine0 EQU 00000000b                                ;pixel values for "FF
                                   W"
  0000                =1   141     LCDSpecialFFWLine1 EQU 00000000b
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  21:13:40  06/18/:8  PAGE    4


LOC  OBJ                  LINE     SOURCE

  0014                =1   142     LCDSpecialFFWLine2 EQU 00010100b
  000A                =1   143     LCDSpecialFFWLine3 EQU 00001010b
  0005                =1   144     LCDSpecialFFWLine4 EQU 00000101b
  000A                =1   145     LCDSpecialFFWLine5 EQU 00001010b
  0014                =1   146     LCDSpecialFFWLine6 EQU 00010100b
  0000                =1   147     LCDSpecialFFWLine7 EQU 00000000b
                      =1   148     
  0000                =1   149     LCDSpecialRWDLine0 EQU 00000000b                                ;pixel values for "RW
                                   D"
  0000                =1   150     LCDSpecialRWDLine1 EQU 00000000b
  0005                =1   151     LCDSpecialRWDLine2 EQU 00000101b
  000A                =1   152     LCDSpecialRWDLine3 EQU 00001010b
  0014                =1   153     LCDSpecialRWDLine4 EQU 00010100b
  000A                =1   154     LCDSpecialRWDLine5 EQU 00001010b
  0005                =1   155     LCDSpecialRWDLine6 EQU 00000101b
  0000                =1   156     LCDSpecialRWDLine7 EQU 00000000b
                      =1   157     
  0011                =1   158     LCDSpecialPauseLine0 EQU 00010001b                              ;pixel values for "pa
                                   use"
  0011                =1   159     LCDSpecialPauseLine1 EQU 00010001b
  0011                =1   160     LCDSpecialPauseLine2 EQU 00010001b
  0011                =1   161     LCDSpecialPauseLine3 EQU 00010001b
  0011                =1   162     LCDSpecialPauseLine4 EQU 00010001b
  0011                =1   163     LCDSpecialPauseLine5 EQU 00010001b
  0011                =1   164     LCDSpecialPauseLine6 EQU 00010001b
  0011                =1   165     LCDSpecialPauseLine7 EQU 00010001b
                      =1   166     
                      =1   167     
                      =1   168     
                      =1   169     
                      =1   170     
                      =1   171     
                      =1   172     
                      =1   173     
                      =1   174     
                      =1   175     
                      =1   176     
                      =1   177     
                           178 +1  $INCLUDE(boolean.INC)
                      =1   179     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1   180     ;                                                                            ;
                      =1   181     ;                                  boolean.INC                               ;
                      =1   182     ;                             Boolean Definitions                            ;
                      =1   183     ;                                 Include File                               ;
                      =1   184     ;                                                                            ;
                      =1   185     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1   186     
                      =1   187     ; This file contains the boolean definitions for all of the assembly code for
                      =1   188     ;       the 80188 MP3 Player.
                      =1   189     ;
                      =1   190     ; Revision History:
                      =1   191     
                      =1   192     ;     5/2/2008 Samuel Yang     
                      =1   193     
                      =1   194     
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  21:13:40  06/18/:8  PAGE    5


LOC  OBJ                  LINE     SOURCE

  0001                =1   195     TRUE EQU 1h
  0000                =1   196     FALSE EQU 0h
                           197     
                           198     
----                       199     CODE SEGMENT PUBLIC 'CODE'
                           200     
                           201             ASSUME  CS:CGROUP, DS:DGROUP
                           202     
                           203     
                           204     
                           205     
                           206     
                           207     ; InitDisplay
                           208     ;
                           209     ; Description:       This procedure initializes everything for display,  including sp
                                   ecial characters
                           210     ;
                           211     ; Operation:        Sends initialization bytes to LCD
                           212     ;
                           213     ; Arguments:         None.
                           214     ; Return Value:      None.
                           215     ;
                           216     ; Local Variables:   None.
                           217     ; Shared Variables:  None.
                           218     
                           219     ; Input:            None.
                           220     ; Output:            Initializes LCD.
                           221     ;
                           222     ; Error Handling:    None.
                           223     ;
                           224     ; Algorithms:        None.
                           225     ; Data Structures:   None.
                           226     ;
                           227     ; Registers Changed: None
                           228     ; Stack Depth:       2 words
                           229     ;
                           230     ; Last Modified:     5-2-2008
0000                       231     InitDisplay   PROC    NEAR
                           232                             PUBLIC InitDisplay
0000 50                    233                             PUSH AX
0001 52                    234                             PUSH DX
                           235                             
                           236                             ;init LCD
0002 BA0001                237                             MOV DX, displayAddressCMD
0005 B03C                  238                             MOV AL, functionSet
0007 EE                    239                             OUT DX, AL
0008 E8C802                240                             CALL readBusyFlag
000B B001                  241                             MOV AL, clearScreen
000D EE                    242                             OUT DX, AL
000E E8C202                243                             CALL readBusyFlag
0011 B006                  244                             MOV AL, entryModeSet
0013 EE                    245                             OUT DX, AL
0014 E8BC02                246                             CALL readBusyFlag
0017 B00C                  247                             MOV AL, displayOnOffCtrl
0019 EE                    248                             OUT DX, AL
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  21:13:40  06/18/:8  PAGE    6


LOC  OBJ                  LINE     SOURCE

001A E8B602                249                             CALL readBusyFlag
                           250                             
                           251                             ;init variables
001D C60600000090   R      252                             MOV timeStringBuffer[0],0
                           253                             
                           254                             ;init special characters here
0023 BA0001                255                             MOV DX, displayAddressCMD
0026 B048                  256                             MOV AL, LCDSpecialPlay
0028 EE                    257                             OUT DX, AL
0029 E8A702                258                             CALL readBusyFlag
002C BA0101                259                             MOV DX, displayAddressDAT
002F B010                  260                             MOV AL, LCDSpecialPlayLine0
0031 EE                    261                             OUT DX, AL
0032 E89E02                262                             CALL readBusyFlag
0035 B018                  263                             MOV AL, LCDSpecialPlayLine1
0037 EE                    264                             OUT DX, AL
0038 E89802                265                             CALL readBusyFlag
003B B014                  266                             MOV AL, LCDSpecialPlayLine2
003D EE                    267                             OUT DX, AL
003E E89202                268                             CALL readBusyFlag
0041 B012                  269                             MOV AL, LCDSpecialPlayLine3
0043 EE                    270                             OUT DX, AL
0044 E88C02                271                             CALL readBusyFlag
0047 B011                  272                             MOV AL, LCDSpecialPlayLine4
0049 EE                    273                             OUT DX, AL
004A E88602                274                             CALL readBusyFlag
004D B012                  275                             MOV AL, LCDSpecialPlayLine5
004F EE                    276                             OUT DX, AL
0050 E88002                277                             CALL readBusyFlag
0053 B014                  278                             MOV AL, LCDSpecialPlayLine6
0055 EE                    279                             OUT DX, AL
0056 E87A02                280                             CALL readBusyFlag
0059 B018                  281                             MOV AL, LCDSpecialPlayLine7
005B EE                    282                             OUT DX, AL
005C E87402                283                             CALL readBusyFlag
                           284                             
005F BA0001                285                             MOV DX, displayAddressCMD
0062 B060                  286                             MOV AL, LCDSpecialStop
0064 EE                    287                             OUT DX, AL
0065 E86B02                288                             CALL readBusyFlag
0068 BA0101                289                             MOV DX, displayAddressDAT
006B B01F                  290                             MOV AL, LCDSpecialStopLine0
006D EE                    291                             OUT DX, AL
006E E86202                292                             CALL readBusyFlag
0071 B010                  293                             MOV AL, LCDSpecialStopLine1
0073 EE                    294                             OUT DX, AL
0074 E85C02                295                             CALL readBusyFlag
0077 B010                  296                             MOV AL, LCDSpecialStopLine2
0079 EE                    297                             OUT DX, AL
007A E85602                298                             CALL readBusyFlag
007D B010                  299                             MOV AL, LCDSpecialStopLine3
007F EE                    300                             OUT DX, AL
0080 E85002                301                             CALL readBusyFlag
0083 B010                  302                             MOV AL, LCDSpecialStopLine4
0085 EE                    303                             OUT DX, AL
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  21:13:40  06/18/:8  PAGE    7


LOC  OBJ                  LINE     SOURCE

0086 E84A02                304                             CALL readBusyFlag
0089 B010                  305                             MOV AL, LCDSpecialStopLine5
008B EE                    306                             OUT DX, AL
008C E84402                307                             CALL readBusyFlag
008F B010                  308                             MOV AL, LCDSpecialStopLine6
0091 EE                    309                             OUT DX, AL
0092 E83E02                310                             CALL readBusyFlag
0095 B01F                  311                             MOV AL, LCDSpecialStopLine7
0097 EE                    312                             OUT DX, AL
0098 E83802                313                             CALL readBusyFlag
                           314                             
009B BA0001                315                             MOV DX, displayAddressCMD
009E B070                  316                             MOV AL, LCDSpecialStop2
00A0 EE                    317                             OUT DX, AL
00A1 E82F02                318                             CALL readBusyFlag
00A4 BA0101                319                             MOV DX, displayAddressDAT
00A7 B01F                  320                             MOV AL, LCDSpecialStop2Line0
00A9 EE                    321                             OUT DX, AL
00AA E82602                322                             CALL readBusyFlag
00AD B001                  323                             MOV AL, LCDSpecialStop2Line1
00AF EE                    324                             OUT DX, AL
00B0 E82002                325                             CALL readBusyFlag
00B3 B001                  326                             MOV AL, LCDSpecialStop2Line2
00B5 EE                    327                             OUT DX, AL
00B6 E81A02                328                             CALL readBusyFlag
00B9 B001                  329                             MOV AL, LCDSpecialStop2Line3
00BB EE                    330                             OUT DX, AL
00BC E81402                331                             CALL readBusyFlag
00BF B001                  332                             MOV AL, LCDSpecialStop2Line4
00C1 EE                    333                             OUT DX, AL
00C2 E80E02                334                             CALL readBusyFlag
00C5 B001                  335                             MOV AL, LCDSpecialStop2Line5
00C7 EE                    336                             OUT DX, AL
00C8 E80802                337                             CALL readBusyFlag
00CB B001                  338                             MOV AL, LCDSpecialStop2Line6
00CD EE                    339                             OUT DX, AL
00CE E80202                340                             CALL readBusyFlag
00D1 B01F                  341                             MOV AL, LCDSpecialStop2Line7
00D3 EE                    342                             OUT DX, AL
00D4 E8FC01                343                             CALL readBusyFlag
                           344                             
00D7 BA0001                345                             MOV DX, displayAddressCMD
00DA B050                  346                             MOV AL, LCDSpecialFFW
00DC EE                    347                             OUT DX, AL
00DD E8F301                348                             CALL readBusyFlag
00E0 BA0101                349                             MOV DX, displayAddressDAT
00E3 B000                  350                             MOV AL, LCDSpecialFFWLine0
00E5 EE                    351                             OUT DX, AL
00E6 E8EA01                352                             CALL readBusyFlag
00E9 B000                  353                             MOV AL, LCDSpecialFFWLine1
00EB EE                    354                             OUT DX, AL
00EC E8E401                355                             CALL readBusyFlag
00EF B014                  356                             MOV AL, LCDSpecialFFWLine2
00F1 EE                    357                             OUT DX, AL
00F2 E8DE01                358                             CALL readBusyFlag
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  21:13:40  06/18/:8  PAGE    8


LOC  OBJ                  LINE     SOURCE

00F5 B00A                  359                             MOV AL, LCDSpecialFFWLine3
00F7 EE                    360                             OUT DX, AL
00F8 E8D801                361                             CALL readBusyFlag
00FB B005                  362                             MOV AL, LCDSpecialFFWLine4
00FD EE                    363                             OUT DX, AL
00FE E8D201                364                             CALL readBusyFlag
0101 B00A                  365                             MOV AL, LCDSpecialFFWLine5
0103 EE                    366                             OUT DX, AL
0104 E8CC01                367                             CALL readBusyFlag
0107 B014                  368                             MOV AL, LCDSpecialFFWLine6
0109 EE                    369                             OUT DX, AL
010A E8C601                370                             CALL readBusyFlag
010D B000                  371                             MOV AL, LCDSpecialFFWLine7
010F EE                    372                             OUT DX, AL
0110 E8C001                373                             CALL readBusyFlag
                           374                             
0113 BA0001                375                             MOV DX, displayAddressCMD
0116 B058                  376                             MOV AL, LCDSpecialRWD
0118 EE                    377                             OUT DX, AL
0119 E8B701                378                             CALL readBusyFlag
011C BA0101                379                             MOV DX, displayAddressDAT
011F B000                  380                             MOV AL, LCDSpecialRWDLine0
0121 EE                    381                             OUT DX, AL
0122 E8AE01                382                             CALL readBusyFlag
0125 B000                  383                             MOV AL, LCDSpecialRWDLine1
0127 EE                    384                             OUT DX, AL
0128 E8A801                385                             CALL readBusyFlag
012B B005                  386                             MOV AL, LCDSpecialRWDLine2
012D EE                    387                             OUT DX, AL
012E E8A201                388                             CALL readBusyFlag
0131 B00A                  389                             MOV AL, LCDSpecialRWDLine3
0133 EE                    390                             OUT DX, AL
0134 E89C01                391                             CALL readBusyFlag
0137 B014                  392                             MOV AL, LCDSpecialRWDLine4
0139 EE                    393                             OUT DX, AL
013A E89601                394                             CALL readBusyFlag
013D B00A                  395                             MOV AL, LCDSpecialRWDLine5
013F EE                    396                             OUT DX, AL
0140 E89001                397                             CALL readBusyFlag
0143 B005                  398                             MOV AL, LCDSpecialRWDLine6
0145 EE                    399                             OUT DX, AL
0146 E88A01                400                             CALL readBusyFlag
0149 B000                  401                             MOV AL, LCDSpecialRWDLine7
014B EE                    402                             OUT DX, AL
014C E88401                403                             CALL readBusyFlag
                           404                             
014F BA0001                405                             MOV DX, displayAddressCMD
0152 B068                  406                             MOV AL, LCDSpecialPause
0154 EE                    407                             OUT DX, AL
0155 E87B01                408                             CALL readBusyFlag
0158 BA0101                409                             MOV DX, displayAddressDAT
015B B011                  410                             MOV AL, LCDSpecialPauseLine0
015D EE                    411                             OUT DX, AL
015E E87201                412                             CALL readBusyFlag
0161 B011                  413                             MOV AL, LCDSpecialPauseLine1
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  21:13:40  06/18/:8  PAGE    9


LOC  OBJ                  LINE     SOURCE

0163 EE                    414                             OUT DX, AL
0164 E86C01                415                             CALL readBusyFlag
0167 B011                  416                             MOV AL, LCDSpecialPauseLine2
0169 EE                    417                             OUT DX, AL
016A E86601                418                             CALL readBusyFlag
016D B011                  419                             MOV AL, LCDSpecialPauseLine3
016F EE                    420                             OUT DX, AL
0170 E86001                421                             CALL readBusyFlag
0173 B011                  422                             MOV AL, LCDSpecialPauseLine4
0175 EE                    423                             OUT DX, AL
0176 E85A01                424                             CALL readBusyFlag
0179 B011                  425                             MOV AL, LCDSpecialPauseLine5
017B EE                    426                             OUT DX, AL
017C E85401                427                             CALL readBusyFlag
017F B011                  428                             MOV AL, LCDSpecialPauseLine6
0181 EE                    429                             OUT DX, AL
0182 E84E01                430                             CALL readBusyFlag
0185 B011                  431                             MOV AL, LCDSpecialPauseLine7
0187 EE                    432                             OUT DX, AL
0188 E84801                433                             CALL readBusyFlag
                           434                             ;end init special characters
                           435                             
                           436                             
018B 5A                    437                             POP DX
018C 58                    438                             POP AX
018D C3                    439                             RET
                           440     InitDisplay   ENDP
                           441     
                           442     
                           443     ; display_title
                           444     ;
                           445     ; Description:       This procedure displays title in the dedicated spot on the LCD
                           446     ;
                           447     ; Operation:        Uses DisplayStr
                           448     ; Arguments:         segment and offset of string on stack, stored in ES, SI
                           449     ; Return Value:      None.
                           450     ;
                           451     ; Local Variables:   None.
                           452     ; Shared Variables:  None.
                           453     
                           454     ; Input:            None.
                           455     ; Output:            Displays title on LCD.
                           456     ;
                           457     ; Error Handling:    None.
                           458     ;
                           459     ; Algorithms:        None.
                           460     ; Data Structures:   None.
                           461     ;
                           462     ; Registers Changed: None
                           463     ; Stack Depth:       5 words
                           464     ;
                           465     ; Last Modified:     5-2-2008
018E                       466     display_title   PROC    NEAR
                           467                             PUBLIC display_title
                           468                     
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  21:13:40  06/18/:8  PAGE   10


LOC  OBJ                  LINE     SOURCE

018E 55                    469                     PUSH BP
018F 8BEC                  470                     MOV BP, SP
0191 56                    471                     PUSH SI
0192 57                    472                     PUSH DI
0193 50                    473                     PUSH AX
0194 53                    474                     PUSH BX
0195 8B7604                475                     MOV SI, [BP+4]
0198 8E4606                476                     MOV ES, [BP+6]
                           477                     
019B B82800                478                     MOV AX, titleLength
019E BB2800                479                     MOV BX, titleOffset
                           480                     
01A1 E8EB00                481                     CALL DisplayStr
                           482                     
01A4 5B                    483                     POP BX
01A5 58                    484                     POP AX
01A6 5F                    485                     POP DI
01A7 5E                    486                     POP SI
01A8 5D                    487                     POP BP
                           488                     
                           489                     
01A9 C3                    490                     RET
                           491     display_title   ENDP
                           492     
                           493     ; display_artist
                           494     ;
                           495     ; Description:       This procedure displays artist in the dedicated spot on the LCD
                           496     ;
                           497     ; Operation:        Uses DisplayStr
                           498     ; Arguments:          segment and offset of string on stack, stored in ES, SI
                           499     ; Return Value:      None.
                           500     ;
                           501     ; Local Variables:   None.
                           502     ; Shared Variables:  None.
                           503     
                           504     ; Input:            None.
                           505     ; Output:            Displays artist on LCD.
                           506     ;
                           507     ; Error Handling:    None.
                           508     ;
                           509     ; Algorithms:        None.
                           510     ; Data Structures:   None.
                           511     ;
                           512     ; Registers Changed: None
                           513     ; Stack Depth:       5 words
                           514     ;
                           515     ; Last Modified:     5-3-2008
01AA                       516     display_artist   PROC    NEAR
                           517                             PUBLIC display_artist
                           518                     
01AA 55                    519                     PUSH BP
01AB 8BEC                  520                     MOV BP, SP
01AD 56                    521                     PUSH SI
01AE 57                    522                     PUSH DI
01AF 50                    523                     PUSH AX
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  21:13:40  06/18/:8  PAGE   11


LOC  OBJ                  LINE     SOURCE

01B0 53                    524                     PUSH BX
01B1 8B7604                525                     MOV SI, [BP+4]
01B4 8E4606                526                     MOV ES, [BP+6]
                           527                     
01B7 B81600                528                     MOV AX, artistLength
01BA BB1200                529                     MOV BX, artistOffset
                           530                     
01BD E8CF00                531                     CALL DisplayStr
                           532                     
01C0 5B                    533                     POP BX
01C1 58                    534                     POP AX
01C2 5F                    535                     POP DI
01C3 5E                    536                     POP SI
01C4 5D                    537                     POP BP
                           538                     
                           539                     
01C5 C3                    540                     RET
                           541     display_artist   ENDP
                           542     
                           543     ; display_status
                           544     ;
                           545     ; Description:       This procedure displays status in the dedicated spot on the LCD
                           546     ;
                           547     ; Operation:       Looks up predefined status strings from "statuses" table.  Uses 
                           548     ;                               DisplayStr to display the looked up status string.
                           549     ; Arguments:   Status code (byte) from stack, stored in CX   
                           550     ; Return Value:      None.
                           551     ;
                           552     ; Local Variables:   None.
                           553     ; Shared Variables:  None.
                           554     
                           555     ; Input:             None.
                           556     ; Output:            Displays status on LCD.
                           557     ;
                           558     ; Error Handling:    None.
                           559     ;
                           560     ; Algorithms:        None.
                           561     ; Data Structures:   None.
                           562     ;
                           563     ; Registers Changed: None
                           564     ; Stack Depth:       7 words
                           565     ;
                           566     ; Last Modified:     5-2-2008
01C6                       567     display_status   PROC    NEAR
                           568                             PUBLIC display_status
                           569                     
01C6 55                    570                     PUSH BP
01C7 8BEC                  571                     MOV BP, SP
01C9 56                    572                     PUSH SI
01CA 57                    573                     PUSH DI
01CB 50                    574                     PUSH AX
01CC 53                    575                     PUSH BX
01CD 51                    576                     PUSH CX
01CE 8B4E04                577                     MOV CX, [BP+4]
                           578             
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  21:13:40  06/18/:8  PAGE   12


LOC  OBJ                  LINE     SOURCE

                           579                     ;offset = statusStringLength*status
01D1 B008                  580                     MOV AL, statusStringLength  ;calculate the offset of the desired pred
                                   efined status message
01D3 F6E1                  581                     MUL CL
                           582                     
01D5 68----90       R      583                     PUSH SEG(statuses)                      ;Use ES:[SI] to point to the 
                                   predefined status message
01D9 07                    584                     POP ES
01DA BB020390       R      585                     MOV BX, OFFSET(statuses)
01DE 03D8                  586                     ADD BX, AX
01E0 8BF3                  587                     MOV SI, BX      
                           588                     
                           589                     
01E2 B80800                590                     MOV AX, statusLength
01E5 BB0000                591                     MOV BX, statusOffset
                           592                     
01E8 E8A400                593                     CALL DisplayStr
                           594                     
01EB 59                    595                     POP CX
01EC 5B                    596                     POP BX
01ED 58                    597                     POP AX
01EE 5F                    598                     POP DI
01EF 5E                    599                     POP SI
01F0 5D                    600                     POP BP
                           601                     
                           602                     
01F1 C3                    603                     RET
                           604     display_status   ENDP
                           605     
                           606     ; display_time
                           607     ;
                           608     ; Description:       This procedure displays time in the dedicated spot on the LCD
                           609     ;
                           610     ; Operation:     Divides time into minutes, seconds, and tenths of seconds, writing e
                                   ach
                           611     ;                       to a temporary buffer, which is passed to DisplayStr.
                           612     ; Arguments:         time in tenths of seconds on the stack, stored in CX
                           613     ; Return Value:      None.
                           614     ;
                           615     ; Local Variables:   None.
                           616     ; Shared Variables:  None.
                           617     
                           618     ; Input:            None.
                           619     ; Output:            Displays time on LCD.
                           620     ;
                           621     ; Error Handling:    None.
                           622     ;
                           623     ; Algorithms:        None.
                           624     ; Data Structures:   Uses timeStringBuffer[] to temporarily store time string
                           625     ;
                           626     ; Registers Changed: None
                           627     ; Stack Depth:       8 words
                           628     ;
                           629     ; Last Modified:     5-3-2008
01F2                       630     display_time   PROC    NEAR
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  21:13:40  06/18/:8  PAGE   13


LOC  OBJ                  LINE     SOURCE

                           631                             PUBLIC display_time
01F2 55                    632                     PUSH BP
01F3 8BEC                  633                     MOV BP, SP
01F5 56                    634                     PUSH SI
01F6 57                    635                     PUSH DI
01F7 50                    636                     PUSH AX
01F8 53                    637                     PUSH BX
01F9 51                    638                     PUSH CX
01FA 52                    639                     PUSH DX
                           640                     
01FB 8B4E04                641                     MOV CX, [BP+4] ;retrieve time given in tenths of seconds
01FE 81F9FFFF              642                     CMP CX, TIME_NONE
0202 7468                  643                     JE timeNone
                           644             
                           645                     ;time/tenthsOfSecPerMin = minutes R(tenthsOfSeconds)
0204 8BC1                  646                     MOV AX, CX
0206 B95802                647                     MOV CX, tenthsOfSecPerMin
0209 33D2                  648                     XOR DX, DX
020B F7F1                  649                     DIV CX
020D 8BCA                  650                     MOV CX, DX ;store remainder in CX
                           651                     ;minutes in AX, remainder (in tenths of seconds) in CX
                           652                     
                           653                     ;write minutes (in AX)
                           654                     ;minutes/10= tensOfMinutes R(minutes)
020F BB0A00                655                     MOV BX, ten
0212 33D2                  656                     XOR DX, DX
0214 F7F3                  657                     DIV BX
0216 053000                658                     ADD AX, ASCIIDecCons  ;convert to ASCII
0219 83C230                659                     ADD DX, ASCIIDecCons
021C BB0000                660                     MOV BX, timeStringBufferMinutesOffset ;get index of minutes
021F 88870000       R      661                     MOV timeStringBuffer[BX], AL            ;write minutes to buffer to b
                                   e printed
0223 43                    662                     INC BX
0224 88970000       R      663                     MOV timeStringBuffer[BX], DL
0228 43                    664                     INC BX
                           665                     ;write colon
0229 C68700003A90   R      666                     MOV timeStringBuffer[BX], ASCIIcolon
                           667                     
                           668                     ;previous remainder(in tenths of seconds) should be in CX
022F 8BC1                  669                     MOV AX, CX
0231 B90A00                670                     MOV CX, tenthsOfSecPerSec
0234 33D2                  671                     XOR DX, DX
0236 F7F1                  672                     DIV CX 
0238 8BCA                  673                     MOV CX, DX ;store new remainder in CX
                           674                     ;seconds in AX, tenths of seconds in CX
                           675                     
                           676                     ;write seconds
023A BB0A00                677                     MOV BX, ten
023D 33D2                  678                     XOR DX, DX
023F F7F3                  679                     DIV BX
0241 053000                680                     ADD AX, ASCIIDecCons  ;convert to ASCII
0244 83C230                681                     ADD DX, ASCIIDecCons
0247 BB0300                682                     MOV BX, timeStringBufferSecondsOffset ;get index of seconds
024A 88870000       R      683                     MOV timeStringBuffer[BX], AL
024E 43                    684                     INC BX          
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  21:13:40  06/18/:8  PAGE   14


LOC  OBJ                  LINE     SOURCE

024F 88970000       R      685                     MOV timeStringBuffer[BX], DL
0253 43                    686                     INC BX  
                           687                     ;write period
0254 C68700002E90   R      688                     MOV timeStringBuffer[BX], ASCIIperiod
025A 43                    689                     INC BX
                           690                     
                           691                     ;write tenths of seconds
025B 83C130                692                     ADD CX, ASCIIDecCons
025E 888F0000       R      693                     MOV timeStringBuffer[BX], CL
                           694                     ;write null at end
0262 43                    695                     INC BX
0263 C68700000090   R      696                     MOV timeStringBuffer[BX], null
                           697                     
0269 EB0A90                698                     JMP callGenericDisplay
                           699                     
                           700                     
026C                       701     timeNone:               
026C BB0000                702                     MOV BX, 0                               ;if TIME_NONE, then print bla
                                   nk spaces
026F C68700000090   R      703                     MOV timeStringBuffer[BX], null
0275                       704     callGenericDisplay:             
                           705                     ;now call DisplayStr, passing it hte buffer
0275 B80800                706                     MOV AX, timeLength
0278 BB0900                707                     MOV BX, timeOffset
027B 68----90       R      708                     PUSH SEG(timeStringBuffer)
027F 07                    709                     POP ES
0280 BE000090       R      710                     MOV SI, OFFSET(timeStringBuffer)
0284 E80800                711                     CALL DisplayStr
                           712                     
0287 5A                    713                     POP DX
0288 59                    714                     POP CX
0289 5B                    715                     POP BX
028A 58                    716                     POP AX
028B 5F                    717                     POP DI
028C 5E                    718                     POP SI
028D 5D                    719                     POP BP
028E C3                    720                     RET
                           721     display_time   ENDP
                           722     
                           723     ; DisplayStr
                           724     ;
                           725     ; Description:       This procedure is a generic display function. 
                           726     ;
                           727     ; Operation:        Displays string stored at ES:[SI] for specified length,
                           728     ;                               offset          
                           729     ;
                           730     ; Arguments:         string located at ES:[SI], length in AL, offset in BL
                           731     ; Return Value:      None.
                           732     ;
                           733     ; Local Variables:   None.
                           734     ; Shared Variables:  None.
                           735     
                           736     ; Input:            None.
                           737     ; Output:            Displays string on LCD.
                           738     ;
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  21:13:40  06/18/:8  PAGE   15


LOC  OBJ                  LINE     SOURCE

                           739     ; Error Handling:    If string is shorter than length, will display blank spaces afte
                                   rwards.
                           740     ;
                           741     ; Algorithms:        None.
                           742     ; Data Structures:   None.
                           743     ;
                           744     ; Registers Changed: None
                           745     ; Stack Depth:       5 words
                           746     ;
                           747     ; Last Modified:     5-2-2008
028F                       748     DisplayStr   PROC    NEAR
                           749                             PUBLIC DisplayStr
028F 56                    750                     PUSH SI
0290 50                    751                     PUSH AX
0291 53                    752                     PUSH BX
0292 51                    753                     PUSH CX
0293 52                    754                     PUSH DX
                           755                     
0294 8ACB                  756                     MOV CL, BL                      ;store offset in CL
0296 8AD8                  757                     MOV BL, AL                      ;store length in BL
                           758                     
0298 E83800                759                     CALL readBusyFlag
029B BA0001                760                     MOV DX, displayAddressCMD       ;return cursor home
029E B002                  761                     MOV AL, returnHome
02A0 EE                    762                     OUT DX, AL
02A1 E82F00                763                     CALL readBusyFlag
                           764                     
02A4 80F900                765                     CMP CL, position0                                       ;shift cursor
                                    to desired offset
02A7 740A                  766                     JE offsetDone
02A9 32ED                  767                     XOR CH, CH
02AB B014                  768                     MOV AL, cursorRight
02AD                       769     getToOffset:
02AD EE                    770                     OUT DX, AL
02AE E82200                771                     CALL readBusyFlag
02B1 E2FA                  772                     LOOP getToOffset
                           773     
02B3                       774     offsetDone:                                                     ;cursor is now at des
                                   ired offset
02B3 8ACB                  775                     MOV CL, BL                                      ;store length in CL
02B5 32ED                  776                     XOR CH, CH
02B7 BA0101                777                     MOV DX, displayAddressDAT
                           778                     
02BA                       779     displayLoop:                                            ;print a character, decrement
                                    length count
02BA 268A04                780                     MOV AL, ES:[SI]
02BD 3C00                  781                     CMP AL, STRINGNULL
02BF 7404                  782                     JE stringIsNull
                           783                     ;JNE string not null
02C1 46                    784                     INC SI                                  
02C2 EB0390                785                     JMP endDisplayLoop
02C5                       786     stringIsNull:                           ;if string is null,  don't increment SI, so s
                                   tring will
02C5 B020                  787                     MOV AL, blankSpace              ;continue reading null and blank spac
                                   es will be added
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  21:13:40  06/18/:8  PAGE   16


LOC  OBJ                  LINE     SOURCE

02C7                       788     endDisplayLoop:         
02C7 EE                    789                     OUT DX,AL
02C8 E80800                790                     CALL readBusyFlag
02CB E2ED                  791                     LOOP displayLoop
                           792                     
02CD                       793     endDisplay:             
02CD 5A                    794                     POP DX
02CE 59                    795                     POP CX
02CF 5B                    796                     POP BX
02D0 58                    797                     POP AX
02D1 5E                    798                     POP SI
02D2 C3                    799                     RET
                           800     DisplayStr   ENDP
                           801     
                           802     ; readBusyFlag
                           803     ;
                           804     ; Description:       This procedure blocks until LCD is no longer busy.
                           805     ;
                           806     ; Operation:       Keeps reading busy flag until LCD is not busy.               
                           807     ;
                           808     ; Arguments:         None.
                           809     ; Return Value:      None.
                           810     ;
                           811     ; Local Variables:   None.
                           812     ; Shared Variables:  None.
                           813     
                           814     ; Input:            From LCD busy flag
                           815     ; Output:           None.
                           816     ;
                           817     ; Error Handling:    Blocking function.
                           818     ;
                           819     ; Algorithms:        None.
                           820     ; Data Structures:   None.
                           821     ;
                           822     ; Registers Changed: None
                           823     ; Stack Depth:       2 words
                           824     ;
                           825     ; Last Modified:     5-2-2008
02D3                       826     readBusyFlag   PROC    NEAR
                           827                             PUBLIC readBusyFlag
                           828                     
02D3 50                    829                     PUSH AX
02D4 52                    830                     PUSH DX
                           831                     
02D5                       832     checkBusy:              
02D5 BA0001                833                     MOV DX, displayAddressCMD
02D8 EC                    834                     IN AL, DX
02D9 2480                  835                     AND AL, busyFlagMask
02DB 3C80                  836                     CMP AL, LCDbusy
02DD 74F6                  837                     JE checkBusy
                           838                     
02DF 5A                    839                     POP DX
02E0 58                    840                     POP AX
                           841                     
02E1 C3                    842                     RET
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  21:13:40  06/18/:8  PAGE   17


LOC  OBJ                  LINE     SOURCE

                           843     readBusyFlag   ENDP
                           844     
                           845     ; contrast_up
                           846     ;
                           847     ; Description:       This procedure increases the contrast of the LCD.
                           848     ;
                           849     ; Operation:        Increments the counter on the digital potentiometer.
                           850     ;
                           851     ; Arguments:         None.
                           852     ; Return Value:      None.
                           853     ;
                           854     ; Local Variables:   None.
                           855     ; Shared Variables:  None.
                           856     
                           857     ; Input:            None.
                           858     ; Output:           increases LCD contrast
                           859     ;
                           860     ; Error Handling:    Blocking function.
                           861     ;
                           862     ; Algorithms:        None.
                           863     ; Data Structures:   None.
                           864     ;
                           865     ; Registers Changed: None
                           866     ; Stack Depth:       3 words
                           867     ;
                           868     ; Last Modified:     6-11-2008
02E2                       869     contrast_up   PROC    NEAR
                           870                             PUBLIC contrast_up
                           871                     
02E2 50                    872                     PUSH AX
02E3 51                    873                     PUSH CX
02E4 52                    874                     PUSH DX
                           875                     
02E5 B91400                876                     MOV CX, numContrastSteps
02E8 BA8001                877                     MOV DX, digipotAddressUp
02EB                       878     upContrastLoop:                         
02EB EE                    879                     OUT DX, AL                                      ;doesn't matter what'
                                   s outputed
02EC E2FD                  880                     LOOP upContrastLoop
                           881                                     
02EE 5A                    882                     POP DX
02EF 59                    883                     POP CX
02F0 58                    884                     POP AX
                           885                     
02F1 C3                    886                     RET
                           887     contrast_up   ENDP
                           888     
                           889     ; contrast_down
                           890     ;
                           891     ; Description:       This procedure decreases the contrast of the LCD.
                           892     ;
                           893     ; Operation:        Decrements the counter on the digital potentiometer.
                           894     ;
                           895     ; Arguments:         None.
                           896     ; Return Value:      None.
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  21:13:40  06/18/:8  PAGE   18


LOC  OBJ                  LINE     SOURCE

                           897     ;
                           898     ; Local Variables:   None.
                           899     ; Shared Variables:  None.
                           900     
                           901     ; Input:            None.
                           902     ; Output:           decreases LCD contrast
                           903     ;
                           904     ; Error Handling:    Blocking function.
                           905     ;
                           906     ; Algorithms:        None.
                           907     ; Data Structures:   None.
                           908     ;
                           909     ; Registers Changed: None
                           910     ; Stack Depth:       3 words
                           911     ;
                           912     ; Last Modified:     6-11-2008
02F2                       913     contrast_down   PROC    NEAR
                           914                             PUBLIC contrast_down
                           915                     
02F2 50                    916                     PUSH AX
02F3 51                    917                     PUSH CX
02F4 52                    918                     PUSH DX
                           919                     
02F5 B91400                920                     MOV CX, numContrastSteps
02F8 BA8201                921                     MOV DX, digipotAddressDown
02FB                       922     downContrastLoop:                               
02FB EE                    923                     OUT DX, AL                                      ;doesn't matter what'
                                   s outputed
02FC E2FD                  924                     LOOP downContrastLoop
                           925                                     
02FE 5A                    926                     POP DX
02FF 59                    927                     POP CX
0300 58                    928                     POP AX
                           929                     
0301 C3                    930                     RET
                           931     contrast_down   ENDP
                           932     
                           933     ;array of status strings (predefined constants printed from display_status()
0302                       934     statuses  LABEL BYTE
                           935                     
0302 202020                936                     DB '   ',1,'   ',0  ;play
0305 01
0306 202020
0309 00
030A 202020                937                     DB '   ',2,'   ',0  ;FFWD
030D 02
030E 202020
0311 00
0312 202020                938                     DB '   ',3,'   ',0  ;RWD
0315 03
0316 202020
0319 00
031A 202020                939                     DB '   ',4,6,'  ',0 ;IDLE/STOP
031D 04
031E 06
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  21:13:40  06/18/:8  PAGE   19


LOC  OBJ                  LINE     SOURCE

031F 2020
0321 00
0322 202020                940                     DB '   ',5,'   ',0  ;PAUSE
0325 05
0326 202020
0329 00
032A 494C4C4547414C        941                     DB 'ILLEGAL',0
0331 00
----                       942     CODE ENDS
                           943     
                           944     
----                       945     DATA    SEGMENT PUBLIC  'DATA'
0000 (8                    946     timeStringBuffer DB timeLength DUP(?)   ;reserves memory to store the time (converted
                                    to string)
     ??
     )
----                       947     DATA    ENDS
                           948     
                           949     
                           950     
                           951     
                           952             END     

ASSEMBLY COMPLETE, NO ERRORS FOUND
