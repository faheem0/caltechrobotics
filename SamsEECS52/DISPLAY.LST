8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  15:20:14  05/04/:8  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE DISPLAY
OBJECT MODULE PLACED IN DISPLAY.OBJ
ASSEMBLER INVOKED BY:  C:\ASMSTU~1\ASM86.EXE DISPLAY.ASM DB M1 EP


LOC  OBJ                  LINE     SOURCE

                             1            NAME  display
                             2     
                             3     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             4     ;                                                                            ;
                             5     ;                                    Display                              ;
                             6     ;                           Display Functions                         ;
                             7     ;                                                                            ;
                             8     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             9     
                            10     ; Description:      This program contains the functions to
                            11     ;                       display 
                            12     ;
                            13     ; Input:            None.
                            14     ; Output:           40 Character LCD
                            15     ; User Interface:   call functions:
                            16     ;                               display_time(word)
                            17     ;                               display_status(word)
                            18     ;                               display_title(byte)
                            19     ;                               display_artist(byte)
                            20     ; Error Handling:   None.
                            21     ;
                            22     ; Algorithms:       None.
                            23     ; Data Structures:  None.
                            24     ;
                            25     ; Revision History:
                            26     
                            27     ;     5/2/08  Samuel Yang     
                            28     CGROUP GROUP CODE
                            29     DGROUP GROUP DATA
                            30     
                            31     ; local include files
                            32 +1  $INCLUDE(display.INC)
                      =1    33     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    34     ;                                                                            ;
                      =1    35     ;                                  display.INC                               ;
                      =1    36     ;                                  Display                                   ;
                      =1    37     ;                                 Include File                               ;
                      =1    38     ;                                                                            ;
                      =1    39     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    40     
                      =1    41     ; This file contains the definitions for the Display program (display.ASM).
                      =1    42     ;
                      =1    43     ; Revision History:
                      =1    44     
                      =1    45     ;     5/2/2008 Samuel Yang     
                      =1    46     
                      =1    47     
  0100                =1    48     displayAddressCMD   EQU     00100H           ;display address for commands
  0101                =1    49     displayAddressDAT   EQU     00101H           ;display address for data
                      =1    50     
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  15:20:14  05/04/:8  PAGE    2


LOC  OBJ                  LINE     SOURCE

                      =1    51     ;LCD commands-send to displayAddressCMD
  003C                =1    52     functionSet          EQU 3CH                                    ;8 bit, 2 line, 5x7 d
                                   ots
  0001                =1    53     clearScreen                     EQU 01H                                         ;clea
                                   rs screen
  0006                =1    54     entryModeSet            EQU 06H                                         ;shift cursor
                                    right
  000C                =1    55     displayOnOffCtrl        EQU 0CH                                         ;display on, 
                                   cursor off
                      =1    56     
  0010                =1    57     cursorLeft                      EQU 10H                                         ;shif
                                   ts cursor left one
  0014                =1    58     cursorRight                     EQU 14H                                         ;shif
                                   ts cursor right one
  0002                =1    59     returnHome                      EQU 02H                                         ;
                      =1    60     
                      =1    61     ;display format constants
  0000                =1    62     statusOffset EQU 0
  0004                =1    63     statusLength EQU 4
  0005                =1    64     timeOffset EQU 5
  0008                =1    65     timeLength EQU 8
  000E                =1    66     titleOffset EQU 14
  001A                =1    67     titleLength EQU 26
  0028                =1    68     artistOffset EQU 40
  0028                =1    69     artistLength EQU 40
                      =1    70     
                      =1    71     
                      =1    72     
                      =1    73     
                      =1    74     
                      =1    75     
                      =1    76     ;time conversion constants
  0258                =1    77     tenthsOfSecPerMin EQU 600
  000A                =1    78     tenthsOfSecPerSec EQU 10
  000A                =1    79     ten EQU 10
  0030                =1    80     ASCIIDecCons EQU 48
  003A                =1    81     ASCIIcolon EQU 58
  002E                =1    82     ASCIIperiod EQU 46
  0000                =1    83     timeStringBufferMinutesOffset EQU 0
  0003                =1    84     timeStringBufferSecondsOffset EQU 3
  0000                =1    85     null EQU 0
  FFFF                =1    86     TIME_NONE EQU 65535 ;IS THIS RIGHT????
                      =1    87     
                      =1    88     
                      =1    89     ;other constants
  0028                =1    90     CHARSPERROW    EQU 40                                                   ;40 character
                                    display
  0000                =1    91     position0          EQU 0                                                        ;0 po
                                   sition on display
  0000                =1    92     STRINGNULL              EQU 0
  0080                =1    93     busyFlagMask    EQU 80h
  0080                =1    94     LCDbusy         EQU 80h
  0008                =1    95     statusStringLength EQU 8
  0020                =1    96     blankSpace EQU 32
                            97 +1  $INCLUDE(boolean.INC)
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  15:20:14  05/04/:8  PAGE    3


LOC  OBJ                  LINE     SOURCE

                      =1    98     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    99     ;                                                                            ;
                      =1   100     ;                                  boolean.INC                               ;
                      =1   101     ;                             Boolean Definitions                            ;
                      =1   102     ;                                 Include File                               ;
                      =1   103     ;                                                                            ;
                      =1   104     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1   105     
                      =1   106     ; This file contains the boolean definitions for the 80188 MP3 Player.
                      =1   107     ;
                      =1   108     ; Revision History:
                      =1   109     
                      =1   110     ;     5/2/2008 Samuel Yang     
                      =1   111     
                      =1   112     
  0001                =1   113     TRUE EQU 1h
  0000                =1   114     FALSE EQU 0h
                           115     
                           116     
----                       117     CODE SEGMENT PUBLIC 'CODE'
                           118     
                           119             ASSUME  CS:CGROUP, DS:DGROUP
                           120     
                           121     
                           122     
                           123     
                           124     
                           125     ; InitDisplay
                           126     ;
                           127     ; Description:       This procedure initializes everything for display
                           128     ;
                           129     ; Operation:        Initializes shared variables
                           130     ;
                           131     ; Arguments:         None.
                           132     ; Return Value:      None.
                           133     ;
                           134     ; Local Variables:   None.
                           135     ; Shared Variables:  
                           136     
                           137     ; Input:            None.
                           138     ; Output:            None.
                           139     ;
                           140     ; Error Handling:    None.
                           141     ;
                           142     ; Algorithms:        None.
                           143     ; Data Structures:   None.
                           144     ;
                           145     ; Registers Changed: None
                           146     ; Stack Depth:       1 words
                           147     ;
                           148     ; Last Modified:     5-2-2008
0000                       149     InitDisplay   PROC    NEAR
                           150                             PUBLIC InitDisplay
0000 50                    151                             PUSH AX
0001 52                    152                             PUSH DX
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  15:20:14  05/04/:8  PAGE    4


LOC  OBJ                  LINE     SOURCE

                           153                             
0002 BA0001                154                             MOV DX, displayAddressCMD
0005 B03C                  155                             MOV AL, functionSet
0007 EE                    156                             OUT DX, AL
0008 E85A01                157                             CALL readBusyFlag
000B B001                  158                             MOV AL, clearScreen
000D EE                    159                             OUT DX, AL
000E E85401                160                             CALL readBusyFlag
0011 B006                  161                             MOV AL, entryModeSet
0013 EE                    162                             OUT DX, AL
0014 E84E01                163                             CALL readBusyFlag
0017 B00C                  164                             MOV AL, displayOnOffCtrl
0019 EE                    165                             OUT DX, AL
001A E84801                166                             CALL readBusyFlag
                           167                             
001D 5A                    168                             POP DX
001E 58                    169                             POP AX
001F C3                    170                             RET
                           171     InitDisplay   ENDP
                           172     
                           173     
                           174     ; display_title
                           175     ;
                           176     ; Description:       This procedure displays title in the dedicated spot on the LCD
                           177     ;
                           178     ; Operation:            
                           179     ;                       Uses DisplayStr
                           180     ; Arguments:         
                           181     ; Return Value:      None.
                           182     ;
                           183     ; Local Variables:   None.
                           184     ; Shared Variables:  None.
                           185     
                           186     ; Input:            None.
                           187     ; Output:            Displays title on LCD.
                           188     ;
                           189     ; Error Handling:    None.
                           190     ;
                           191     ; Algorithms:        None.
                           192     ; Data Structures:   None.
                           193     ;
                           194     ; Registers Changed: None
                           195     ; Stack Depth:       7 words
                           196     ;
                           197     ; Last Modified:     5-2-2008
0020                       198     display_title   PROC    NEAR
                           199                             PUBLIC display_title
                           200                     
0020 55                    201                     PUSH BP
0021 8BEC                  202                     MOV BP, SP
0023 56                    203                     PUSH SI
0024 57                    204                     PUSH DI
0025 50                    205                     PUSH AX
0026 53                    206                     PUSH BX
0027 8B7604                207                     MOV SI, [BP+4]
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  15:20:14  05/04/:8  PAGE    5


LOC  OBJ                  LINE     SOURCE

002A 8E4606                208                     MOV ES, [BP+6]
                           209                     
002D B81A00                210                     MOV AX, titleLength
0030 BB0E00                211                     MOV BX, titleOffset
                           212                     
0033 E8EB00                213                     CALL DisplayStr
                           214                     
0036 5B                    215                     POP BX
0037 58                    216                     POP AX
0038 5F                    217                     POP DI
0039 5E                    218                     POP SI
003A 5D                    219                     POP BP
                           220                     
                           221                     
003B C3                    222                     RET
                           223     display_title   ENDP
                           224     
                           225     ; display_artist
                           226     ;
                           227     ; Description:       This procedure displays artist in the dedicated spot on the LCD
                           228     ;
                           229     ; Operation:            
                           230     ;                       Uses DisplayStr
                           231     ; Arguments:         
                           232     ; Return Value:      None.
                           233     ;
                           234     ; Local Variables:   None.
                           235     ; Shared Variables:  None.
                           236     
                           237     ; Input:            None.
                           238     ; Output:            Displays artist on LCD.
                           239     ;
                           240     ; Error Handling:    None.
                           241     ;
                           242     ; Algorithms:        None.
                           243     ; Data Structures:   None.
                           244     ;
                           245     ; Registers Changed: None
                           246     ; Stack Depth:       7 words
                           247     ;
                           248     ; Last Modified:     5-3-2008
003C                       249     display_artist   PROC    NEAR
                           250                             PUBLIC display_artist
                           251                     
003C 55                    252                     PUSH BP
003D 8BEC                  253                     MOV BP, SP
003F 56                    254                     PUSH SI
0040 57                    255                     PUSH DI
0041 50                    256                     PUSH AX
0042 53                    257                     PUSH BX
0043 8B7604                258                     MOV SI, [BP+4]
0046 8E4606                259                     MOV ES, [BP+6]
                           260                     
0049 B82800                261                     MOV AX, artistLength
004C BB2800                262                     MOV BX, artistOffset
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  15:20:14  05/04/:8  PAGE    6


LOC  OBJ                  LINE     SOURCE

                           263                     
004F E8CF00                264                     CALL DisplayStr
                           265                     
0052 5B                    266                     POP BX
0053 58                    267                     POP AX
0054 5F                    268                     POP DI
0055 5E                    269                     POP SI
0056 5D                    270                     POP BP
                           271                     
                           272                     
0057 C3                    273                     RET
                           274     display_artist   ENDP
                           275     
                           276     ; display_status
                           277     ;
                           278     ; Description:       This procedure displays status in the dedicated spot on the LCD
                           279     ;
                           280     ; Operation:       Looks up predefined status strings from "statuses" table     
                           281     ;                       Uses DisplayStr to display the looked up status string.
                           282     ; Arguments:   Status code (byte) in CX      
                           283     ; Return Value:      None.
                           284     ;
                           285     ; Local Variables:   None.
                           286     ; Shared Variables:  None.
                           287     
                           288     ; Input:            None.
                           289     ; Output:            Displays status on LCD.
                           290     ;
                           291     ; Error Handling:    None.
                           292     ;
                           293     ; Algorithms:        None.
                           294     ; Data Structures:   None.
                           295     ;
                           296     ; Registers Changed: None
                           297     ; Stack Depth:       7 words
                           298     ;
                           299     ; Last Modified:     5-2-2008
0058                       300     display_status   PROC    NEAR
                           301                             PUBLIC display_status
                           302                     
0058 55                    303                     PUSH BP
0059 8BEC                  304                     MOV BP, SP
005B 56                    305                     PUSH SI
005C 57                    306                     PUSH DI
005D 50                    307                     PUSH AX
005E 53                    308                     PUSH BX
005F 51                    309                     PUSH CX
0060 8B4E04                310                     MOV CX, [BP+4]
                           311             
0063 B008                  312                     MOV AL, statusStringLength
                           313                     ;XOR AH, AH
                           314                     ;XOR CH, CH
0065 F6E1                  315                     MUL CL
0067 68----90       R      316                     PUSH SEG(statuses)
006B 07                    317                     POP ES
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  15:20:14  05/04/:8  PAGE    7


LOC  OBJ                  LINE     SOURCE

006C BB740190       R      318                     MOV BX, OFFSET(statuses)
0070 03D8                  319                     ADD BX, AX
0072 8BF3                  320                     MOV SI, BX      
                           321                     
                           322                     
0074 B80400                323                     MOV AX, statusLength
0077 BB0000                324                     MOV BX, statusOffset
                           325                     
007A E8A400                326                     CALL DisplayStr
                           327                     
007D 59                    328                     POP CX
007E 5B                    329                     POP BX
007F 58                    330                     POP AX
0080 5F                    331                     POP DI
0081 5E                    332                     POP SI
0082 5D                    333                     POP BP
                           334                     
                           335                     
0083 C3                    336                     RET
                           337     display_status   ENDP
                           338     
                           339     ; display_time
                           340     ;
                           341     ; Description:       This procedure displays time in the dedicated spot on the LCD
                           342     ;
                           343     ; Operation:            
                           344     ;                       Uses DisplayStr
                           345     ; Arguments:         
                           346     ; Return Value:      None.
                           347     ;
                           348     ; Local Variables:   None.
                           349     ; Shared Variables:  None.
                           350     
                           351     ; Input:            None.
                           352     ; Output:            Displays time on LCD.
                           353     ;
                           354     ; Error Handling:    None.
                           355     ;
                           356     ; Algorithms:        None.
                           357     ; Data Structures:   None.
                           358     ;
                           359     ; Registers Changed: None
                           360     ; Stack Depth:       8 words
                           361     ;
                           362     ; Last Modified:     5-2-2008
0084                       363     display_time   PROC    NEAR
                           364                             PUBLIC display_time
0084 55                    365                     PUSH BP
0085 8BEC                  366                     MOV BP, SP
0087 56                    367                     PUSH SI
0088 57                    368                     PUSH DI
0089 50                    369                     PUSH AX
008A 53                    370                     PUSH BX
008B 51                    371                     PUSH CX
008C 52                    372                     PUSH DX
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  15:20:14  05/04/:8  PAGE    8


LOC  OBJ                  LINE     SOURCE

                           373                     
008D 8B4E04                374                     MOV CX, [BP+4]
0090 81F9FFFF              375                     CMP CX, TIME_NONE
0094 7477                  376                     JE timeNone
0096                       377     flag2:          
                           378                     ;time/tenthsOfSecPerMin = minutes R(tenthsOfSeconds)
0096 8BC1                  379                     MOV AX, CX
0098 B95802                380                     MOV CX, tenthsOfSecPerMin
009B 33D2                  381                     XOR DX, DX
009D F7F1                  382                     DIV CX
009F 8BCA                  383                     MOV CX, DX ;store remainder in CX
                           384                     ;minutes in AX, remainder (in tenths of seconds) in CX
                           385                     
                           386                     ;write minutes (in AX)
                           387                     ;minutes/10= tensOfMinutes R(minutes)
00A1 BB0A00                388                     MOV BX, ten
00A4 33D2                  389                     XOR DX, DX
00A6 F7F3                  390                     DIV BX
00A8 053000                391                     ADD AX, ASCIIDecCons  ;convert to ASCII
00AB 83C230                392                     ADD DX, ASCIIDecCons
00AE BB0000                393                     MOV BX, timeStringBufferMinutesOffset
00B1 88870000       R      394                     MOV timeStringBuffer[BX], AL
00B5 43                    395                     INC BX
00B6 88970000       R      396                     MOV timeStringBuffer[BX], DL
00BA 43                    397                     INC BX
                           398                     ;write colon
00BB C68700003A90   R      399                     MOV timeStringBuffer[BX], ASCIIcolon
00C1                       400     flag:                   
                           401                     ;previous remainder should be in CX
00C1 8BC1                  402                     MOV AX, CX
00C3 B90A00                403                     MOV CX, tenthsOfSecPerSec
00C6 33D2                  404                     XOR DX, DX
00C8 F7F1                  405                     DIV CX 
00CA 8BCA                  406                     MOV CX, DX ;store new remainder in CX
                           407                     ;seconds in AX, tenths of seconds in CX
                           408                     
                           409                     ;write seconds
00CC BB0A00                410                     MOV BX, ten
00CF 33D2                  411                     XOR DX, DX
00D1 F7F3                  412                     DIV BX
00D3 053000                413                     ADD AX, ASCIIDecCons  ;convert to ASCII
00D6 83C230                414                     ADD DX, ASCIIDecCons
00D9 BB0300                415                     MOV BX, timeStringBufferSecondsOffset
00DC 88870000       R      416                     MOV timeStringBuffer[BX], AL
00E0 43                    417                     INC BX          
00E1 88970000       R      418                     MOV timeStringBuffer[BX], DL
00E5 43                    419                     INC BX  
                           420                     ;write point
00E6 C68700002E90   R      421                     MOV timeStringBuffer[BX], ASCIIperiod
00EC 43                    422                     INC BX
                           423                     
                           424                     ;write tenths of seconds
00ED 83C130                425                     ADD CX, ASCIIDecCons
00F0 888F0000       R      426                     MOV timeStringBuffer[BX], CL
                           427                     ;write null at end
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  15:20:14  05/04/:8  PAGE    9


LOC  OBJ                  LINE     SOURCE

00F4 43                    428                     INC BX
00F5 C68700000090   R      429                     MOV timeStringBuffer[BX], null
                           430                     
                           431                     ;now call DisplayStr
00FB B80800                432                     MOV AX, timeLength
00FE BB0500                433                     MOV BX, timeOffset
0101 68----90       R      434                     PUSH SEG(timeStringBuffer)
0105 07                    435                     POP ES
0106 BE000090       R      436                     MOV SI, OFFSET(timeStringBuffer)
010A EB0A90                437                     JMP callGenericDisplay
010D                       438     timeNone:               
010D BB0000                439                     MOV BX, 0
0110 C68700000090   R      440                     MOV timeStringBuffer[BX], null
0116                       441     callGenericDisplay:             
0116 E80800                442                     CALL DisplayStr
                           443                     
0119 5A                    444                     POP DX
011A 59                    445                     POP CX
011B 5B                    446                     POP BX
011C 58                    447                     POP AX
011D 5F                    448                     POP DI
011E 5E                    449                     POP SI
011F 5D                    450                     POP BP
0120 C3                    451                     RET
                           452     display_time   ENDP
                           453     
                           454     ; DisplayStr
                           455     ;
                           456     ; Description:       This procedure is a generic display function. 
                           457     ;
                           458     ; Operation:        Displays string stored at ES:[SI] for specified length,
                           459     ;                               offset          
                           460     ;
                           461     ; Arguments:         string located at ES:[SI], length in AL, offset in BL
                           462     ; Return Value:      None.
                           463     ;
                           464     ; Local Variables:   None.
                           465     ; Shared Variables:  None.
                           466     
                           467     ; Input:            None.
                           468     ; Output:            Displays string on LCD.
                           469     ;
                           470     ; Error Handling:    None.
                           471     ;
                           472     ; Algorithms:        None.
                           473     ; Data Structures:   None.
                           474     ;
                           475     ; Registers Changed: None
                           476     ; Stack Depth:       5 words
                           477     ;
                           478     ; Last Modified:     5-2-2008
0121                       479     DisplayStr   PROC    NEAR
                           480                             PUBLIC DisplayStr
0121 56                    481                     PUSH SI
0122 50                    482                     PUSH AX
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  15:20:14  05/04/:8  PAGE   10


LOC  OBJ                  LINE     SOURCE

0123 53                    483                     PUSH BX
0124 51                    484                     PUSH CX
0125 52                    485                     PUSH DX
                           486                     
0126 8ACB                  487                     MOV CL, BL                      ;offset in CL
0128 8AD8                  488                     MOV BL, AL                      ;length in BL
                           489                     
012A E83800                490                     CALL readBusyFlag
012D BA0001                491                     MOV DX, displayAddressCMD       ;return cursor home
0130 B002                  492                     MOV AL, returnHome
0132 EE                    493                     OUT DX, AL
0133 E82F00                494                     CALL readBusyFlag
                           495                     
0136 80F900                496                     CMP CL, position0                                       ;shift cursor
                                    to desired offset
0139 740A                  497                     JE offsetDone
                           498                     ;MOV CL, BL
013B 32ED                  499                     XOR CH, CH
013D B014                  500                     MOV AL, cursorRight
013F                       501     getToOffset:
013F EE                    502                     OUT DX, AL
0140 E82200                503                     CALL readBusyFlag
0143 E2FA                  504                     LOOP getToOffset
                           505     
0145                       506     offsetDone:                                                     ;cursor is now at des
                                   ired offset
0145 8ACB                  507                     MOV CL, BL                                      ;length in CL
0147 32ED                  508                     XOR CH, CH
0149 BA0101                509                     MOV DX, displayAddressDAT
                           510                     
014C                       511     displayLoop:                                            ;print a character, decrement
                                    length count
014C 268A04                512                     MOV AL, ES:[SI]
014F 3C00                  513                     CMP AL, STRINGNULL
0151 7404                  514                     JE stringIsNull
                           515                     ;JNE string not null
0153 46                    516                     INC SI
0154 EB0390                517                     JMP endDisplayLoop
0157                       518     stringIsNull:
0157 B020                  519                     MOV AL, blankSpace
0159                       520     endDisplayLoop:         
0159 EE                    521                     OUT DX,AL
015A E80800                522                     CALL readBusyFlag
015D E2ED                  523                     LOOP displayLoop
                           524                     
015F 5A                    525                     POP DX
0160 59                    526                     POP CX
0161 5B                    527                     POP BX
0162 58                    528                     POP AX
0163 5E                    529                     POP SI
0164 C3                    530                     RET
                           531     DisplayStr   ENDP
                           532     
                           533     
0165                       534     readBusyFlag   PROC    NEAR
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  15:20:14  05/04/:8  PAGE   11


LOC  OBJ                  LINE     SOURCE

                           535                             PUBLIC readBusyFlag
                           536                     
0165 50                    537                     PUSH AX
0166 52                    538                     PUSH DX
                           539                     
0167                       540     checkBusy:              
0167 BA0001                541                     MOV DX, displayAddressCMD
016A EC                    542                     IN AL, DX
016B 2480                  543                     AND AL, busyFlagMask
016D 3C80                  544                     CMP AL, LCDbusy
016F 74F6                  545                     JE checkBusy
                           546                     
0171 5A                    547                     POP DX
0172 58                    548                     POP AX
                           549                     
0173 C3                    550                     RET
                           551     readBusyFlag   ENDP
                           552     
                           553     
                           554     ;array of status strings
0174                       555     statuses  LABEL BYTE
                           556                     
0174 504C4159206C3E        557                     DB 'PLAY l>',0
017B 00
017C 46465744203E3E        558                     DB 'FFWD >>',0
0183 00
0184 52574420203C3C        559                     DB 'RWD  <<',0
018B 00
018C 49444C45202E2E        560                     DB 'IDLE ..',0
0193 00
0194 494C4C4547414C        561                     DB 'ILLEGAL',0
019B 00
                           562     
                           563     
----                       564     CODE ENDS
                           565     ;the data segment
                           566     
----                       567     DATA    SEGMENT PUBLIC  'DATA'
0000 (8                    568     timeStringBuffer DB timeLength DUP(?)
     ??
     )
----                       569     DATA    ENDS
                           570     
                           571     
                           572     
                           573     
                           574             END     

ASSEMBLY COMPLETE, NO ERRORS FOUND
