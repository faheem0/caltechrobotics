8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  07:19:15  06/01/:8  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE DISPLAY
OBJECT MODULE PLACED IN DISPLAY.OBJ
ASSEMBLER INVOKED BY:  C:\ASMSTU~1\ASM86.EXE DISPLAY.ASM M1 DB EP


LOC  OBJ                  LINE     SOURCE

                             1            NAME  display
                             2     
                             3     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             4     ;                                                                            ;
                             5     ;                                    Display                              ;
                             6     ;                           Display Functions                         ;
                             7     ;                                                                            ;
                             8     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             9     
                            10     ; Description:      This program contains the functions to
                            11     ;                       display 
                            12     ;
                            13     ; Input:            None.
                            14     ; Output:           40 Character LCD
                            15     ; User Interface:   call functions:
                            16     ;                               display_time(word)
                            17     ;                               display_status(word)
                            18     ;                               display_title(byte)
                            19     ;                               display_artist(byte)
                            20     ; Error Handling:   None.
                            21     ;
                            22     ; Algorithms:       None.
                            23     ; Data Structures:  None.
                            24     ;
                            25     ; Revision History:
                            26     ;     5/2/08  Samuel Yang     file started
                            27     ;     5/3/08  Samuel Yang       functions tested, working, comments updated
                            28     CGROUP GROUP CODE
                            29     DGROUP GROUP DATA
                            30     
                            31     ; local include files
                            32 +1  $INCLUDE(display.INC)
                      =1    33     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    34     ;                                                                            ;
                      =1    35     ;                                  display.INC                               ;
                      =1    36     ;                                  Display                                   ;
                      =1    37     ;                                 Include File                               ;
                      =1    38     ;                                                                            ;
                      =1    39     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    40     
                      =1    41     ; This file contains the definitions for the Display program (display.ASM).
                      =1    42     ;
                      =1    43     ; Revision History:
                      =1    44     
                      =1    45     ;     5/2/2008 Samuel Yang     
                      =1    46     
                      =1    47     
  0100                =1    48     displayAddressCMD   EQU     00100H           ;display address for commands
  0101                =1    49     displayAddressDAT   EQU     00101H           ;display address for data
                      =1    50     
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  07:19:15  06/01/:8  PAGE    2


LOC  OBJ                  LINE     SOURCE

                      =1    51     ;LCD commands-send to displayAddressCMD
  003C                =1    52     functionSet          EQU 3CH                                    ;8 bit, 2 line, 5x7 d
                                   ots
  0001                =1    53     clearScreen                     EQU 01H                                         ;clea
                                   rs screen
  0006                =1    54     entryModeSet            EQU 06H                                         ;shift cursor
                                    right
  000C                =1    55     displayOnOffCtrl        EQU 0CH                                         ;display on, 
                                   cursor off
                      =1    56     
  0010                =1    57     cursorLeft                      EQU 10H                                         ;shif
                                   ts cursor left one
  0014                =1    58     cursorRight                     EQU 14H                                         ;shif
                                   ts cursor right one
  0002                =1    59     returnHome                      EQU 02H                                         ;
                      =1    60     
                      =1    61     ;display format constants
  0000                =1    62     statusOffset EQU 0
  0004                =1    63     statusLength EQU 4
  0005                =1    64     timeOffset EQU 5
  0008                =1    65     timeLength EQU 8
  000E                =1    66     titleOffset EQU 14
  001A                =1    67     titleLength EQU 26
  0028                =1    68     artistOffset EQU 40
  0028                =1    69     artistLength EQU 40
                      =1    70     
                      =1    71     
                      =1    72     
                      =1    73     
                      =1    74     
                      =1    75     
                      =1    76     ;time conversion constants
  0258                =1    77     tenthsOfSecPerMin EQU 600
  000A                =1    78     tenthsOfSecPerSec EQU 10
  000A                =1    79     ten EQU 10
  0030                =1    80     ASCIIDecCons EQU 48
  003A                =1    81     ASCIIcolon EQU 58
  002E                =1    82     ASCIIperiod EQU 46
  0000                =1    83     timeStringBufferMinutesOffset EQU 0
  0003                =1    84     timeStringBufferSecondsOffset EQU 3
  0000                =1    85     null EQU 0
  FFFF                =1    86     TIME_NONE EQU 65535 ;IS THIS RIGHT????
                      =1    87     
                      =1    88     
                      =1    89     ;other constants
  0028                =1    90     CHARSPERROW    EQU 40                                                   ;40 character
                                    display
  0000                =1    91     position0          EQU 0                                                        ;0 po
                                   sition on display
  0000                =1    92     STRINGNULL              EQU 0
  0080                =1    93     busyFlagMask    EQU 80h
  0080                =1    94     LCDbusy         EQU 80h
  0008                =1    95     statusStringLength EQU 8
  0020                =1    96     blankSpace EQU 32
                            97 +1  $INCLUDE(boolean.INC)
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  07:19:15  06/01/:8  PAGE    3


LOC  OBJ                  LINE     SOURCE

                      =1    98     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    99     ;                                                                            ;
                      =1   100     ;                                  boolean.INC                               ;
                      =1   101     ;                             Boolean Definitions                            ;
                      =1   102     ;                                 Include File                               ;
                      =1   103     ;                                                                            ;
                      =1   104     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1   105     
                      =1   106     ; This file contains the boolean definitions for the 80188 MP3 Player.
                      =1   107     ;
                      =1   108     ; Revision History:
                      =1   109     
                      =1   110     ;     5/2/2008 Samuel Yang     
                      =1   111     
                      =1   112     
  0001                =1   113     TRUE EQU 1h
  0000                =1   114     FALSE EQU 0h
                           115     
                           116     
----                       117     CODE SEGMENT PUBLIC 'CODE'
                           118     
                           119             ASSUME  CS:CGROUP, DS:DGROUP
                           120     
                           121     
                           122     
                           123     
                           124     
                           125     ; InitDisplay
                           126     ;
                           127     ; Description:       This procedure initializes everything for display
                           128     ;
                           129     ; Operation:        Sends initialization bytes to LCD
                           130     ;
                           131     ; Arguments:         None.
                           132     ; Return Value:      None.
                           133     ;
                           134     ; Local Variables:   None.
                           135     ; Shared Variables:  None.
                           136     
                           137     ; Input:            None.
                           138     ; Output:            Initializes LCD.
                           139     ;
                           140     ; Error Handling:    None.
                           141     ;
                           142     ; Algorithms:        None.
                           143     ; Data Structures:   None.
                           144     ;
                           145     ; Registers Changed: None
                           146     ; Stack Depth:       2 words
                           147     ;
                           148     ; Last Modified:     5-2-2008
0000                       149     InitDisplay   PROC    NEAR
                           150                             PUBLIC InitDisplay
0000 50                    151                             PUSH AX
0001 52                    152                             PUSH DX
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  07:19:15  06/01/:8  PAGE    4


LOC  OBJ                  LINE     SOURCE

                           153                             
0002 BA0001                154                             MOV DX, displayAddressCMD
0005 B03C                  155                             MOV AL, functionSet
0007 EE                    156                             OUT DX, AL
0008 E85A01                157                             CALL readBusyFlag
000B B001                  158                             MOV AL, clearScreen
000D EE                    159                             OUT DX, AL
000E E85401                160                             CALL readBusyFlag
0011 B006                  161                             MOV AL, entryModeSet
0013 EE                    162                             OUT DX, AL
0014 E84E01                163                             CALL readBusyFlag
0017 B00C                  164                             MOV AL, displayOnOffCtrl
0019 EE                    165                             OUT DX, AL
001A E84801                166                             CALL readBusyFlag
                           167                             
001D 5A                    168                             POP DX
001E 58                    169                             POP AX
001F C3                    170                             RET
                           171     InitDisplay   ENDP
                           172     
                           173     
                           174     ; display_title
                           175     ;
                           176     ; Description:       This procedure displays title in the dedicated spot on the LCD
                           177     ;
                           178     ; Operation:        Uses DisplayStr
                           179     ; Arguments:         segment and offset of string on stack, stored in ES, SI
                           180     ; Return Value:      None.
                           181     ;
                           182     ; Local Variables:   None.
                           183     ; Shared Variables:  None.
                           184     
                           185     ; Input:            None.
                           186     ; Output:            Displays title on LCD.
                           187     ;
                           188     ; Error Handling:    None.
                           189     ;
                           190     ; Algorithms:        None.
                           191     ; Data Structures:   None.
                           192     ;
                           193     ; Registers Changed: None
                           194     ; Stack Depth:       7 words
                           195     ;
                           196     ; Last Modified:     5-2-2008
0020                       197     display_title   PROC    NEAR
                           198                             PUBLIC display_title
                           199                     
0020 55                    200                     PUSH BP
0021 8BEC                  201                     MOV BP, SP
0023 56                    202                     PUSH SI
0024 57                    203                     PUSH DI
0025 50                    204                     PUSH AX
0026 53                    205                     PUSH BX
0027 8B7604                206                     MOV SI, [BP+4]
002A 8E4606                207                     MOV ES, [BP+6]
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  07:19:15  06/01/:8  PAGE    5


LOC  OBJ                  LINE     SOURCE

                           208                     
002D B81A00                209                     MOV AX, titleLength
0030 BB0E00                210                     MOV BX, titleOffset
                           211                     
0033 E8EB00                212                     CALL DisplayStr
                           213                     
0036 5B                    214                     POP BX
0037 58                    215                     POP AX
0038 5F                    216                     POP DI
0039 5E                    217                     POP SI
003A 5D                    218                     POP BP
                           219                     
                           220                     
003B C3                    221                     RET
                           222     display_title   ENDP
                           223     
                           224     ; display_artist
                           225     ;
                           226     ; Description:       This procedure displays artist in the dedicated spot on the LCD
                           227     ;
                           228     ; Operation:        Uses DisplayStr
                           229     ; Arguments:          segment and offset of string on stack, stored in ES, SI
                           230     ; Return Value:      None.
                           231     ;
                           232     ; Local Variables:   None.
                           233     ; Shared Variables:  None.
                           234     
                           235     ; Input:            None.
                           236     ; Output:            Displays artist on LCD.
                           237     ;
                           238     ; Error Handling:    None.
                           239     ;
                           240     ; Algorithms:        None.
                           241     ; Data Structures:   None.
                           242     ;
                           243     ; Registers Changed: None
                           244     ; Stack Depth:       7 words
                           245     ;
                           246     ; Last Modified:     5-3-2008
003C                       247     display_artist   PROC    NEAR
                           248                             PUBLIC display_artist
                           249                     
003C 55                    250                     PUSH BP
003D 8BEC                  251                     MOV BP, SP
003F 56                    252                     PUSH SI
0040 57                    253                     PUSH DI
0041 50                    254                     PUSH AX
0042 53                    255                     PUSH BX
0043 8B7604                256                     MOV SI, [BP+4]
0046 8E4606                257                     MOV ES, [BP+6]
                           258                     
0049 B82800                259                     MOV AX, artistLength
004C BB2800                260                     MOV BX, artistOffset
                           261                     
004F E8CF00                262                     CALL DisplayStr
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  07:19:15  06/01/:8  PAGE    6


LOC  OBJ                  LINE     SOURCE

                           263                     
0052 5B                    264                     POP BX
0053 58                    265                     POP AX
0054 5F                    266                     POP DI
0055 5E                    267                     POP SI
0056 5D                    268                     POP BP
                           269                     
                           270                     
0057 C3                    271                     RET
                           272     display_artist   ENDP
                           273     
                           274     ; display_status
                           275     ;
                           276     ; Description:       This procedure displays status in the dedicated spot on the LCD
                           277     ;
                           278     ; Operation:       Looks up predefined status strings from "statuses" table     
                           279     ;                       Uses DisplayStr to display the looked up status string.
                           280     ; Arguments:   Status code (byte) from stack, stored in CX   
                           281     ; Return Value:      None.
                           282     ;
                           283     ; Local Variables:   None.
                           284     ; Shared Variables:  None.
                           285     
                           286     ; Input:            None.
                           287     ; Output:            Displays status on LCD.
                           288     ;
                           289     ; Error Handling:    None.
                           290     ;
                           291     ; Algorithms:        None.
                           292     ; Data Structures:   None.
                           293     ;
                           294     ; Registers Changed: None
                           295     ; Stack Depth:       7 words
                           296     ;
                           297     ; Last Modified:     5-2-2008
0058                       298     display_status   PROC    NEAR
                           299                             PUBLIC display_status
                           300                     
0058 55                    301                     PUSH BP
0059 8BEC                  302                     MOV BP, SP
005B 56                    303                     PUSH SI
005C 57                    304                     PUSH DI
005D 50                    305                     PUSH AX
005E 53                    306                     PUSH BX
005F 51                    307                     PUSH CX
0060 8B4E04                308                     MOV CX, [BP+4]
                           309             
                           310                     ;offset = statusStringLength*status
0063 B008                  311                     MOV AL, statusStringLength  ;calculate the offset of the desired pred
                                   efined status message
0065 F6E1                  312                     MUL CL
                           313                     
0067 68----90       R      314                     PUSH SEG(statuses)      ;Use ES:[SI] to point to the predefined statu
                                   s message
006B 07                    315                     POP ES
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  07:19:15  06/01/:8  PAGE    7


LOC  OBJ                  LINE     SOURCE

006C BB740190       R      316                     MOV BX, OFFSET(statuses)
0070 03D8                  317                     ADD BX, AX
0072 8BF3                  318                     MOV SI, BX      
                           319                     
                           320                     
0074 B80400                321                     MOV AX, statusLength
0077 BB0000                322                     MOV BX, statusOffset
                           323                     
007A E8A400                324                     CALL DisplayStr
                           325                     
007D 59                    326                     POP CX
007E 5B                    327                     POP BX
007F 58                    328                     POP AX
0080 5F                    329                     POP DI
0081 5E                    330                     POP SI
0082 5D                    331                     POP BP
                           332                     
                           333                     
0083 C3                    334                     RET
                           335     display_status   ENDP
                           336     
                           337     ; display_time
                           338     ;
                           339     ; Description:       This procedure displays time in the dedicated spot on the LCD
                           340     ;
                           341     ; Operation:     Divides time into minutes, seconds, and tenths of seconds, writing e
                                   ach
                           342     ;                       to a temporary buffer, which is passed to DisplayStr.
                           343     ; Arguments:         time in tenths of seconds on the stack, stored in CX
                           344     ; Return Value:      None.
                           345     ;
                           346     ; Local Variables:   None.
                           347     ; Shared Variables:  None.
                           348     
                           349     ; Input:            None.
                           350     ; Output:            Displays time on LCD.
                           351     ;
                           352     ; Error Handling:    None.
                           353     ;
                           354     ; Algorithms:        None.
                           355     ; Data Structures:   Uses timeStringBuffer[] to temporarily store time string
                           356     ;
                           357     ; Registers Changed: None
                           358     ; Stack Depth:       8 words
                           359     ;
                           360     ; Last Modified:     5-3-2008
0084                       361     display_time   PROC    NEAR
                           362                             PUBLIC display_time
0084 55                    363                     PUSH BP
0085 8BEC                  364                     MOV BP, SP
0087 56                    365                     PUSH SI
0088 57                    366                     PUSH DI
0089 50                    367                     PUSH AX
008A 53                    368                     PUSH BX
008B 51                    369                     PUSH CX
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  07:19:15  06/01/:8  PAGE    8


LOC  OBJ                  LINE     SOURCE

008C 52                    370                     PUSH DX
                           371                     
008D 8B4E04                372                     MOV CX, [BP+4] ;retreive time given in tenths of seconds
0090 81F9FFFF              373                     CMP CX, TIME_NONE
0094 7477                  374                     JE timeNone
                           375             
                           376                     ;time/tenthsOfSecPerMin = minutes R(tenthsOfSeconds)
0096 8BC1                  377                     MOV AX, CX
0098 B95802                378                     MOV CX, tenthsOfSecPerMin
009B 33D2                  379                     XOR DX, DX
009D F7F1                  380                     DIV CX
009F 8BCA                  381                     MOV CX, DX ;store remainder in CX
                           382                     ;minutes in AX, remainder (in tenths of seconds) in CX
                           383                     
                           384                     ;write minutes (in AX)
                           385                     ;minutes/10= tensOfMinutes R(minutes)
00A1 BB0A00                386                     MOV BX, ten
00A4 33D2                  387                     XOR DX, DX
00A6 F7F3                  388                     DIV BX
00A8 053000                389                     ADD AX, ASCIIDecCons  ;convert to ASCII
00AB 83C230                390                     ADD DX, ASCIIDecCons
00AE BB0000                391                     MOV BX, timeStringBufferMinutesOffset ;get index of minutes
00B1 88870000       R      392                     MOV timeStringBuffer[BX], AL            ;write minutes to buffer to b
                                   e printed
00B5 43                    393                     INC BX
00B6 88970000       R      394                     MOV timeStringBuffer[BX], DL
00BA 43                    395                     INC BX
                           396                     ;write colon
00BB C68700003A90   R      397                     MOV timeStringBuffer[BX], ASCIIcolon
                           398                     
                           399                     ;previous remainder(in tenths of seconds) should be in CX
00C1 8BC1                  400                     MOV AX, CX
00C3 B90A00                401                     MOV CX, tenthsOfSecPerSec
00C6 33D2                  402                     XOR DX, DX
00C8 F7F1                  403                     DIV CX 
00CA 8BCA                  404                     MOV CX, DX ;store new remainder in CX
                           405                     ;seconds in AX, tenths of seconds in CX
                           406                     
                           407                     ;write seconds
00CC BB0A00                408                     MOV BX, ten
00CF 33D2                  409                     XOR DX, DX
00D1 F7F3                  410                     DIV BX
00D3 053000                411                     ADD AX, ASCIIDecCons  ;convert to ASCII
00D6 83C230                412                     ADD DX, ASCIIDecCons
00D9 BB0300                413                     MOV BX, timeStringBufferSecondsOffset ;get index of seconds
00DC 88870000       R      414                     MOV timeStringBuffer[BX], AL
00E0 43                    415                     INC BX          
00E1 88970000       R      416                     MOV timeStringBuffer[BX], DL
00E5 43                    417                     INC BX  
                           418                     ;write period
00E6 C68700002E90   R      419                     MOV timeStringBuffer[BX], ASCIIperiod
00EC 43                    420                     INC BX
                           421                     
                           422                     ;write tenths of seconds
00ED 83C130                423                     ADD CX, ASCIIDecCons
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  07:19:15  06/01/:8  PAGE    9


LOC  OBJ                  LINE     SOURCE

00F0 888F0000       R      424                     MOV timeStringBuffer[BX], CL
                           425                     ;write null at end
00F4 43                    426                     INC BX
00F5 C68700000090   R      427                     MOV timeStringBuffer[BX], null
                           428                     
                           429                     ;now call DisplayStr, passing it hte buffer
00FB B80800                430                     MOV AX, timeLength
00FE BB0500                431                     MOV BX, timeOffset
0101 68----90       R      432                     PUSH SEG(timeStringBuffer)
0105 07                    433                     POP ES
0106 BE000090       R      434                     MOV SI, OFFSET(timeStringBuffer)
010A EB0A90                435                     JMP callGenericDisplay
010D                       436     timeNone:               
010D BB0000                437                     MOV BX, 0                               ;if TIME_NONE, then print bla
                                   nk spaces
0110 C68700000090   R      438                     MOV timeStringBuffer[BX], null
0116                       439     callGenericDisplay:             
0116 E80800                440                     CALL DisplayStr
                           441                     
0119 5A                    442                     POP DX
011A 59                    443                     POP CX
011B 5B                    444                     POP BX
011C 58                    445                     POP AX
011D 5F                    446                     POP DI
011E 5E                    447                     POP SI
011F 5D                    448                     POP BP
0120 C3                    449                     RET
                           450     display_time   ENDP
                           451     
                           452     ; DisplayStr
                           453     ;
                           454     ; Description:       This procedure is a generic display function. 
                           455     ;
                           456     ; Operation:        Displays string stored at ES:[SI] for specified length,
                           457     ;                               offset          
                           458     ;
                           459     ; Arguments:         string located at ES:[SI], length in AL, offset in BL
                           460     ; Return Value:      None.
                           461     ;
                           462     ; Local Variables:   None.
                           463     ; Shared Variables:  None.
                           464     
                           465     ; Input:            None.
                           466     ; Output:            Displays string on LCD.
                           467     ;
                           468     ; Error Handling:    If string is shorter than length, will display blank spaces afte
                                   rwards.
                           469     ;
                           470     ; Algorithms:        None.
                           471     ; Data Structures:   None.
                           472     ;
                           473     ; Registers Changed: None
                           474     ; Stack Depth:       5 words
                           475     ;
                           476     ; Last Modified:     5-2-2008
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  07:19:15  06/01/:8  PAGE   10


LOC  OBJ                  LINE     SOURCE

0121                       477     DisplayStr   PROC    NEAR
                           478                             PUBLIC DisplayStr
0121 56                    479                     PUSH SI
0122 50                    480                     PUSH AX
0123 53                    481                     PUSH BX
0124 51                    482                     PUSH CX
0125 52                    483                     PUSH DX
                           484                     
0126 8ACB                  485                     MOV CL, BL                      ;store offset in CL
0128 8AD8                  486                     MOV BL, AL                      ;store length in BL
                           487                     
012A E83800                488                     CALL readBusyFlag
012D BA0001                489                     MOV DX, displayAddressCMD       ;return cursor home
0130 B002                  490                     MOV AL, returnHome
0132 EE                    491                     OUT DX, AL
0133 E82F00                492                     CALL readBusyFlag
                           493                     
0136 80F900                494                     CMP CL, position0                                       ;shift cursor
                                    to desired offset
0139 740A                  495                     JE offsetDone
013B 32ED                  496                     XOR CH, CH
013D B014                  497                     MOV AL, cursorRight
013F                       498     getToOffset:
013F EE                    499                     OUT DX, AL
0140 E82200                500                     CALL readBusyFlag
0143 E2FA                  501                     LOOP getToOffset
                           502     
0145                       503     offsetDone:                                                     ;cursor is now at des
                                   ired offset
0145 8ACB                  504                     MOV CL, BL                                      ;store length in CL
0147 32ED                  505                     XOR CH, CH
0149 BA0101                506                     MOV DX, displayAddressDAT
                           507                     
014C                       508     displayLoop:                                            ;print a character, decrement
                                    length count
014C 268A04                509                     MOV AL, ES:[SI]
014F 3C00                  510                     CMP AL, STRINGNULL
0151 7404                  511                     JE stringIsNull
                           512                     ;JNE string not null
0153 46                    513                     INC SI                                  
0154 EB0390                514                     JMP endDisplayLoop
0157                       515     stringIsNull:                           ;if string is null,  don't increment SI, so s
                                   tring will
0157 B020                  516                     MOV AL, blankSpace              ;continue reading null and blank spac
                                   es will be added
0159                       517     endDisplayLoop:         
0159 EE                    518                     OUT DX,AL
015A E80800                519                     CALL readBusyFlag
015D E2ED                  520                     LOOP displayLoop
                           521                     
015F 5A                    522                     POP DX
0160 59                    523                     POP CX
0161 5B                    524                     POP BX
0162 58                    525                     POP AX
0163 5E                    526                     POP SI
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  07:19:15  06/01/:8  PAGE   11


LOC  OBJ                  LINE     SOURCE

0164 C3                    527                     RET
                           528     DisplayStr   ENDP
                           529     
                           530     ; readBusyFlag
                           531     ;
                           532     ; Description:       This procedure blocks until LCD is no longer busy.
                           533     ;
                           534     ; Operation:       Keeps reading busy flag until LCD is not busy.               
                           535     ;
                           536     ; Arguments:         None.
                           537     ; Return Value:      None.
                           538     ;
                           539     ; Local Variables:   None.
                           540     ; Shared Variables:  None.
                           541     
                           542     ; Input:            From LCD busy flag
                           543     ; Output:           None.
                           544     ;
                           545     ; Error Handling:    Blocking function.
                           546     ;
                           547     ; Algorithms:        None.
                           548     ; Data Structures:   None.
                           549     ;
                           550     ; Registers Changed: None
                           551     ; Stack Depth:       2 words
                           552     ;
                           553     ; Last Modified:     5-2-2008
0165                       554     readBusyFlag   PROC    NEAR
                           555                             PUBLIC readBusyFlag
                           556                     
0165 50                    557                     PUSH AX
0166 52                    558                     PUSH DX
                           559                     
0167                       560     checkBusy:              
0167 BA0001                561                     MOV DX, displayAddressCMD
016A EC                    562                     IN AL, DX
016B 2480                  563                     AND AL, busyFlagMask
016D 3C80                  564                     CMP AL, LCDbusy
016F 74F6                  565                     JE checkBusy
                           566                     
0171 5A                    567                     POP DX
0172 58                    568                     POP AX
                           569                     
0173 C3                    570                     RET
                           571     readBusyFlag   ENDP
                           572     
                           573     
                           574     ;array of status strings (predefined constants)
0174                       575     statuses  LABEL BYTE
                           576                     
0174 504C4159206C3E        577                     DB 'PLAY l>',0
017B 00
017C 46465744203E3E        578                     DB 'FFWD >>',0
0183 00
0184 52574420203C3C        579                     DB 'RWD  <<',0
8086/87/88/186 MACRO ASSEMBLER    DISPLAY                                                  07:19:15  06/01/:8  PAGE   12


LOC  OBJ                  LINE     SOURCE

018B 00
018C 49444C45202E2E        580                     DB 'IDLE ..',0
0193 00
0194 494C4C4547414C        581                     DB 'ILLEGAL',0
019B 00
                           582     
                           583     
----                       584     CODE ENDS
                           585     
                           586     
----                       587     DATA    SEGMENT PUBLIC  'DATA'
0000 (8                    588     timeStringBuffer DB timeLength DUP(?)
     ??
     )
----                       589     DATA    ENDS
                           590     
                           591     
                           592     
                           593     
                           594             END     

ASSEMBLY COMPLETE, NO ERRORS FOUND
