8086/87/88/186 MACRO ASSEMBLER    CONVERTS                                                 12:49:54  05/04/:8  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE CONVERTS
OBJECT MODULE PLACED IN CONVERTS.OBJ
ASSEMBLER INVOKED BY:  C:\USERS\SAM\DOCUME~1\CALTECH\SPRING~1\EECS52\CODE\ASM86.EXE CONVERTS.ASM DB M1 EP


LOC  OBJ                  LINE     SOURCE

                             1             NAME    CONVERTS
                             2     
                             3     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             4     ;                                                                            ;
                             5     ;                                   CONVERTS                                 ;
                             6     ;                             Conversion Functions                           ;
                             7     ;                                   EE/CS 51                                 ;
                             8     ;                                                                            ;
                             9     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                            10     
                            11     
                            12     ; file description including table of contents
                            13     ;
                            14     ; Revision History:
                            15     ;     1/26/06  Glen George      initial revision
                            16     ;     1/29/08 Samuel Yang       started programming
                            17     ;     1/30/08 Samuel Yang       written, compiles, untested
                            18     ;     1/31/08 Samuel Yang             works
                            19     ;     2/17/08 Samuel Yang       PUSH/POP added so registers unchanged
                            20     
                            21     ; Known bugs: None
                            22     
                            23     
                            24     CGROUP  GROUP   CODE
                            25     
                            26     
----                        27     CODE    SEGMENT PUBLIC 'CODE'
                            28     
                            29     
                            30             ASSUME  CS:CGROUP
                            31     
                            32     
                            33     
                            34     
                            35     ; Dec2String
                            36     ;
                            37     ; Description: Receives a 16-bit signed value to be converted to decimal and stored a
                                   s a 
                            38     ;                       string (pads 0's for 5 digits, and '-' sign, if negative)
                            39     ; Operation:
                            40     ;
                            41     ; Arguments: AX, a 16-bit unsigned number
                            42     ; Return Value: writes a string containing dec representation of AX in ASCII starting
                                    at DS:SI
                            43     ; Local Variables: None
                            44     ; Shared Variables: None
                            45     ; Global Variables: None
                            46     ;
                            47     ; Input: AX
                            48     ; Output: memory written
8086/87/88/186 MACRO ASSEMBLER    CONVERTS                                                 12:49:54  05/04/:8  PAGE    2


LOC  OBJ                  LINE     SOURCE

                            49     ;
                            50     ; Error Handling: if AX=0, returns NULL string
                            51     ;
                            52     ; Algorithms: None
                            53     ; Data Structures: None
                            54     ;
                            55     ; Registers Changed: AX, BX, CX, DX, SI, DI
                            56     ; Stack Depth: None
                            57     ;
                            58     ; Author: Samuel Yang
                            59     ; Last Modified: 2-17-2008
                            60     
                            61     
0000                        62     Dec2String      PROC        NEAR
                            63                     PUBLIC      Dec2String
0000 50                     64                     PUSH AX
0001 53                     65                                     PUSH BX
0002 51                     66                                     PUSH CX
0003 52                     67                                     PUSH DX
0004 56                     68                                     PUSH SI
0005 57                     69                                     PUSH DI
                            70     ;------------------------------------------------------------------------------------
                                   --------
                            71                    ; JMP allTestsGood
0006 8BFE                   72                     MOV DI, SI                    ;saves SI in DI
                            73                                   
                            74                   ;addSign                
0008 3D0000                 75                     CMP AX, 0                     ;IF AX >=0 THEN no need to add sign
000B 7D0B                   76                     JGE padZero
                            77                                                   ;ELSE, add '-' and convert AX to unsign
                                   ed
000D BA2D00                 78                     MOV DX, 45                             
0010 8814                   79                     MOV DS:[SI], DL                  ;ASCII value for '-'
0012 46                     80                     INC SI
                            81                    
                            82                                 
0013 F7D8                   83                     NEG AX                        ;AX is now UNSIGNED    
0015 EB0490                 84                     JMP signDone
                            85                     
0018                        86     padZero:                            
0018 BA3000                 87                     MOV DX, 48               
                            88                     ;MOV DS:[SI], DL                  ;ASCII value for '0'
                            89                     ;INC SI
001B                        90     signDone:               
001B B90500                 91                     MOV CX, 5
                            92                     
001E                        93     forLoop1:         ;loops 5 times, pads 0's
                            94                     
                            95                     
                            96                     
001E BB0A00                 97                     MOV BX, 10
0021 33D2                   98                                     XOR DX, DX                     ;AX=AX/10
0023 F7F3                   99                     DIV BX                        ;AX=quotient, DX= remainder
                           100                           
0025 83C230                101                     ADD DX, 48                  ;convert DX to ASCII digit
8086/87/88/186 MACRO ASSEMBLER    CONVERTS                                                 12:49:54  05/04/:8  PAGE    3


LOC  OBJ                  LINE     SOURCE

                           102                     
0028 8BD9                  103                     MOV BX, CX   ;write to [SI+CX-1]
002A 03DE                  104                     ADD BX, SI
002C 4B                    105                     DEC BX
002D 8817                  106                     MOV DS:[BX], DL                  ;WRITE VALUE HERE             
                           107                     
                           108                     
002F E2ED                  109                     LOOP forLoop1     ;LOOP        
                           110                     
                           111     
                           112               
                           113      
0031 BA0000                114                     MOV DX, 0
0034 885405                115                     MOV DS:[SI+5], DL                  ;terminate string with null
                           116                     
                           117                    
0037 8BF7                  118                     MOV SI, DI                    ;put SI value back in
                           119     ;------------------------------------------------------------------------------------
                                   --------
                           120     
                           121             
0039 5F                    122             POP DI
003A 5E                    123             POP SI
003B 5A                    124             POP DX
003C 59                    125             POP CX
003D 5B                    126             POP BX
003E 58                    127             POP AX
                           128     
003F C3                    129             RET
                           130     Dec2String      ENDP
                           131     
                           132     
                           133     
                           134     
                           135     ; Hex2String
                           136     ;
                           137     ; Description: Receives a 16-bit unsigned value to be converted to hex 
                           138     ;                       and stored as a string (no 0 padding)
                           139     ; Operation:
                           140     ;
                           141     ; Arguments: AX, a 16-bit unsigned number
                           142     ; Return Value: writes a string starting at DS:SI
                           143     ;
                           144     ; Local Variables: None.
                           145     ; Shared Variables: None.
                           146     ; Global Variables: None.
                           147     ;
                           148     ; Input: AX
                           149     ; Output: memory written
                           150     ;
                           151     ; Error Handling: If AX = 0, returns null string
                           152     ;
                           153     ; Algorithms: None
                           154     ; Data Structures: None
                           155     ;
8086/87/88/186 MACRO ASSEMBLER    CONVERTS                                                 12:49:54  05/04/:8  PAGE    4


LOC  OBJ                  LINE     SOURCE

                           156     ; Registers Changed: AX, BX, CX, DX, SI, DI
                           157     ; Stack Depth: None
                           158     ;
                           159     ; Author: Samuel Yang
                           160     ; Last Modified: 2-17-2008
                           161     
                           162     
0040                       163     Hex2String      PROC        NEAR
                           164                     PUBLIC      Hex2String
                           165                     
                           166     ;------------------------------------------------------------------------------------
                                   -------- 
                           167                      ;SI is never modified
                           168                     
0040 50                    169                                     PUSH AX
0041 53                    170                                     PUSH BX
0042 51                    171                                     PUSH CX
0043 52                    172                                     PUSH DX
0044 56                    173                                     PUSH SI
0045 57                    174                                     PUSH DI
                           175      
0046 B90400                176                     MOV CX, 4
0049                       177     forLoop2:                
                           178                     
                           179                     
0049 8BD0                  180                     MOV DX, AX                    ;DX=(AX & 000F)
004B 81E20F00              181                     AND DX, 0Fh
004F C1E804                182                     SHR AX, 4      
                           183                                             ;convertToASCII
0052 83FA09                184                     CMP DX, 9
0055 7E06                  185                     JLE ASCIInum            ;if DX is a number    
                           186                     
0057 83C237                187                     ADD DX, 55              ;DX is a letter
005A EB0490                188                     JMP writeDigit                
                           189      
005D                       190     ASCIInum:
005D 83C230                191                     ADD DX, 48
0060                       192     writeDigit:       
0060 8BDE                  193                     MOV BX, SI            ;write to [SI+CX-1]
0062 03D9                  194                     ADD BX, CX
0064 4B                    195                     DEC BX 
0065 8817                  196                     MOV DS:[BX], DL             ;WRITE VALUE HERE               
                           197                     
                           198                                    
                           199                    
0067 E2E0                  200                     LOOP forLoop2   ;LOOP          
                           201                                     
                           202                   
                           203                     
                           204      
0069 BA0000                205                     MOV DX, 0
006C 885404                206                     MOV DS:[SI+4], DL                 ;terminate string with null
                           207                     
                           208                     ;MOV SI, DI                    ;put back original SI value
006F 5F                    209                                     POP DI
8086/87/88/186 MACRO ASSEMBLER    CONVERTS                                                 12:49:54  05/04/:8  PAGE    5


LOC  OBJ                  LINE     SOURCE

0070 5E                    210                                     POP SI
0071 5A                    211                                     POP DX
0072 59                    212                                     POP CX
0073 5B                    213                                     POP BX
0074 58                    214                                     POP AX
0075 C3                    215             RET
                           216     ;------------------------------------------------------------------------------------
                                   --------
                           217     Hex2String      ENDP
                           218     
                           219     
                           220     
----                       221     CODE    ENDS
                           222     
                           223     
                           224     
                           225             END

ASSEMBLY COMPLETE, NO ERRORS FOUND
